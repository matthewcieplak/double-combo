ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"AmpSim.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1639:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1639:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1681:
  54              		.file 2 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn Constructor */
  18:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  19:../../libDaisy//src/hid/gatein.h **** 
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn Destructor */
  21:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 3


  55              		.loc 2 21 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 21 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1681:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67              		.section	.text._ZN5daisy3LedD2Ev,"axG",%progbits,_ZN5daisy3LedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy3LedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy3LedD2Ev:
  77              	.LVL2:
  78              	.LFB1844:
  79              		.file 3 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  80              		.loc 3 25 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 25 13 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE1844:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 4


  90              		.weak	_ZN5daisy3LedD1Ev
  91              		.thumb_set _ZN5daisy3LedD1Ev,_ZN5daisy3LedD2Ev
  92              		.section	.text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev,"axG",%progbits,_ZN5daisy8patch_sm12DaisyPatch
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev:
 102              	.LVL3:
 103              	.LFB2555:
 104              		.file 4 "../../libDaisy//src/daisy_patch_sm.h"
   1:../../libDaisy//src/daisy_patch_sm.h **** #pragma once
   2:../../libDaisy//src/daisy_patch_sm.h **** 
   3:../../libDaisy//src/daisy_patch_sm.h **** #include "daisy.h"
   4:../../libDaisy//src/daisy_patch_sm.h **** 
   5:../../libDaisy//src/daisy_patch_sm.h **** namespace daisy
   6:../../libDaisy//src/daisy_patch_sm.h **** {
   7:../../libDaisy//src/daisy_patch_sm.h **** namespace patch_sm
   8:../../libDaisy//src/daisy_patch_sm.h **** {
   9:../../libDaisy//src/daisy_patch_sm.h ****     /** Accessors for the Analog Controls. 
  10:../../libDaisy//src/daisy_patch_sm.h ****      *  These cover the 8x Bipolar CV inputs
  11:../../libDaisy//src/daisy_patch_sm.h ****      *  as well as the 4x 0-3V3 ADC inputs on
  12:../../libDaisy//src/daisy_patch_sm.h ****      *  the hardware 
  13:../../libDaisy//src/daisy_patch_sm.h ****      * 
  14:../../libDaisy//src/daisy_patch_sm.h ****      *  When reading a value with DaisyPatchSM::GetAdcValue()
  15:../../libDaisy//src/daisy_patch_sm.h ****      * 
  16:../../libDaisy//src/daisy_patch_sm.h ****      *  patch.GetAdcValue(patch_sm::CV_1);
  17:../../libDaisy//src/daisy_patch_sm.h ****      */
  18:../../libDaisy//src/daisy_patch_sm.h ****     enum
  19:../../libDaisy//src/daisy_patch_sm.h ****     {
  20:../../libDaisy//src/daisy_patch_sm.h ****         CV_1 = 0,
  21:../../libDaisy//src/daisy_patch_sm.h ****         CV_2,
  22:../../libDaisy//src/daisy_patch_sm.h ****         CV_3,
  23:../../libDaisy//src/daisy_patch_sm.h ****         CV_4,
  24:../../libDaisy//src/daisy_patch_sm.h ****         CV_5,
  25:../../libDaisy//src/daisy_patch_sm.h ****         CV_6,
  26:../../libDaisy//src/daisy_patch_sm.h ****         CV_7,
  27:../../libDaisy//src/daisy_patch_sm.h ****         CV_8,
  28:../../libDaisy//src/daisy_patch_sm.h ****         ADC_9,
  29:../../libDaisy//src/daisy_patch_sm.h ****         ADC_10,
  30:../../libDaisy//src/daisy_patch_sm.h ****         ADC_11,
  31:../../libDaisy//src/daisy_patch_sm.h ****         ADC_12,
  32:../../libDaisy//src/daisy_patch_sm.h ****         ADC_LAST,
  33:../../libDaisy//src/daisy_patch_sm.h ****     };
  34:../../libDaisy//src/daisy_patch_sm.h **** 
  35:../../libDaisy//src/daisy_patch_sm.h ****     /** Enum for addressing the CV Outputs via the WriteCvOut function. */
  36:../../libDaisy//src/daisy_patch_sm.h ****     enum
  37:../../libDaisy//src/daisy_patch_sm.h ****     {
  38:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_BOTH = 0,
  39:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_1,
  40:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_2,
  41:../../libDaisy//src/daisy_patch_sm.h ****     };
  42:../../libDaisy//src/daisy_patch_sm.h **** 
  43:../../libDaisy//src/daisy_patch_sm.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 5


  44:../../libDaisy//src/daisy_patch_sm.h ****     /** @brief Board support file for DaisyPatchSM hardware
  45:../../libDaisy//src/daisy_patch_sm.h ****      *  @author shensley
  46:../../libDaisy//src/daisy_patch_sm.h ****      *  @ingroup boards
  47:../../libDaisy//src/daisy_patch_sm.h ****      * 
  48:../../libDaisy//src/daisy_patch_sm.h ****      *  Daisy Patch SM is a complete Eurorack module DSP engine.
  49:../../libDaisy//src/daisy_patch_sm.h ****      *  Based on the Daisy Seed, with circuits added for 
  50:../../libDaisy//src/daisy_patch_sm.h ****      *  interfacing directly with eurorack modular synthesizers.
  51:../../libDaisy//src/daisy_patch_sm.h ****      */
  52:../../libDaisy//src/daisy_patch_sm.h ****     class DaisyPatchSM
  53:../../libDaisy//src/daisy_patch_sm.h ****     {
  54:../../libDaisy//src/daisy_patch_sm.h ****       public:
  55:../../libDaisy//src/daisy_patch_sm.h ****         /** Helper for mapping pins, and accessing them using the `GetPin` function */
  56:../../libDaisy//src/daisy_patch_sm.h ****         enum class PinBank
  57:../../libDaisy//src/daisy_patch_sm.h ****         {
  58:../../libDaisy//src/daisy_patch_sm.h ****             A,
  59:../../libDaisy//src/daisy_patch_sm.h ****             B,
  60:../../libDaisy//src/daisy_patch_sm.h ****             C,
  61:../../libDaisy//src/daisy_patch_sm.h ****             D
  62:../../libDaisy//src/daisy_patch_sm.h ****         };
  63:../../libDaisy//src/daisy_patch_sm.h **** 
  64:../../libDaisy//src/daisy_patch_sm.h ****         DaisyPatchSM() {}
  65:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 105              		.loc 4 65 9 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LBB405:
 111              	.LBI405:
 112              		.loc 2 21 5 view .LVU7
 113              		.loc 2 21 5 is_stmt 0 view .LVU8
 114              	.LBE405:
 115              	.LBB406:
 116              	.LBI406:
 117              		.loc 2 21 5 is_stmt 1 view .LVU9
 118              		.loc 2 21 5 is_stmt 0 view .LVU10
 119              	.LBE406:
 120              	.LBB407:
 121              	.LBI407:
 122              		.file 5 "../../libDaisy//src/dev/codec_pcm3060.h"
   1:../../libDaisy//src/dev/codec_pcm3060.h **** #pragma once
   2:../../libDaisy//src/dev/codec_pcm3060.h **** #ifndef DSY_CODEC_PCM3060_H
   3:../../libDaisy//src/dev/codec_pcm3060.h **** #define DSY_CODEC_PCM3060_H
   4:../../libDaisy//src/dev/codec_pcm3060.h **** #include "per/i2c.h"
   5:../../libDaisy//src/dev/codec_pcm3060.h **** namespace daisy
   6:../../libDaisy//src/dev/codec_pcm3060.h **** {
   7:../../libDaisy//src/dev/codec_pcm3060.h **** /**
   8:../../libDaisy//src/dev/codec_pcm3060.h ****  * @brief Driver for the TI PCM3060 Audio Codec.
   9:../../libDaisy//src/dev/codec_pcm3060.h ****  * @addtogroup codec
  10:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  11:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now this is a limited interface that uses I2C to communicate with the PCM3060
  12:../../libDaisy//src/dev/codec_pcm3060.h ****  * The device can also be accessed with SPI, which is not yet supported.
  13:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  14:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now all registers are set to their defaults, and the Init function will 
  15:../../libDaisy//src/dev/codec_pcm3060.h ****  * perform a MRST and SRST before setting the format to 24bit LJ, and disabling 
  16:../../libDaisy//src/dev/codec_pcm3060.h ****  * power save for both the ADC and DAC.
  17:../../libDaisy//src/dev/codec_pcm3060.h ****  *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 6


  18:../../libDaisy//src/dev/codec_pcm3060.h ****  */
  19:../../libDaisy//src/dev/codec_pcm3060.h **** class Pcm3060
  20:../../libDaisy//src/dev/codec_pcm3060.h **** {
  21:../../libDaisy//src/dev/codec_pcm3060.h ****   public:
  22:../../libDaisy//src/dev/codec_pcm3060.h ****     enum class Result
  23:../../libDaisy//src/dev/codec_pcm3060.h ****     {
  24:../../libDaisy//src/dev/codec_pcm3060.h ****         OK,
  25:../../libDaisy//src/dev/codec_pcm3060.h ****         ERR,
  26:../../libDaisy//src/dev/codec_pcm3060.h ****     };
  27:../../libDaisy//src/dev/codec_pcm3060.h **** 
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     Pcm3060() {}
  29:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 123              		.loc 5 29 5 is_stmt 1 view .LVU11
 124              		.loc 5 29 5 is_stmt 0 view .LVU12
 125              	.LBE407:
 126              	.LBB408:
 127              	.LBI408:
 128              		.file 6 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 7


  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 129              		.loc 6 42 5 is_stmt 1 view .LVU13
 130              		.loc 6 42 5 is_stmt 0 view .LVU14
 131              	.LBE408:
 132              	.LBB409:
 133              	.LBI409:
 134              		.file 7 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 8


  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 9


 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 135              		.loc 7 110 5 is_stmt 1 view .LVU15
 136              		.loc 7 110 5 is_stmt 0 view .LVU16
 137              	.LBE409:
 138              	.LBB410:
 139              	.LBI410:
 140              		.file 8 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 10


  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 141              		.loc 8 96 5 is_stmt 1 view .LVU17
 142              		.loc 8 96 5 is_stmt 0 view .LVU18
 143              	.LBE410:
 144              	.LBB411:
 145              	.LBI411:
 146              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 11


   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 12


  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 147              		.loc 9 97 5 is_stmt 1 view .LVU19
 148              		.loc 9 97 5 is_stmt 0 view .LVU20
 149              	.LBE411:
 150              		.loc 4 65 26 view .LVU21
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE2555:
 155              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 156              		.thumb_set _ZN5daisy8patch_sm12DaisyPatchSMD1Ev,_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
 157 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 158              		.align	1
 159              		.p2align 2,,3
 160              		.weak	_ZN7daisysp10OscillatorD2Ev
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	_ZN7daisysp10OscillatorD2Ev:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 13


 167              	.LVL4:
 168              	.LFB4244:
 169              		.file 10 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 170              		.loc 10 24 5 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              		.loc 10 24 20 is_stmt 0 view .LVU23
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE4244:
 180              		.weak	_ZN7daisysp10OscillatorD1Ev
 181              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 182              		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 183              		.align	1
 184              		.p2align 2,,3
 185              		.weak	_ZN7daisysp3SvfD2Ev
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-d16
 191              	_ZN7daisysp3SvfD2Ev:
 192              	.LVL5:
 193              	.LFB4261:
 194              		.file 11 "../../DaisySP//Source/Filters/svf.h"
   1:../../DaisySP//Source/Filters/svf.h **** /*
   2:../../DaisySP//Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Filters/svf.h **** 
   4:../../DaisySP//Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/svf.h **** */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 14


   8:../../DaisySP//Source/Filters/svf.h **** 
   9:../../DaisySP//Source/Filters/svf.h **** #pragma once
  10:../../DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../DaisySP//Source/Filters/svf.h **** 
  13:../../DaisySP//Source/Filters/svf.h **** namespace daisysp
  14:../../DaisySP//Source/Filters/svf.h **** {
  15:../../DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../DaisySP//Source/Filters/svf.h **** 
  17:../../DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../DaisySP//Source/Filters/svf.h **** 
  19:../../DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../DaisySP//Source/Filters/svf.h **** 
  21:../../DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../DaisySP//Source/Filters/svf.h **** 
  24:../../DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../DaisySP//Source/Filters/svf.h **** */
  26:../../DaisySP//Source/Filters/svf.h **** class Svf
  27:../../DaisySP//Source/Filters/svf.h **** {
  28:../../DaisySP//Source/Filters/svf.h ****   public:
  29:../../DaisySP//Source/Filters/svf.h ****     Svf() {}
  30:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 195              		.loc 11 30 5 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              		.loc 11 30 13 is_stmt 0 view .LVU25
 201 0000 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE4261:
 205              		.weak	_ZN7daisysp3SvfD1Ev
 206              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 207              		.section	.text._ZN7daisysp9OverdriveD2Ev,"axG",%progbits,_ZN7daisysp9OverdriveD5Ev,comdat
 208              		.align	1
 209              		.p2align 2,,3
 210              		.weak	_ZN7daisysp9OverdriveD2Ev
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv5-d16
 216              	_ZN7daisysp9OverdriveD2Ev:
 217              	.LVL6:
 218              	.LFB4398:
 219              		.file 12 "../../DaisySP//Source/Effects/overdrive.h"
   1:../../DaisySP//Source/Effects/overdrive.h **** /*
   2:../../DaisySP//Source/Effects/overdrive.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Effects/overdrive.h **** 
   4:../../DaisySP//Source/Effects/overdrive.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Effects/overdrive.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Effects/overdrive.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Effects/overdrive.h **** */
   8:../../DaisySP//Source/Effects/overdrive.h **** 
   9:../../DaisySP//Source/Effects/overdrive.h **** #pragma once
  10:../../DaisySP//Source/Effects/overdrive.h **** #ifndef DSY_OVERDRIVE_H
  11:../../DaisySP//Source/Effects/overdrive.h **** #define DSY_OVERDRIVE_H
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 15


  12:../../DaisySP//Source/Effects/overdrive.h **** 
  13:../../DaisySP//Source/Effects/overdrive.h **** #include <stdint.h>
  14:../../DaisySP//Source/Effects/overdrive.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Effects/overdrive.h **** 
  16:../../DaisySP//Source/Effects/overdrive.h **** /** @file overdrive.h */
  17:../../DaisySP//Source/Effects/overdrive.h **** 
  18:../../DaisySP//Source/Effects/overdrive.h **** namespace daisysp
  19:../../DaisySP//Source/Effects/overdrive.h **** {
  20:../../DaisySP//Source/Effects/overdrive.h **** /**  
  21:../../DaisySP//Source/Effects/overdrive.h ****        @brief Distortion / Overdrive Module
  22:../../DaisySP//Source/Effects/overdrive.h ****        @author Ported by Ben Sergentanis 
  23:../../DaisySP//Source/Effects/overdrive.h ****        @date Jan 2021 
  24:../../DaisySP//Source/Effects/overdrive.h ****        Ported from pichenettes/eurorack/plaits/dsp/fx/overdrive.h \n
  25:../../DaisySP//Source/Effects/overdrive.h ****        to an independent module. \n
  26:../../DaisySP//Source/Effects/overdrive.h ****        Original code written by Emilie Gillet in 2014. \n
  27:../../DaisySP//Source/Effects/overdrive.h **** */
  28:../../DaisySP//Source/Effects/overdrive.h **** class Overdrive
  29:../../DaisySP//Source/Effects/overdrive.h **** {
  30:../../DaisySP//Source/Effects/overdrive.h ****   public:
  31:../../DaisySP//Source/Effects/overdrive.h ****     Overdrive() {}
  32:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 220              		.loc 12 32 5 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              		.loc 12 32 19 is_stmt 0 view .LVU27
 226 0000 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE4398:
 230              		.weak	_ZN7daisysp9OverdriveD1Ev
 231              		.thumb_set _ZN7daisysp9OverdriveD1Ev,_ZN7daisysp9OverdriveD2Ev
 232              		.section	.text._ZN7daisysp7OnePoleD2Ev,"axG",%progbits,_ZN7daisysp7OnePoleD5Ev,comdat
 233              		.align	1
 234              		.p2align 2,,3
 235              		.weak	_ZN7daisysp7OnePoleD2Ev
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-d16
 241              	_ZN7daisysp7OnePoleD2Ev:
 242              	.LVL7:
 243              	.LFB4456:
 244              		.file 13 "../../DaisySP//Source/Filters/onepole.h"
   1:../../DaisySP//Source/Filters/onepole.h **** /*
   2:../../DaisySP//Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Filters/onepole.h **** 
   4:../../DaisySP//Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/onepole.h **** */
   8:../../DaisySP//Source/Filters/onepole.h **** 
   9:../../DaisySP//Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../../DaisySP//Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../../DaisySP//Source/Filters/onepole.h **** 
  12:../../DaisySP//Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../../DaisySP//Source/Filters/onepole.h **** #include <cmath>
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 16


  14:../../DaisySP//Source/Filters/onepole.h **** #include <algorithm>
  15:../../DaisySP//Source/Filters/onepole.h **** 
  16:../../DaisySP//Source/Filters/onepole.h **** namespace daisysp
  17:../../DaisySP//Source/Filters/onepole.h **** {
  18:../../DaisySP//Source/Filters/onepole.h **** /**         
  19:../../DaisySP//Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../../DaisySP//Source/Filters/onepole.h ****     @author beserge
  21:../../DaisySP//Source/Filters/onepole.h ****     @date Dec 2023 
  22:../../DaisySP//Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../../DaisySP//Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../../DaisySP//Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../../DaisySP//Source/Filters/onepole.h **** */
  26:../../DaisySP//Source/Filters/onepole.h **** class OnePole
  27:../../DaisySP//Source/Filters/onepole.h **** {
  28:../../DaisySP//Source/Filters/onepole.h ****   public:
  29:../../DaisySP//Source/Filters/onepole.h ****     OnePole() {}
  30:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 245              		.loc 13 30 5 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              		.loc 13 30 17 is_stmt 0 view .LVU29
 251 0000 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE4456:
 255              		.weak	_ZN7daisysp7OnePoleD1Ev
 256              		.thumb_set _ZN7daisysp7OnePoleD1Ev,_ZN7daisysp7OnePoleD2Ev
 257              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 258              		.align	1
 259              		.p2align 2,,3
 260              		.global	_Z13AudioCallbackPKPKfPPfj
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv5-d16
 266              	_Z13AudioCallbackPKPKfPPfj:
 267              	.LVL8:
 268              	.LFB4685:
 269              		.file 14 "AmpSim.cpp"
   1:AmpSim.cpp    **** // #include "daisy_seed.h"
   2:AmpSim.cpp    **** 
   3:AmpSim.cpp    **** /** Our hardware board class handles the interface to the actual DaisyPatchSM
   4:AmpSim.cpp    ****  * hardware. */
   5:AmpSim.cpp    **** #include "daisy_patch_sm.h"
   6:AmpSim.cpp    **** #include "daisysp.h"
   7:AmpSim.cpp    **** // #include "onepole.h"
   8:AmpSim.cpp    **** 
   9:AmpSim.cpp    **** #define BUTTON_SAMPLE_RATE 100
  10:AmpSim.cpp    **** #define TIME_LED_BRIGHTNESS 0.6
  11:AmpSim.cpp    **** 
  12:AmpSim.cpp    **** using namespace daisy;
  13:AmpSim.cpp    **** // using namespace daisy::seed;
  14:AmpSim.cpp    **** using namespace patch_sm;
  15:AmpSim.cpp    **** 
  16:AmpSim.cpp    **** using namespace daisysp;
  17:AmpSim.cpp    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 17


  18:AmpSim.cpp    **** // DaisySeed hw;
  19:AmpSim.cpp    **** DaisyPatchSM hw;
  20:AmpSim.cpp    **** 
  21:AmpSim.cpp    **** 
  22:AmpSim.cpp    **** static OnePole AmpLowPass;
  23:AmpSim.cpp    **** static Svf BassLowPass;
  24:AmpSim.cpp    **** static Svf    AmpBandPass;
  25:AmpSim.cpp    **** static Svf    TrebleBandPass;
  26:AmpSim.cpp    **** static Svf    MidBandPass;
  27:AmpSim.cpp    **** static Overdrive Drive;
  28:AmpSim.cpp    **** 
  29:AmpSim.cpp    **** float knob_gain, knob_volume, knob_treble, knob_mid_gain, knob_bass, knob_color, knob_fx_dry_wet, k
  30:AmpSim.cpp    **** int16_t  knob_mid_freq;
  31:AmpSim.cpp    **** 
  32:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
  33:AmpSim.cpp    **** 
  34:AmpSim.cpp    **** GPIO led_link, led_blend, led_delay, led_reverb, led_split, led_stereo, led_time; //TODO reverse or
  35:AmpSim.cpp    **** 
  36:AmpSim.cpp    **** Led led_time_pwm;
  37:AmpSim.cpp    **** 
  38:AmpSim.cpp    **** bool state_link, state_blend, state_fx, state_stereo, state_cv, state_stereo_button, state_cv_butto
  39:AmpSim.cpp    **** 
  40:AmpSim.cpp    **** GateIn button_stereo, button_cv;
  41:AmpSim.cpp    **** 
  42:AmpSim.cpp    **** Oscillator time_osc;
  43:AmpSim.cpp    **** 
  44:AmpSim.cpp    **** 
  45:AmpSim.cpp    **** 
  46:AmpSim.cpp    **** 
  47:AmpSim.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  48:AmpSim.cpp    **** {
 270              		.loc 14 48 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 0, uses_anonymous_args = 0
  49:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 274              		.loc 14 49 2 view .LVU31
 275              	.LBB428:
 276              		.loc 14 49 23 view .LVU32
 277              	.LBE428:
  48:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 278              		.loc 14 48 1 is_stmt 0 view .LVU33
 279 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 280              		.cfi_def_cfa_offset 36
 281              		.cfi_offset 4, -36
 282              		.cfi_offset 5, -32
 283              		.cfi_offset 6, -28
 284              		.cfi_offset 7, -24
 285              		.cfi_offset 8, -20
 286              		.cfi_offset 9, -16
 287              		.cfi_offset 10, -12
 288              		.cfi_offset 11, -8
 289              		.cfi_offset 14, -4
 290 0004 2DED048B 		vpush.64	{d8, d9}
 291              		.cfi_def_cfa_offset 52
 292              		.cfi_offset 80, -52
 293              		.cfi_offset 81, -48
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 18


 294              		.cfi_offset 82, -44
 295              		.cfi_offset 83, -40
 296 0008 83B0     		sub	sp, sp, #12
 297              		.cfi_def_cfa_offset 64
 298              	.LBB457:
 299              		.loc 14 49 23 view .LVU34
 300 000a 0192     		str	r2, [sp, #4]
 301 000c 002A     		cmp	r2, #0
 302 000e 00F0E880 		beq	.L10
 303 0012 0646     		mov	r6, r0
 304              		.loc 14 49 14 view .LVU35
 305 0014 0025     		movs	r5, #0
 306 0016 DFF8F4B1 		ldr	fp, .L23+28
 307 001a 8A46     		mov	r10, r1
 308 001c 784F     		ldr	r7, .L23+16
 309 001e 794C     		ldr	r4, .L23+20
 310 0020 DFF82882 		ldr	r8, .L23+92
 311              	.LVL9:
 312              	.L13:
 313              	.LBB429:
  50:AmpSim.cpp    **** 	{
  51:AmpSim.cpp    **** 		float f1, f2;
 314              		.loc 14 51 3 is_stmt 1 discriminator 2 view .LVU36
  52:AmpSim.cpp    **** 		MidBandPass.SetFreq(knob_mid_freq);
 315              		.loc 14 52 3 discriminator 2 view .LVU37
 316              		.loc 14 52 22 is_stmt 0 discriminator 2 view .LVU38
 317 0024 784B     		ldr	r3, .L23+24
 318 0026 4FEA8509 		lsl	r9, r5, #2
 319 002a 7848     		ldr	r0, .L23+28
  53:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
  54:AmpSim.cpp    **** 		MidBandPass.Process(in[0][i]);
  55:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 320              		.loc 14 55 49 discriminator 2 view .LVU39
 321 002c B0EE009B 		vmov.f64	d9, #2.0e+0
  52:AmpSim.cpp    **** 		MidBandPass.SetFreq(knob_mid_freq);
 322              		.loc 14 52 22 discriminator 2 view .LVU40
 323 0030 B3F90030 		ldrsh	r3, [r3]
 324 0034 00EE103A 		vmov	s0, r3	@ int
 325 0038 B8EEC00A 		vcvt.f32.s32	s0, s0
 326 003c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 327              	.LVL10:
  53:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 328              		.loc 14 53 3 is_stmt 1 discriminator 2 view .LVU41
 329              	.LBB430:
 330              	.LBI430:
 331              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 19


  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 20


  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
 332              		.loc 15 75 3 discriminator 2 view .LVU42
 333              	.LBB431:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 334              		.loc 15 76 5 discriminator 2 view .LVU43
 335              		.loc 15 76 31 is_stmt 0 discriminator 2 view .LVU44
 336 0040 D7ED007A 		vldr.32	s15, [r7]
 337              	.LBE431:
 338              	.LBE430:
  53:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 339              		.loc 14 53 21 discriminator 2 view .LVU45
 340 0044 B6EE000A 		vmov.f32	s0, #5.0e-1
 341 0048 7048     		ldr	r0, .L23+28
 342              	.LBB433:
 343              	.LBB432:
 344              		.loc 15 76 31 discriminator 2 view .LVU46
 345 004a F0EEE77A 		vabs.f32	s15, s15
 346              	.LBE432:
 347              	.LBE433:
  53:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 348              		.loc 14 53 21 discriminator 2 view .LVU47
 349 004e 27EE800A 		vmul.f32	s0, s15, s0
 350 0052 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 351              	.LVL11:
  54:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 352              		.loc 14 54 3 is_stmt 1 discriminator 2 view .LVU48
  54:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 353              		.loc 14 54 22 is_stmt 0 discriminator 2 view .LVU49
 354 0056 3368     		ldr	r3, [r6]
 355 0058 6C48     		ldr	r0, .L23+28
 356 005a 03EB8503 		add	r3, r3, r5, lsl #2
 357 005e 93ED000A 		vldr.32	s0, [r3]
 358 0062 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 359              	.LVL12:
 360              		.loc 14 55 3 is_stmt 1 discriminator 2 view .LVU50
 361              	.LBB434:
 362              	.LBI434:
  31:../../DaisySP//Source/Filters/svf.h ****     /** Initializes the filter
  32:../../DaisySP//Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  33:../../DaisySP//Source/Filters/svf.h ****     */
  34:../../DaisySP//Source/Filters/svf.h ****     void Init(float sample_rate);
  35:../../DaisySP//Source/Filters/svf.h **** 
  36:../../DaisySP//Source/Filters/svf.h **** 
  37:../../DaisySP//Source/Filters/svf.h ****     /** 
  38:../../DaisySP//Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  39:../../DaisySP//Source/Filters/svf.h ****     */
  40:../../DaisySP//Source/Filters/svf.h ****     void Process(float in);
  41:../../DaisySP//Source/Filters/svf.h **** 
  42:../../DaisySP//Source/Filters/svf.h **** 
  43:../../DaisySP//Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  44:../../DaisySP//Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 21


  45:../../DaisySP//Source/Filters/svf.h ****     */
  46:../../DaisySP//Source/Filters/svf.h ****     void SetFreq(float f);
  47:../../DaisySP//Source/Filters/svf.h **** 
  48:../../DaisySP//Source/Filters/svf.h ****     /** sets the resonance of the filter.
  49:../../DaisySP//Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  50:../../DaisySP//Source/Filters/svf.h ****     */
  51:../../DaisySP//Source/Filters/svf.h ****     void SetRes(float r);
  52:../../DaisySP//Source/Filters/svf.h **** 
  53:../../DaisySP//Source/Filters/svf.h ****     /** sets the drive of the filter 
  54:../../DaisySP//Source/Filters/svf.h ****         affects the response of the resonance of the filter
  55:../../DaisySP//Source/Filters/svf.h ****     */
  56:../../DaisySP//Source/Filters/svf.h ****     void SetDrive(float d);
  57:../../DaisySP//Source/Filters/svf.h ****     /** lowpass output
  58:../../DaisySP//Source/Filters/svf.h ****         \return low pass output of the filter
  59:../../DaisySP//Source/Filters/svf.h ****     */
  60:../../DaisySP//Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  61:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
  62:../../DaisySP//Source/Filters/svf.h ****         \return high pass output of the filter
  63:../../DaisySP//Source/Filters/svf.h ****     */
  64:../../DaisySP//Source/Filters/svf.h ****     inline float High() { return out_high_; }
  65:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
  66:../../DaisySP//Source/Filters/svf.h ****         \return band pass output of the filter
  67:../../DaisySP//Source/Filters/svf.h ****     */
  68:../../DaisySP//Source/Filters/svf.h ****     inline float Band() { return out_band_; }
 363              		.loc 11 68 18 discriminator 2 view .LVU51
 364              	.LBB435:
 365              		.loc 11 68 27 discriminator 2 view .LVU52
 366              		.loc 11 68 27 is_stmt 0 discriminator 2 view .LVU53
 367              	.LBE435:
 368              	.LBE434:
  56:AmpSim.cpp    **** 
  57:AmpSim.cpp    **** 		Drive.SetDrive(knob_gain);
 369              		.loc 14 57 17 discriminator 2 view .LVU54
 370 0066 6A4B     		ldr	r3, .L23+32
  55:AmpSim.cpp    **** 
 371              		.loc 14 55 27 discriminator 2 view .LVU55
 372 0068 DBED0E7A 		vldr.32	s15, [fp, #56]
 373              		.loc 14 57 17 discriminator 2 view .LVU56
 374 006c 93ED000A 		vldr.32	s0, [r3]
  55:AmpSim.cpp    **** 
 375              		.loc 14 55 58 discriminator 2 view .LVU57
 376 0070 3368     		ldr	r3, [r6]
  55:AmpSim.cpp    **** 
 377              		.loc 14 55 27 discriminator 2 view .LVU58
 378 0072 97ED007A 		vldr.32	s14, [r7]
  55:AmpSim.cpp    **** 
 379              		.loc 14 55 58 discriminator 2 view .LVU59
 380 0076 4B44     		add	r3, r3, r9
 381              		.loc 14 57 17 discriminator 2 view .LVU60
 382 0078 6648     		ldr	r0, .L23+36
  55:AmpSim.cpp    **** 
 383              		.loc 14 55 27 discriminator 2 view .LVU61
 384 007a 27EE277A 		vmul.f32	s14, s14, s15
  55:AmpSim.cpp    **** 
 385              		.loc 14 55 58 discriminator 2 view .LVU62
 386 007e 93ED008A 		vldr.32	s16, [r3]
  55:AmpSim.cpp    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 22


 387              		.loc 14 55 27 discriminator 2 view .LVU63
 388 0082 B7EEC77A 		vcvt.f64.f32	d7, s14
  55:AmpSim.cpp    **** 
 389              		.loc 14 55 58 discriminator 2 view .LVU64
 390 0086 B7EEC88A 		vcvt.f64.f32	d8, s16
  55:AmpSim.cpp    **** 
 391              		.loc 14 55 49 discriminator 2 view .LVU65
 392 008a A7EE098B 		vfma.f64	d8, d7, d9
 393              	.LVL13:
 394              		.loc 14 57 3 is_stmt 1 discriminator 2 view .LVU66
 395              		.loc 14 57 17 is_stmt 0 discriminator 2 view .LVU67
 396 008e FFF7FEFF 		bl	_ZN7daisysp9Overdrive8SetDriveEf
 397              	.LVL14:
  58:AmpSim.cpp    **** 		f2 = Drive.Process(f1);
 398              		.loc 14 58 3 is_stmt 1 discriminator 2 view .LVU68
 399              		.loc 14 58 21 is_stmt 0 discriminator 2 view .LVU69
 400 0092 6048     		ldr	r0, .L23+36
 401 0094 B7EEC80B 		vcvt.f32.f64	s0, d8
 402              	.LVL15:
 403              		.loc 14 58 21 discriminator 2 view .LVU70
 404 0098 FFF7FEFF 		bl	_ZN7daisysp9Overdrive7ProcessEf
 405              	.LVL16:
 406              		.loc 14 58 21 discriminator 2 view .LVU71
 407 009c B0EE408A 		vmov.f32	s16, s0
 408              	.LVL17:
  59:AmpSim.cpp    **** 
  60:AmpSim.cpp    **** 
  61:AmpSim.cpp    **** 
  62:AmpSim.cpp    **** 		TrebleBandPass.SetRes(0.2);
 409              		.loc 14 62 3 is_stmt 1 discriminator 2 view .LVU72
 410              		.loc 14 62 24 is_stmt 0 discriminator 2 view .LVU73
 411 00a0 5D48     		ldr	r0, .L23+40
 412 00a2 9FED5E0A 		vldr.32	s0, .L23+44
 413              	.LVL18:
 414              		.loc 14 62 24 discriminator 2 view .LVU74
 415 00a6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 416              	.LVL19:
  63:AmpSim.cpp    **** 		TrebleBandPass.SetFreq(3500);
 417              		.loc 14 63 3 is_stmt 1 discriminator 2 view .LVU75
 418              		.loc 14 63 25 is_stmt 0 discriminator 2 view .LVU76
 419 00aa 9FED5D0A 		vldr.32	s0, .L23+48
 420 00ae 5A48     		ldr	r0, .L23+40
 421 00b0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 422              	.LVL20:
  64:AmpSim.cpp    **** 		TrebleBandPass.Process(f2);
 423              		.loc 14 64 3 is_stmt 1 discriminator 2 view .LVU77
 424              		.loc 14 64 25 is_stmt 0 discriminator 2 view .LVU78
 425 00b4 B0EE480A 		vmov.f32	s0, s16
 426 00b8 5748     		ldr	r0, .L23+40
 427 00ba FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 428              	.LVL21:
  65:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
 429              		.loc 14 65 3 is_stmt 1 discriminator 2 view .LVU79
 430              	.LBB436:
 431              	.LBI436:
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 432              		.loc 11 64 18 discriminator 2 view .LVU80
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 23


 433              	.LBB437:
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 434              		.loc 11 64 27 discriminator 2 view .LVU81
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 435              		.loc 11 64 27 is_stmt 0 discriminator 2 view .LVU82
 436              	.LBE437:
 437              	.LBE436:
 438              		.loc 14 65 31 discriminator 2 view .LVU83
 439 00be 594B     		ldr	r3, .L23+52
 440              		.loc 14 65 54 discriminator 2 view .LVU84
 441 00c0 B7EEC87A 		vcvt.f64.f32	d7, s16
  66:AmpSim.cpp    **** 
  67:AmpSim.cpp    **** 
  68:AmpSim.cpp    **** 		
  69:AmpSim.cpp    **** 		BassLowPass.SetRes(0.2);
 442              		.loc 14 69 21 discriminator 2 view .LVU85
 443 00c4 9FED550A 		vldr.32	s0, .L23+44
  65:AmpSim.cpp    **** 
 444              		.loc 14 65 31 discriminator 2 view .LVU86
 445 00c8 93ED006A 		vldr.32	s12, [r3]
 446 00cc 524B     		ldr	r3, .L23+40
 447              		.loc 14 69 21 discriminator 2 view .LVU87
 448 00ce 5648     		ldr	r0, .L23+56
  65:AmpSim.cpp    **** 
 449              		.loc 14 65 31 discriminator 2 view .LVU88
 450 00d0 D3ED0D6A 		vldr.32	s13, [r3, #52]
 451 00d4 26EE266A 		vmul.f32	s12, s12, s13
 452 00d8 B7EEC66A 		vcvt.f64.f32	d6, s12
  65:AmpSim.cpp    **** 
 453              		.loc 14 65 52 discriminator 2 view .LVU89
 454 00dc A6EE097B 		vfma.f64	d7, d6, d9
  65:AmpSim.cpp    **** 
 455              		.loc 14 65 6 discriminator 2 view .LVU90
 456 00e0 B7EEC78B 		vcvt.f32.f64	s16, d7
 457              	.LVL22:
 458              		.loc 14 69 3 is_stmt 1 discriminator 2 view .LVU91
 459              		.loc 14 69 21 is_stmt 0 discriminator 2 view .LVU92
 460 00e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 461              	.LVL23:
  70:AmpSim.cpp    **** 		BassLowPass.SetFreq(300); //(bassValue + 0.5) * 10000);
 462              		.loc 14 70 3 is_stmt 1 discriminator 2 view .LVU93
 463              		.loc 14 70 22 is_stmt 0 discriminator 2 view .LVU94
 464 00e8 9FED500A 		vldr.32	s0, .L23+60
 465 00ec 4E48     		ldr	r0, .L23+56
 466 00ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 467              	.LVL24:
  71:AmpSim.cpp    **** 		BassLowPass.Process(f1);
 468              		.loc 14 71 3 is_stmt 1 discriminator 2 view .LVU95
 469              		.loc 14 71 22 is_stmt 0 discriminator 2 view .LVU96
 470 00f2 B0EE480A 		vmov.f32	s0, s16
 471 00f6 4C48     		ldr	r0, .L23+56
 472 00f8 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 473              	.LVL25:
  72:AmpSim.cpp    **** 		f2 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 474              		.loc 14 72 3 is_stmt 1 discriminator 2 view .LVU97
 475              	.LBB438:
 476              	.LBI438:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 24


  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 477              		.loc 11 60 18 discriminator 2 view .LVU98
 478              	.LBB439:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 479              		.loc 11 60 26 discriminator 2 view .LVU99
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 480              		.loc 11 60 26 is_stmt 0 discriminator 2 view .LVU100
 481              	.LBE439:
 482              	.LBE438:
 483              		.loc 14 72 26 discriminator 2 view .LVU101
 484 00fc 4C4B     		ldr	r3, .L23+64
 485              		.loc 14 72 46 discriminator 2 view .LVU102
 486 00fe B7EEC87A 		vcvt.f64.f32	d7, s16
 487              	.LBB440:
 488              	.LBB441:
  31:../../DaisySP//Source/Filters/onepole.h **** 
  32:../../DaisySP//Source/Filters/onepole.h ****     /**
  33:../../DaisySP//Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../../DaisySP//Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../../DaisySP//Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../../DaisySP//Source/Filters/onepole.h ****      */
  37:../../DaisySP//Source/Filters/onepole.h ****     enum FilterMode
  38:../../DaisySP//Source/Filters/onepole.h ****     {
  39:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../../DaisySP//Source/Filters/onepole.h ****     };
  42:../../DaisySP//Source/Filters/onepole.h **** 
  43:../../DaisySP//Source/Filters/onepole.h ****     /** Initializes the module */
  44:../../DaisySP//Source/Filters/onepole.h ****     void Init()
  45:../../DaisySP//Source/Filters/onepole.h ****     {
  46:../../DaisySP//Source/Filters/onepole.h ****         Reset();
  47:../../DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
  48:../../DaisySP//Source/Filters/onepole.h ****     }
  49:../../DaisySP//Source/Filters/onepole.h **** 
  50:../../DaisySP//Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../../DaisySP//Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
  52:../../DaisySP//Source/Filters/onepole.h **** 
  53:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../../DaisySP//Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../../DaisySP//Source/Filters/onepole.h ****     */
  56:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
  57:../../DaisySP//Source/Filters/onepole.h ****     {
  58:../../DaisySP//Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../../DaisySP//Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
  60:../../DaisySP//Source/Filters/onepole.h **** 
  61:../../DaisySP//Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
 489              		.loc 13 61 13 discriminator 2 view .LVU103
 490 0102 DFED4C5A 		vldr.32	s11, .L23+68
 491              	.LBE441:
 492              	.LBE440:
 493              		.loc 14 72 26 discriminator 2 view .LVU104
 494 0106 93ED006A 		vldr.32	s12, [r3]
 495 010a 474B     		ldr	r3, .L23+56
 496              	.LBB445:
 497              	.LBB446:
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
  63:../../DaisySP//Source/Filters/onepole.h ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 25


  64:../../DaisySP//Source/Filters/onepole.h **** 
  65:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter mode
  66:../../DaisySP//Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../../DaisySP//Source/Filters/onepole.h ****     */
  68:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
  69:../../DaisySP//Source/Filters/onepole.h **** 
  70:../../DaisySP//Source/Filters/onepole.h ****     /** Process audio through the filter
  71:../../DaisySP//Source/Filters/onepole.h ****     *   \param in The next sample to be processed
  72:../../DaisySP//Source/Filters/onepole.h ****     */
  73:../../DaisySP//Source/Filters/onepole.h ****     inline float Process(float in)
  74:../../DaisySP//Source/Filters/onepole.h ****     {
  75:../../DaisySP//Source/Filters/onepole.h ****         float lp;
  76:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 498              		.loc 13 76 27 discriminator 2 view .LVU105
 499 010c 94ED020A 		vldr.32	s0, [r4, #8]
 500              	.LBE446:
 501              	.LBE445:
 502              		.loc 14 72 26 discriminator 2 view .LVU106
 503 0110 D3ED0C6A 		vldr.32	s13, [r3, #48]
 504              	.LBB449:
 505              	.LBB442:
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 506              		.loc 13 62 13 discriminator 2 view .LVU107
 507 0114 9FED488A 		vldr.32	s16, .L23+72
 508              	.LVL26:
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 509              		.loc 13 62 13 discriminator 2 view .LVU108
 510              	.LBE442:
 511              	.LBE449:
 512              		.loc 14 72 26 discriminator 2 view .LVU109
 513 0118 26EE266A 		vmul.f32	s12, s12, s13
 514              	.LBB450:
 515              	.LBB447:
  77:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
  78:../../DaisySP//Source/Filters/onepole.h **** 
  79:../../DaisySP//Source/Filters/onepole.h ****         switch(mode_)
 516              		.loc 13 79 16 discriminator 2 view .LVU110
 517 011c 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 518              	.LBE447:
 519              	.LBE450:
 520              	.LBB451:
 521              	.LBB443:
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 522              		.loc 13 62 13 discriminator 2 view .LVU111
 523 011e 84ED018A 		vstr.32	s16, [r4, #4]
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 524              		.loc 13 61 13 discriminator 2 view .LVU112
 525 0122 C4ED005A 		vstr.32	s11, [r4]
 526              	.LBE443:
 527              	.LBE451:
 528              		.loc 14 72 26 discriminator 2 view .LVU113
 529 0126 B7EEC66A 		vcvt.f64.f32	d6, s12
 530              		.loc 14 72 44 discriminator 2 view .LVU114
 531 012a A6EE097B 		vfma.f64	d7, d6, d9
 532              		.loc 14 72 6 discriminator 2 view .LVU115
 533 012e B7EEC77B 		vcvt.f32.f64	s14, d7
 534              	.LVL27:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 26


  73:AmpSim.cpp    **** 		// f2 = (f2 * bassValue);// - f1;
  74:AmpSim.cpp    **** 
  75:AmpSim.cpp    **** 		// AmpLowPass.SetRes(0.2);
  76:AmpSim.cpp    **** 		AmpLowPass.SetFrequency(4100); //(bassValue + 0.5) * 10000);
 535              		.loc 14 76 3 is_stmt 1 discriminator 2 view .LVU116
 536              	.LBB452:
 537              	.LBI440:
  56:../../DaisySP//Source/Filters/onepole.h ****     {
 538              		.loc 13 56 17 discriminator 2 view .LVU117
 539              	.LBB444:
  59:../../DaisySP//Source/Filters/onepole.h **** 
 540              		.loc 13 59 9 discriminator 2 view .LVU118
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 541              		.loc 13 61 9 discriminator 2 view .LVU119
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 542              		.loc 13 62 9 discriminator 2 view .LVU120
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 543              		.loc 13 62 9 is_stmt 0 discriminator 2 view .LVU121
 544              	.LBE444:
 545              	.LBE452:
  77:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f2);
 546              		.loc 14 77 3 is_stmt 1 discriminator 2 view .LVU122
 547              	.LBB453:
 548              	.LBI445:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 549              		.loc 13 73 18 discriminator 2 view .LVU123
 550              	.LBB448:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 551              		.loc 13 75 9 discriminator 2 view .LVU124
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 552              		.loc 13 76 9 discriminator 2 view .LVU125
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 553              		.loc 13 76 27 is_stmt 0 discriminator 2 view .LVU126
 554 0132 A7EE250A 		vfma.f32	s0, s14, s11
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 555              		.loc 13 76 16 discriminator 2 view .LVU127
 556 0136 20EE088A 		vmul.f32	s16, s0, s16
 557              	.LVL28:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 558              		.loc 13 77 9 is_stmt 1 discriminator 2 view .LVU128
  77:../../DaisySP//Source/Filters/onepole.h **** 
 559              		.loc 13 77 27 is_stmt 0 discriminator 2 view .LVU129
 560 013a 37EE487A 		vsub.f32	s14, s14, s16
 561              	.LVL29:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 562              		.loc 13 77 33 discriminator 2 view .LVU130
 563 013e F0EE487A 		vmov.f32	s15, s16
 564 0142 E7EE257A 		vfma.f32	s15, s14, s11
  77:../../DaisySP//Source/Filters/onepole.h **** 
 565              		.loc 13 77 16 discriminator 2 view .LVU131
 566 0146 C4ED027A 		vstr.32	s15, [r4, #8]
 567              		.loc 13 79 9 is_stmt 1 discriminator 2 view .LVU132
 568 014a 23B1     		cbz	r3, .L12
 569              		.loc 13 79 9 is_stmt 0 view .LVU133
 570 014c 012B     		cmp	r3, #1
 571 014e 9FED3B0A 		vldr.32	s0, .L23+76
 572 0152 07FE008A 		vseleq.f32	s16, s14, s0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 27


 573              	.LVL30:
 574              	.L12:
 575              		.loc 13 79 9 view .LVU134
 576              	.LBE448:
 577              	.LBE453:
  78:AmpSim.cpp    **** 
  79:AmpSim.cpp    **** 		AmpBandPass.SetRes(0.05);
 578              		.loc 14 79 3 is_stmt 1 view .LVU135
 579              		.loc 14 79 21 is_stmt 0 view .LVU136
 580 0156 9FED3A0A 		vldr.32	s0, .L23+80
 581              	.LBE429:
  49:AmpSim.cpp    **** 	{
 582              		.loc 14 49 2 view .LVU137
 583 015a 0135     		adds	r5, r5, #1
 584              	.LVL31:
 585              	.LBB456:
 586              		.loc 14 79 21 view .LVU138
 587 015c 3948     		ldr	r0, .L23+84
 588 015e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 589              	.LVL32:
  80:AmpSim.cpp    **** 		AmpBandPass.SetDrive(0.2);
 590              		.loc 14 80 3 is_stmt 1 view .LVU139
 591              		.loc 14 80 23 is_stmt 0 view .LVU140
 592 0162 9FED2E0A 		vldr.32	s0, .L23+44
 593 0166 3748     		ldr	r0, .L23+84
 594 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 595              	.LVL33:
  81:AmpSim.cpp    **** 		AmpBandPass.SetFreq(680);
 596              		.loc 14 81 3 is_stmt 1 view .LVU141
 597              		.loc 14 81 22 is_stmt 0 view .LVU142
 598 016c 9FED360A 		vldr.32	s0, .L23+88
 599 0170 3448     		ldr	r0, .L23+84
 600 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 601              	.LVL34:
  82:AmpSim.cpp    **** 		AmpBandPass.Process(f1);
 602              		.loc 14 82 3 is_stmt 1 view .LVU143
 603              		.loc 14 82 22 is_stmt 0 view .LVU144
 604 0176 B0EE480A 		vmov.f32	s0, s16
 605 017a 3248     		ldr	r0, .L23+84
 606 017c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 607              	.LVL35:
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 608              		.loc 14 83 3 is_stmt 1 view .LVU145
 609              	.LBB454:
 610              	.LBI454:
 611              		.loc 11 68 18 view .LVU146
 612              	.LBB455:
 613              		.loc 11 68 27 view .LVU147
 614              		.loc 11 68 27 is_stmt 0 view .LVU148
 615              	.LBE455:
 616              	.LBE454:
 617              		.loc 14 83 24 view .LVU149
 618 0180 304B     		ldr	r3, .L23+84
 619              		.loc 14 83 36 view .LVU150
 620 0182 B7EEC80A 		vcvt.f64.f32	d0, s16
  84:AmpSim.cpp    **** 		
  85:AmpSim.cpp    **** 		out[0][i] = f2 * knob_volume * 1.2;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 28


 621              		.loc 14 85 18 view .LVU151
 622 0186 98ED006A 		vldr.32	s12, [r8]
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 623              		.loc 14 83 24 view .LVU152
 624 018a 93ED0E5A 		vldr.32	s10, [r3, #56]
 625              		.loc 14 85 13 view .LVU153
 626 018e DAF80030 		ldr	r3, [r10]
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 627              		.loc 14 83 24 view .LVU154
 628 0192 B7EEC55A 		vcvt.f64.f32	d5, s10
 629              		.loc 14 85 13 view .LVU155
 630 0196 4B44     		add	r3, r3, r9
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 631              		.loc 14 83 34 view .LVU156
 632 0198 9FED157B 		vldr.64	d7, .L23
 633              		.loc 14 85 32 view .LVU157
 634 019c 9FED164B 		vldr.64	d4, .L23+8
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 635              		.loc 14 83 34 view .LVU158
 636 01a0 A5EE070B 		vfma.f64	d0, d5, d7
  83:AmpSim.cpp    **** 		f2 = AmpBandPass.Band() * -0.8 + f1;
 637              		.loc 14 83 6 view .LVU159
 638 01a4 B7EEC00B 		vcvt.f32.f64	s0, d0
 639              	.LVL36:
 640              		.loc 14 85 3 is_stmt 1 view .LVU160
 641              		.loc 14 85 18 is_stmt 0 view .LVU161
 642 01a8 20EE066A 		vmul.f32	s12, s0, s12
 643 01ac B7EEC66A 		vcvt.f64.f32	d6, s12
 644              		.loc 14 85 32 view .LVU162
 645 01b0 26EE046B 		vmul.f64	d6, d6, d4
 646 01b4 B7EEC66B 		vcvt.f32.f64	s12, d6
 647 01b8 83ED006A 		vstr.32	s12, [r3]
  86:AmpSim.cpp    **** 		out[1][i] = f2 * knob_volume * 1.2;
 648              		.loc 14 86 3 is_stmt 1 view .LVU163
 649              		.loc 14 86 18 is_stmt 0 view .LVU164
 650 01bc 98ED007A 		vldr.32	s14, [r8]
 651              		.loc 14 86 13 view .LVU165
 652 01c0 DAF80430 		ldr	r3, [r10, #4]
 653              		.loc 14 86 18 view .LVU166
 654 01c4 20EE077A 		vmul.f32	s14, s0, s14
 655              		.loc 14 86 13 view .LVU167
 656 01c8 4B44     		add	r3, r3, r9
 657              		.loc 14 86 18 view .LVU168
 658 01ca B7EEC77A 		vcvt.f64.f32	d7, s14
 659              		.loc 14 86 32 view .LVU169
 660 01ce 27EE047B 		vmul.f64	d7, d7, d4
 661 01d2 B7EEC77B 		vcvt.f32.f64	s14, d7
 662 01d6 83ED007A 		vstr.32	s14, [r3]
 663              	.LBE456:
  49:AmpSim.cpp    **** 	{
 664              		.loc 14 49 2 is_stmt 1 view .LVU170
 665              	.LVL37:
  49:AmpSim.cpp    **** 	{
 666              		.loc 14 49 23 view .LVU171
 667 01da 019B     		ldr	r3, [sp, #4]
 668 01dc AB42     		cmp	r3, r5
 669 01de 7FF421AF 		bne	.L13
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 29


 670              	.LVL38:
 671              	.L10:
  49:AmpSim.cpp    **** 	{
 672              		.loc 14 49 23 is_stmt 0 view .LVU172
 673              	.LBE457:
  87:AmpSim.cpp    **** 
  88:AmpSim.cpp    **** 		// AmpBandPass.Process(f2);
  89:AmpSim.cpp    **** 		// f1 = AmpBandPass.Band() * -1.0 + f2;
  90:AmpSim.cpp    **** 		// f2 = AmpLowPass.Process(f1);
  91:AmpSim.cpp    **** 
  92:AmpSim.cpp    **** 		// uncomment for audio passthrough test
  93:AmpSim.cpp    **** 		// out[0][i] = in[0][i];
  94:AmpSim.cpp    **** 		// out[1][i] = in[1][i];
  95:AmpSim.cpp    **** 	}
  96:AmpSim.cpp    **** }
 674              		.loc 14 96 1 view .LVU173
 675 01e2 03B0     		add	sp, sp, #12
 676              		.cfi_def_cfa_offset 52
 677              		@ sp needed
 678 01e4 BDEC048B 		vldm	sp!, {d8-d9}
 679              		.cfi_restore 82
 680              		.cfi_restore 83
 681              		.cfi_restore 80
 682              		.cfi_restore 81
 683              		.cfi_def_cfa_offset 36
 684 01e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 685              	.LVL39:
 686              	.L24:
 687              		.loc 14 96 1 view .LVU174
 688 01ec AFF30080 		.align	3
 689              	.L23:
 690 01f0 9A999999 		.word	-1717986918
 691 01f4 9999E9BF 		.word	-1075209831
 692 01f8 33333333 		.word	858993459
 693 01fc 3333F33F 		.word	1072902963
 694 0200 00000000 		.word	.LANCHOR2
 695 0204 00000000 		.word	.LANCHOR9
 696 0208 00000000 		.word	.LANCHOR0
 697 020c 00000000 		.word	.LANCHOR1
 698 0210 00000000 		.word	.LANCHOR3
 699 0214 00000000 		.word	.LANCHOR4
 700 0218 00000000 		.word	.LANCHOR5
 701 021c CDCC4C3E 		.word	1045220557
 702 0220 00C05A45 		.word	1163575296
 703 0224 00000000 		.word	.LANCHOR6
 704 0228 00000000 		.word	.LANCHOR7
 705 022c 00009643 		.word	1133903872
 706 0230 00000000 		.word	.LANCHOR8
 707 0234 5F33D442 		.word	1121203039
 708 0238 61FA183C 		.word	1008269921
 709 023c 00000000 		.word	0
 710 0240 CDCC4C3D 		.word	1028443341
 711 0244 00000000 		.word	.LANCHOR10
 712 0248 00002A44 		.word	1143603200
 713 024c 00000000 		.word	.LANCHOR11
 714              		.cfi_endproc
 715              	.LFE4685:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 30


 717              		.section	.text._Z11readButtonsv,"ax",%progbits
 718              		.align	1
 719              		.p2align 2,,3
 720              		.global	_Z11readButtonsv
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu fpv5-d16
 726              	_Z11readButtonsv:
 727              	.LFB4687:
  97:AmpSim.cpp    **** 
  98:AmpSim.cpp    **** void setFilterConstants(float sample_rate);
  99:AmpSim.cpp    **** 
 100:AmpSim.cpp    **** void readKnobs();
 101:AmpSim.cpp    **** void readButtons();
 102:AmpSim.cpp    **** 
 103:AmpSim.cpp    **** int main(void)
 104:AmpSim.cpp    **** {
 105:AmpSim.cpp    **** 	hw.Init();
 106:AmpSim.cpp    **** 
 107:AmpSim.cpp    **** 	//initialize buttons
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 109:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 110:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 111:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 112:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 113:AmpSim.cpp    **** 
 114:AmpSim.cpp    **** 	//initialize LEDs
 115:AmpSim.cpp    **** 	led_link.Init(hw.A9, GPIO::Mode::OUTPUT);
 116:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 117:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 118:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 119:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 120:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 121:AmpSim.cpp    **** 	// led_time.Init(hw.B8, GPIO::Mode::OUTPUT);
 122:AmpSim.cpp    **** 	led_time_pwm.Init(hw.B8, false, 1000.0f);
 123:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 124:AmpSim.cpp    **** 
 125:AmpSim.cpp    **** 	//set initial fx/split state
 126:AmpSim.cpp    **** 	led_delay.Write(true);
 127:AmpSim.cpp    **** 	led_stereo.Write(true);
 128:AmpSim.cpp    **** 	state_fx = false;
 129:AmpSim.cpp    **** 	state_stereo = true;
 130:AmpSim.cpp    **** 
 131:AmpSim.cpp    **** 	// Set up the LED PWM oscillator
 132:AmpSim.cpp    **** 	time_osc.Init(hw.AudioSampleRate());
 133:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
 134:AmpSim.cpp    **** 	time_osc.SetFreq(1.0);
 135:AmpSim.cpp    **** 
 136:AmpSim.cpp    **** 	// Start the ADC
 137:AmpSim.cpp    **** 	hw.adc.Start();
 138:AmpSim.cpp    **** 
 139:AmpSim.cpp    **** 	// Initialize audio params
 140:AmpSim.cpp    **** 	setFilterConstants(hw.AudioSampleRate());
 141:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 142:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 143:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 31


 144:AmpSim.cpp    **** 
 145:AmpSim.cpp    **** 
 146:AmpSim.cpp    **** 	while(1) {
 147:AmpSim.cpp    **** 		hw.ProcessAllControls();
 148:AmpSim.cpp    **** 		readKnobs();
 149:AmpSim.cpp    **** 		readButtons();		
 150:AmpSim.cpp    **** 		led_time_pwm.Update();
 151:AmpSim.cpp    **** 	}
 152:AmpSim.cpp    **** }
 153:AmpSim.cpp    **** 
 154:AmpSim.cpp    **** float led_brightness = 0;
 155:AmpSim.cpp    **** 
 156:AmpSim.cpp    **** void readButtons(){
 728              		.loc 14 156 19 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 157:AmpSim.cpp    **** 	button_blend.Debounce();
 732              		.loc 14 157 2 view .LVU176
 156:AmpSim.cpp    **** 	button_blend.Debounce();
 733              		.loc 14 156 19 is_stmt 0 view .LVU177
 734 0000 38B5     		push	{r3, r4, r5, lr}
 735              		.cfi_def_cfa_offset 16
 736              		.cfi_offset 3, -16
 737              		.cfi_offset 4, -12
 738              		.cfi_offset 5, -8
 739              		.cfi_offset 14, -4
 740              		.loc 14 157 23 view .LVU178
 741 0002 4F4C     		ldr	r4, .L60
 742 0004 2046     		mov	r0, r4
 743 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 744              	.LVL40:
 158:AmpSim.cpp    **** 	if (button_blend.RisingEdge()) {
 745              		.loc 14 158 2 is_stmt 1 view .LVU179
 746              	.LBB480:
 747              	.LBI480:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 32


  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 748              		.loc 1 70 17 view .LVU180
 749              	.LBB481:
 750              		.loc 1 70 38 view .LVU181
 751              		.loc 1 70 54 is_stmt 0 view .LVU182
 752 000a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 753 000c 1BB1     		cbz	r3, .L26
 754              	.LVL41:
 755              		.loc 1 70 54 view .LVU183
 756              	.LBE481:
 757              	.LBE480:
 758              		.loc 14 158 2 view .LVU184
 759 000e A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 760 0010 7F2B     		cmp	r3, #127
 761 0012 00F08380 		beq	.L54
 762              	.L26:
 159:AmpSim.cpp    **** 		state_blend = !state_blend;
 160:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 161:AmpSim.cpp    **** 	}
 162:AmpSim.cpp    **** 
 163:AmpSim.cpp    **** 	button_link.Debounce();
 763              		.loc 14 163 2 is_stmt 1 view .LVU185
 764              		.loc 14 163 22 is_stmt 0 view .LVU186
 765 0016 4B4C     		ldr	r4, .L60+4
 766 0018 2046     		mov	r0, r4
 767 001a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 768              	.LVL42:
 164:AmpSim.cpp    **** 	if (button_link.RisingEdge()) {
 769              		.loc 14 164 2 is_stmt 1 view .LVU187
 770              	.LBB482:
 771              	.LBI482:
 772              		.loc 1 70 17 view .LVU188
 773              	.LBB483:
 774              		.loc 1 70 38 view .LVU189
 775              		.loc 1 70 54 is_stmt 0 view .LVU190
 776 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 777 0020 1BB1     		cbz	r3, .L27
 778              	.LVL43:
 779              		.loc 1 70 54 view .LVU191
 780              	.LBE483:
 781              	.LBE482:
 782              		.loc 14 164 2 view .LVU192
 783 0022 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 784 0024 7F2B     		cmp	r3, #127
 785 0026 00F08280 		beq	.L55
 786              	.L27:
 165:AmpSim.cpp    **** 		state_link = !state_link;
 166:AmpSim.cpp    **** 		led_link.Write(state_link);
 167:AmpSim.cpp    **** 	}
 168:AmpSim.cpp    **** 
 169:AmpSim.cpp    **** 	button_fx.Debounce();
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 33


 787              		.loc 14 169 2 is_stmt 1 view .LVU193
 788              		.loc 14 169 20 is_stmt 0 view .LVU194
 789 002a 474C     		ldr	r4, .L60+8
 790 002c 2046     		mov	r0, r4
 791 002e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 792              	.LVL44:
 170:AmpSim.cpp    **** 	if (button_fx.RisingEdge()) {
 793              		.loc 14 170 2 is_stmt 1 view .LVU195
 794              	.LBB484:
 795              	.LBI484:
 796              		.loc 1 70 17 view .LVU196
 797              	.LBB485:
 798              		.loc 1 70 38 view .LVU197
 799              		.loc 1 70 54 is_stmt 0 view .LVU198
 800 0032 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 801 0034 13B1     		cbz	r3, .L28
 802              	.LVL45:
 803              		.loc 1 70 54 view .LVU199
 804              	.LBE485:
 805              	.LBE484:
 806              		.loc 14 170 2 view .LVU200
 807 0036 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 808 0038 7F2B     		cmp	r3, #127
 809 003a 5DD0     		beq	.L56
 810              	.L28:
 171:AmpSim.cpp    **** 		state_fx = !state_fx; //True = delay active
 172:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 173:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 174:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 175:AmpSim.cpp    **** 	}	
 176:AmpSim.cpp    **** 
 177:AmpSim.cpp    **** 	//button_stereo and button_cv use gate_in object and need special handling for toggle and state
 178:AmpSim.cpp    **** 	if ((button_stereo.State() != state_stereo_button)) {
 811              		.loc 14 178 2 is_stmt 1 view .LVU201
 812              	.LVL46:
 813              	.LBB486:
 814              	.LBI486:
  22:../../libDaisy//src/hid/gatein.h **** 
  23:../../libDaisy//src/hid/gatein.h ****     /** @brief Initializes the gate input with specified hardware pin
  24:../../libDaisy//src/hid/gatein.h ****      *
  25:../../libDaisy//src/hid/gatein.h ****      *  @param pin_cfg pointer to pin to initialize
  26:../../libDaisy//src/hid/gatein.h ****      *  @param invert True if the pin state is HIGH when 0V is present
  27:../../libDaisy//src/hid/gatein.h ****      *         at the input. False if input signal matches the pin state.
  28:../../libDaisy//src/hid/gatein.h ****      *
  29:../../libDaisy//src/hid/gatein.h ****      *  @note the default for invert is true because it is typical to use
  30:../../libDaisy//src/hid/gatein.h ****      *  an inverting input circuit (e.g. a BJT circuit) for eurorack gate inputs.
  31:../../libDaisy//src/hid/gatein.h ****      */
  32:../../libDaisy//src/hid/gatein.h ****     void Init(Pin pin, bool invert = true);
  33:../../libDaisy//src/hid/gatein.h **** 
  34:../../libDaisy//src/hid/gatein.h ****     /** @brief Initializes the gate input with specified hardware pin
  35:../../libDaisy//src/hid/gatein.h ****      *
  36:../../libDaisy//src/hid/gatein.h ****      *  @param pin_cfg pointer to pin to initialize
  37:../../libDaisy//src/hid/gatein.h ****      *  @param invert True if the pin state is HIGH when 0V is present
  38:../../libDaisy//src/hid/gatein.h ****      *         at the input. False if input signal matches the pin state.
  39:../../libDaisy//src/hid/gatein.h ****      *
  40:../../libDaisy//src/hid/gatein.h ****      *  @note the default for invert is true because it is typical to use
  41:../../libDaisy//src/hid/gatein.h ****      *  an inverting input circuit (e.g. a BJT circuit) for eurorack gate inputs.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 34


  42:../../libDaisy//src/hid/gatein.h ****      * 
  43:../../libDaisy//src/hid/gatein.h ****      *  @note deprectated - this function still works, but will eventually be removed.
  44:../../libDaisy//src/hid/gatein.h ****      *  It uses the old style dsy_gpio_pin in a way that it is not compatible with the
  45:../../libDaisy//src/hid/gatein.h ****      *  the new Pin class. 
  46:../../libDaisy//src/hid/gatein.h ****      */
  47:../../libDaisy//src/hid/gatein.h ****     void Init(dsy_gpio_pin *pin_cfg, bool invert = true);
  48:../../libDaisy//src/hid/gatein.h **** 
  49:../../libDaisy//src/hid/gatein.h ****     /** Checks current state of gate input.
  50:../../libDaisy//src/hid/gatein.h ****      *  @return True if the GPIO just transitioned.
  51:../../libDaisy//src/hid/gatein.h ****      */
  52:../../libDaisy//src/hid/gatein.h ****     bool Trig();
  53:../../libDaisy//src/hid/gatein.h **** 
  54:../../libDaisy//src/hid/gatein.h ****     /** Checks current state of gate input (no state required)
  55:../../libDaisy//src/hid/gatein.h ****      *  read function is inverted because of suggested BJT input circuit
  56:../../libDaisy//src/hid/gatein.h ****      */
  57:../../libDaisy//src/hid/gatein.h ****     inline bool State() { return invert_ ? !pin_.Read() : pin_.Read(); }
 815              		.loc 2 57 17 view .LVU202
 816              	.LBB487:
 817              		.loc 2 57 27 view .LVU203
 818              		.loc 2 57 34 is_stmt 0 view .LVU204
 819 003c 434C     		ldr	r4, .L60+12
 820              		.loc 2 57 42 view .LVU205
 821 003e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 822              	.LBB488:
 823              	.LBB489:
 824              		.loc 2 57 54 view .LVU206
 825 0040 2046     		mov	r0, r4
 826              	.LBE489:
 827              	.LBE488:
 828              		.loc 2 57 42 view .LVU207
 829 0042 BBB1     		cbz	r3, .L29
 830              	.LVL47:
 831              	.LBB493:
 832              	.LBI488:
 833              		.loc 2 57 17 is_stmt 1 view .LVU208
 834              	.LBB490:
 835              		.loc 2 57 54 is_stmt 0 view .LVU209
 836 0044 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 837              	.LVL48:
 838              	.LBE490:
 839              	.LBE493:
 840              	.LBE487:
 841              	.LBE486:
 842              		.loc 14 178 29 view .LVU210
 843 0048 414D     		ldr	r5, .L60+16
 844              	.LBB499:
 845              	.LBB496:
 846              	.LBB494:
 847              	.LBB491:
 848              		.loc 2 57 42 view .LVU211
 849 004a 80F00100 		eor	r0, r0, #1
 850              	.LBE491:
 851              	.LBE494:
 852              	.LBE496:
 853              	.LBE499:
 854              		.loc 14 178 2 view .LVU212
 855 004e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 35


 856              	.LBB500:
 857              	.LBB497:
 858              	.LBB495:
 859              	.LBB492:
 860              		.loc 2 57 42 view .LVU213
 861 0050 C0B2     		uxtb	r0, r0
 862              	.LVL49:
 863              		.loc 2 57 42 view .LVU214
 864              	.LBE492:
 865              	.LBE495:
 866              	.LBE497:
 867              	.LBE500:
 868              		.loc 14 178 2 view .LVU215
 869 0052 8342     		cmp	r3, r0
 870 0054 14D1     		bne	.L57
 871              	.L32:
 179:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 180:AmpSim.cpp    **** 		if (state_stereo_button == true) {
 181:AmpSim.cpp    **** 			state_stereo = !state_stereo;
 182:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 183:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 184:AmpSim.cpp    **** 		}
 185:AmpSim.cpp    **** 	}
 186:AmpSim.cpp    **** 
 187:AmpSim.cpp    **** 
 188:AmpSim.cpp    **** 	if (button_cv.State() != state_cv_button) {
 872              		.loc 14 188 2 is_stmt 1 view .LVU216
 873              	.LVL50:
 874              	.LBB501:
 875              	.LBI501:
 876              		.loc 2 57 17 view .LVU217
 877              	.LBB502:
 878              		.loc 2 57 27 view .LVU218
 879              		.loc 2 57 34 is_stmt 0 view .LVU219
 880 0056 3F4C     		ldr	r4, .L60+20
 881              		.loc 2 57 42 view .LVU220
 882 0058 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 883              	.LBB503:
 884              	.LBB504:
 885              		.loc 2 57 54 view .LVU221
 886 005a 2046     		mov	r0, r4
 887              	.LBE504:
 888              	.LBE503:
 889              		.loc 2 57 42 view .LVU222
 890 005c 002B     		cmp	r3, #0
 891 005e 2ED0     		beq	.L36
 892              	.L59:
 893              	.LVL51:
 894              	.LBB509:
 895              	.LBI503:
 896              		.loc 2 57 17 is_stmt 1 view .LVU223
 897              	.LBB505:
 898              		.loc 2 57 54 is_stmt 0 view .LVU224
 899 0060 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 900              	.LVL52:
 901              	.LBE505:
 902              	.LBE509:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 36


 903              	.LBE502:
 904              	.LBE501:
 905              		.loc 14 188 24 view .LVU225
 906 0064 3C4D     		ldr	r5, .L60+24
 907              	.LBB518:
 908              	.LBB513:
 909              	.LBB510:
 910              	.LBB506:
 911              		.loc 2 57 42 view .LVU226
 912 0066 80F00100 		eor	r0, r0, #1
 913              	.LBE506:
 914              	.LBE510:
 915              	.LBE513:
 916              	.LBE518:
 917              		.loc 14 188 2 view .LVU227
 918 006a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 919              	.LBB519:
 920              	.LBB514:
 921              	.LBB511:
 922              	.LBB507:
 923              		.loc 2 57 42 view .LVU228
 924 006c C0B2     		uxtb	r0, r0
 925              	.LVL53:
 926              		.loc 2 57 42 view .LVU229
 927              	.LBE507:
 928              	.LBE511:
 929              	.LBE514:
 930              	.LBE519:
 931              		.loc 14 188 2 view .LVU230
 932 006e 8342     		cmp	r3, r0
 933 0070 2BD1     		bne	.L58
 934              	.L25:
 189:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 190:AmpSim.cpp    **** 		state_cv = state_cv_button;
 191:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 192:AmpSim.cpp    **** 	}
 193:AmpSim.cpp    **** }
 935              		.loc 14 193 1 view .LVU231
 936 0072 38BD     		pop	{r3, r4, r5, pc}
 937              	.LVL54:
 938              	.L29:
 178:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 939              		.loc 14 178 29 view .LVU232
 940 0074 364D     		ldr	r5, .L60+16
 941              	.LBB520:
 942              	.LBB498:
 943              		.loc 2 57 68 view .LVU233
 944 0076 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 945              	.LVL55:
 946              		.loc 2 57 68 view .LVU234
 947              	.LBE498:
 948              	.LBE520:
 178:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 949              		.loc 14 178 2 view .LVU235
 950 007a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 951 007c 8342     		cmp	r3, r0
 952 007e EAD0     		beq	.L32
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 37


 953              	.L57:
 179:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 954              		.loc 14 179 3 is_stmt 1 view .LVU236
 955              	.LVL56:
 956              	.LBB521:
 957              	.LBI521:
 958              		.loc 2 57 17 view .LVU237
 959              	.LBB522:
 960              		.loc 2 57 27 view .LVU238
 961              		.loc 2 57 42 is_stmt 0 view .LVU239
 962 0080 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 963              	.LBB523:
 964              	.LBB524:
 965              		.loc 2 57 54 view .LVU240
 966 0082 3248     		ldr	r0, .L60+12
 967              	.LBE524:
 968              	.LBE523:
 969              		.loc 2 57 42 view .LVU241
 970 0084 002B     		cmp	r3, #0
 971 0086 34D0     		beq	.L33
 972              	.LVL57:
 973              	.LBB526:
 974              	.LBI523:
 975              		.loc 2 57 17 is_stmt 1 view .LVU242
 976              	.LBB525:
 977              		.loc 2 57 54 is_stmt 0 view .LVU243
 978 0088 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 979              	.LVL58:
 980              		.loc 2 57 42 view .LVU244
 981 008c 80F00100 		eor	r0, r0, #1
 982 0090 C0B2     		uxtb	r0, r0
 983              	.LVL59:
 984              	.L34:
 985              		.loc 2 57 42 view .LVU245
 986              	.LBE525:
 987              	.LBE526:
 988              	.LBE522:
 989              	.LBE521:
 179:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 990              		.loc 14 179 23 view .LVU246
 991 0092 2870     		strb	r0, [r5]
 180:AmpSim.cpp    **** 			state_stereo = !state_stereo;
 992              		.loc 14 180 3 is_stmt 1 view .LVU247
 993 0094 0028     		cmp	r0, #0
 994 0096 DED0     		beq	.L32
 181:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 995              		.loc 14 181 4 view .LVU248
 181:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 996              		.loc 14 181 19 is_stmt 0 view .LVU249
 997 0098 304C     		ldr	r4, .L60+28
 182:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 998              		.loc 14 182 20 view .LVU250
 999 009a 3148     		ldr	r0, .L60+32
 181:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 1000              		.loc 14 181 19 view .LVU251
 1001 009c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1002 009e 81F00101 		eor	r1, r1, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 38


 181:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 1003              		.loc 14 181 17 view .LVU252
 1004 00a2 2170     		strb	r1, [r4]
 182:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 1005              		.loc 14 182 4 is_stmt 1 view .LVU253
 182:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 1006              		.loc 14 182 20 is_stmt 0 view .LVU254
 1007 00a4 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1008              	.LVL60:
 183:AmpSim.cpp    **** 		}
 1009              		.loc 14 183 4 is_stmt 1 view .LVU255
 183:AmpSim.cpp    **** 		}
 1010              		.loc 14 183 19 is_stmt 0 view .LVU256
 1011 00a8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1012              	.LBB528:
 1013              	.LBB515:
 1014              		.loc 2 57 34 view .LVU257
 1015 00aa 2A4C     		ldr	r4, .L60+20
 1016              	.LBE515:
 1017              	.LBE528:
 183:AmpSim.cpp    **** 		}
 1018              		.loc 14 183 19 view .LVU258
 1019 00ac 2D48     		ldr	r0, .L60+36
 1020 00ae 81F00101 		eor	r1, r1, #1
 1021 00b2 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1022              	.LVL61:
 188:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 1023              		.loc 14 188 2 is_stmt 1 view .LVU259
 1024              	.LBB529:
 1025              		.loc 2 57 17 view .LVU260
 1026              	.LBB516:
 1027              		.loc 2 57 27 view .LVU261
 1028              		.loc 2 57 42 is_stmt 0 view .LVU262
 1029 00b6 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1030              	.LBB512:
 1031              	.LBB508:
 1032              		.loc 2 57 54 view .LVU263
 1033 00b8 2046     		mov	r0, r4
 1034              	.LBE508:
 1035              	.LBE512:
 1036              		.loc 2 57 42 view .LVU264
 1037 00ba 002B     		cmp	r3, #0
 1038 00bc D0D1     		bne	.L59
 1039              	.L36:
 1040              	.LBE516:
 1041              	.LBE529:
 188:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 1042              		.loc 14 188 24 view .LVU265
 1043 00be 264D     		ldr	r5, .L60+24
 1044              	.LBB530:
 1045              	.LBB517:
 1046              		.loc 2 57 68 view .LVU266
 1047 00c0 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1048              	.LVL62:
 1049              		.loc 2 57 68 view .LVU267
 1050              	.LBE517:
 1051              	.LBE530:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 39


 188:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 1052              		.loc 14 188 2 view .LVU268
 1053 00c4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1054 00c6 8342     		cmp	r3, r0
 1055 00c8 D3D0     		beq	.L25
 1056              	.L58:
 189:AmpSim.cpp    **** 		state_cv = state_cv_button;
 1057              		.loc 14 189 3 is_stmt 1 view .LVU269
 1058              	.LVL63:
 1059              	.LBB531:
 1060              	.LBI531:
 1061              		.loc 2 57 17 view .LVU270
 1062              	.LBB532:
 1063              		.loc 2 57 27 view .LVU271
 1064              		.loc 2 57 42 is_stmt 0 view .LVU272
 1065 00ca A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 1066              	.LBB533:
 1067              	.LBB534:
 1068              		.loc 2 57 54 view .LVU273
 1069 00cc 2148     		ldr	r0, .L60+20
 1070              	.LBE534:
 1071              	.LBE533:
 1072              		.loc 2 57 42 view .LVU274
 1073 00ce 63B1     		cbz	r3, .L39
 1074              	.LVL64:
 1075              	.LBB536:
 1076              	.LBI533:
 1077              		.loc 2 57 17 is_stmt 1 view .LVU275
 1078              	.LBB535:
 1079              		.loc 2 57 54 is_stmt 0 view .LVU276
 1080 00d0 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1081              	.LVL65:
 1082              		.loc 2 57 42 view .LVU277
 1083 00d4 80F00100 		eor	r0, r0, #1
 1084 00d8 C1B2     		uxtb	r1, r0
 1085              	.LVL66:
 1086              	.L40:
 1087              		.loc 2 57 42 view .LVU278
 1088              	.LBE535:
 1089              	.LBE536:
 1090              	.LBE532:
 1091              	.LBE531:
 190:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 1092              		.loc 14 190 12 view .LVU279
 1093 00da 234B     		ldr	r3, .L60+40
 189:AmpSim.cpp    **** 		state_cv = state_cv_button;
 1094              		.loc 14 189 19 view .LVU280
 1095 00dc 2970     		strb	r1, [r5]
 190:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 1096              		.loc 14 190 3 is_stmt 1 view .LVU281
 190:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 1097              		.loc 14 190 12 is_stmt 0 view .LVU282
 1098 00de 1970     		strb	r1, [r3]
 191:AmpSim.cpp    **** 	}
 1099              		.loc 14 191 3 is_stmt 1 view .LVU283
 191:AmpSim.cpp    **** 	}
 1100              		.loc 14 191 19 is_stmt 0 view .LVU284
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 40


 1101 00e0 1F48     		ldr	r0, .L60+32
 1102              		.loc 14 193 1 view .LVU285
 1103 00e2 BDE83840 		pop	{r3, r4, r5, lr}
 1104              		.cfi_remember_state
 1105              		.cfi_restore 14
 1106              		.cfi_restore 5
 1107              		.cfi_restore 4
 1108              		.cfi_restore 3
 1109              		.cfi_def_cfa_offset 0
 191:AmpSim.cpp    **** 	}
 1110              		.loc 14 191 19 view .LVU286
 1111 00e6 FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 1112              	.LVL67:
 1113              	.L39:
 1114              		.cfi_restore_state
 1115              	.LBB538:
 1116              	.LBB537:
 1117              		.loc 2 57 68 view .LVU287
 1118 00ea FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1119              	.LVL68:
 1120 00ee 0146     		mov	r1, r0
 1121 00f0 F3E7     		b	.L40
 1122              	.LVL69:
 1123              	.L33:
 1124              		.loc 2 57 68 view .LVU288
 1125              	.LBE537:
 1126              	.LBE538:
 1127              	.LBB539:
 1128              	.LBB527:
 1129 00f2 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1130              	.LVL70:
 1131 00f6 CCE7     		b	.L34
 1132              	.LVL71:
 1133              	.L56:
 1134              		.loc 2 57 68 view .LVU289
 1135              	.LBE527:
 1136              	.LBE539:
 171:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 1137              		.loc 14 171 3 is_stmt 1 view .LVU290
 171:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 1138              		.loc 14 171 14 is_stmt 0 view .LVU291
 1139 00f8 1C4C     		ldr	r4, .L60+44
 172:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 1140              		.loc 14 172 18 view .LVU292
 1141 00fa 1D48     		ldr	r0, .L60+48
 171:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 1142              		.loc 14 171 14 view .LVU293
 1143 00fc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1144 00fe 81F00103 		eor	r3, r1, #1
 171:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 1145              		.loc 14 171 12 view .LVU294
 1146 0102 2370     		strb	r3, [r4]
 172:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 1147              		.loc 14 172 3 is_stmt 1 view .LVU295
 172:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 1148              		.loc 14 172 18 is_stmt 0 view .LVU296
 1149 0104 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 41


 1150              	.LVL72:
 173:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 1151              		.loc 14 173 3 is_stmt 1 view .LVU297
 173:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 1152              		.loc 14 173 19 is_stmt 0 view .LVU298
 1153 0108 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1154 010a 1A48     		ldr	r0, .L60+52
 1155 010c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1156              	.LVL73:
 174:AmpSim.cpp    **** 	}	
 1157              		.loc 14 174 3 is_stmt 1 view .LVU299
 174:AmpSim.cpp    **** 	}	
 1158              		.loc 14 174 17 is_stmt 0 view .LVU300
 1159 0110 124B     		ldr	r3, .L60+28
 1160 0112 1948     		ldr	r0, .L60+56
 1161 0114 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1162 0116 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1163              	.LVL74:
 1164 011a 8FE7     		b	.L28
 1165              	.L54:
 159:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 1166              		.loc 14 159 3 is_stmt 1 view .LVU301
 159:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 1167              		.loc 14 159 17 is_stmt 0 view .LVU302
 1168 011c 174B     		ldr	r3, .L60+60
 160:AmpSim.cpp    **** 	}
 1169              		.loc 14 160 18 view .LVU303
 1170 011e 1848     		ldr	r0, .L60+64
 159:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 1171              		.loc 14 159 17 view .LVU304
 1172 0120 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1173 0122 81F00101 		eor	r1, r1, #1
 159:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 1174              		.loc 14 159 15 view .LVU305
 1175 0126 1970     		strb	r1, [r3]
 160:AmpSim.cpp    **** 	}
 1176              		.loc 14 160 3 is_stmt 1 view .LVU306
 160:AmpSim.cpp    **** 	}
 1177              		.loc 14 160 18 is_stmt 0 view .LVU307
 1178 0128 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1179              	.LVL75:
 1180 012c 73E7     		b	.L26
 1181              	.L55:
 165:AmpSim.cpp    **** 		led_link.Write(state_link);
 1182              		.loc 14 165 3 is_stmt 1 view .LVU308
 165:AmpSim.cpp    **** 		led_link.Write(state_link);
 1183              		.loc 14 165 16 is_stmt 0 view .LVU309
 1184 012e 154B     		ldr	r3, .L60+68
 166:AmpSim.cpp    **** 	}
 1185              		.loc 14 166 17 view .LVU310
 1186 0130 1548     		ldr	r0, .L60+72
 165:AmpSim.cpp    **** 		led_link.Write(state_link);
 1187              		.loc 14 165 16 view .LVU311
 1188 0132 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1189 0134 81F00101 		eor	r1, r1, #1
 165:AmpSim.cpp    **** 		led_link.Write(state_link);
 1190              		.loc 14 165 14 view .LVU312
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 42


 1191 0138 1970     		strb	r1, [r3]
 166:AmpSim.cpp    **** 	}
 1192              		.loc 14 166 3 is_stmt 1 view .LVU313
 166:AmpSim.cpp    **** 	}
 1193              		.loc 14 166 17 is_stmt 0 view .LVU314
 1194 013a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1195              	.LVL76:
 1196 013e 74E7     		b	.L27
 1197              	.L61:
 1198              		.align	2
 1199              	.L60:
 1200 0140 00000000 		.word	.LANCHOR12
 1201 0144 00000000 		.word	.LANCHOR15
 1202 0148 00000000 		.word	.LANCHOR18
 1203 014c 00000000 		.word	.LANCHOR24
 1204 0150 00000000 		.word	.LANCHOR25
 1205 0154 00000000 		.word	.LANCHOR28
 1206 0158 00000000 		.word	.LANCHOR29
 1207 015c 00000000 		.word	.LANCHOR22
 1208 0160 00000000 		.word	.LANCHOR26
 1209 0164 00000000 		.word	.LANCHOR27
 1210 0168 00000000 		.word	.LANCHOR30
 1211 016c 00000000 		.word	.LANCHOR19
 1212 0170 00000000 		.word	.LANCHOR20
 1213 0174 00000000 		.word	.LANCHOR21
 1214 0178 00000000 		.word	.LANCHOR23
 1215 017c 00000000 		.word	.LANCHOR13
 1216 0180 00000000 		.word	.LANCHOR14
 1217 0184 00000000 		.word	.LANCHOR16
 1218 0188 00000000 		.word	.LANCHOR17
 1219              		.cfi_endproc
 1220              	.LFE4687:
 1222              		.section	.text._Z9readKnobsv,"ax",%progbits
 1223              		.align	1
 1224              		.p2align 2,,3
 1225              		.global	_Z9readKnobsv
 1226              		.syntax unified
 1227              		.thumb
 1228              		.thumb_func
 1229              		.fpu fpv5-d16
 1231              	_Z9readKnobsv:
 1232              	.LFB4688:
 194:AmpSim.cpp    **** 
 195:AmpSim.cpp    **** 
 196:AmpSim.cpp    **** void readKnobs(){
 1233              		.loc 14 196 17 is_stmt 1 view -0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 197:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 1237              		.loc 14 197 2 view .LVU316
 196:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 1238              		.loc 14 196 17 is_stmt 0 view .LVU317
 1239 0000 70B5     		push	{r4, r5, r6, lr}
 1240              		.cfi_def_cfa_offset 16
 1241              		.cfi_offset 4, -16
 1242              		.cfi_offset 5, -12
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 43


 1243              		.cfi_offset 6, -8
 1244              		.cfi_offset 14, -4
 1245              		.loc 14 197 26 view .LVU318
 1246 0002 4D4C     		ldr	r4, .L64+16
 198:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 199:AmpSim.cpp    **** 
 200:AmpSim.cpp    **** 	knob_gain     = hw.GetAdcValue(ADC_9); // gainValue    = hw.adc.GetFloat(gainKnob);
 201:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 202:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 203:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 204:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 205:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 206:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 207:AmpSim.cpp    **** 
 208:AmpSim.cpp    **** 	knob_fx_dry_wet  = hw.GetAdcValue(ADC_11);
 209:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1247              		.loc 14 209 19 view .LVU319
 1248 0004 4D4E     		ldr	r6, .L64+20
 197:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 1249              		.loc 14 197 26 view .LVU320
 1250 0006 2046     		mov	r0, r4
 1251              	.LBB540:
 1252              	.LBB541:
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 44


  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 1253              		.loc 10 69 20 view .LVU321
 1254 0008 4D4D     		ldr	r5, .L64+24
 1255              	.LBE541:
 1256              	.LBE540:
 196:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 1257              		.loc 14 196 17 view .LVU322
 1258 000a 2DED028B 		vpush.64	{d8}
 1259              		.cfi_def_cfa_offset 24
 1260              		.cfi_offset 80, -24
 1261              		.cfi_offset 81, -20
 197:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 1262              		.loc 14 197 26 view .LVU323
 1263 000e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 1264              	.LVL77:
 198:AmpSim.cpp    **** 
 1265              		.loc 14 198 2 is_stmt 1 view .LVU324
 198:AmpSim.cpp    **** 
 1266              		.loc 14 198 27 is_stmt 0 view .LVU325
 1267 0012 2046     		mov	r0, r4
 1268 0014 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 1269              	.LVL78:
 200:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 1270              		.loc 14 200 2 is_stmt 1 view .LVU326
 200:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 1271              		.loc 14 200 32 is_stmt 0 view .LVU327
 1272 0018 2046     		mov	r0, r4
 1273 001a 0821     		movs	r1, #8
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1274              		.loc 14 202 16 view .LVU328
 1275 001c B5EE008A 		vmov.f32	s16, #2.5e-1
 200:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 1276              		.loc 14 200 32 view .LVU329
 1277 0020 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1278              	.LVL79:
 200:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 1279              		.loc 14 200 16 view .LVU330
 1280 0024 474B     		ldr	r3, .L64+28
 201:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 1281              		.loc 14 201 32 view .LVU331
 1282 0026 2046     		mov	r0, r4
 1283 0028 0121     		movs	r1, #1
 200:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 1284              		.loc 14 200 16 view .LVU332
 1285 002a 83ED000A 		vstr.32	s0, [r3]
 201:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 1286              		.loc 14 201 2 is_stmt 1 view .LVU333
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 45


 201:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 1287              		.loc 14 201 32 is_stmt 0 view .LVU334
 1288 002e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1289              	.LVL80:
 201:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 1290              		.loc 14 201 16 view .LVU335
 1291 0032 454B     		ldr	r3, .L64+32
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1292              		.loc 14 202 32 view .LVU336
 1293 0034 2046     		mov	r0, r4
 1294 0036 0921     		movs	r1, #9
 201:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 1295              		.loc 14 201 16 view .LVU337
 1296 0038 83ED000A 		vstr.32	s0, [r3]
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1297              		.loc 14 202 2 is_stmt 1 view .LVU338
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1298              		.loc 14 202 32 is_stmt 0 view .LVU339
 1299 003c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1300              	.LVL81:
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1301              		.loc 14 202 16 view .LVU340
 1302 0040 30EE480A 		vsub.f32	s0, s0, s16
 1303 0044 414B     		ldr	r3, .L64+36
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1304              		.loc 14 203 32 view .LVU341
 1305 0046 2046     		mov	r0, r4
 1306 0048 0321     		movs	r1, #3
 202:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 1307              		.loc 14 202 16 view .LVU342
 1308 004a 83ED000A 		vstr.32	s0, [r3]
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1309              		.loc 14 203 2 is_stmt 1 view .LVU343
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1310              		.loc 14 203 32 is_stmt 0 view .LVU344
 1311 004e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1312              	.LVL82:
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1313              		.loc 14 203 46 view .LVU345
 1314 0052 9FED3F7A 		vldr.32	s14, .L64+40
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1315              		.loc 14 204 32 view .LVU346
 1316 0056 2046     		mov	r0, r4
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1317              		.loc 14 203 46 view .LVU347
 1318 0058 DFED3E7A 		vldr.32	s15, .L64+44
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1319              		.loc 14 204 32 view .LVU348
 1320 005c 0421     		movs	r1, #4
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1321              		.loc 14 203 16 view .LVU349
 1322 005e 3E4B     		ldr	r3, .L64+48
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1323              		.loc 14 203 46 view .LVU350
 1324 0060 E0EE077A 		vfma.f32	s15, s0, s14
 203:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 1325              		.loc 14 203 16 view .LVU351
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 46


 1326 0064 FDEEE77A 		vcvt.s32.f32	s15, s15
 1327 0068 17EE902A 		vmov	r2, s15	@ int
 1328 006c 1A80     		strh	r2, [r3]	@ movhi
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1329              		.loc 14 204 2 is_stmt 1 view .LVU352
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1330              		.loc 14 204 32 is_stmt 0 view .LVU353
 1331 006e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1332              	.LVL83:
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1333              		.loc 14 204 16 view .LVU354
 1334 0072 30EE480A 		vsub.f32	s0, s0, s16
 1335 0076 394B     		ldr	r3, .L64+52
 205:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 1336              		.loc 14 205 32 view .LVU355
 1337 0078 2046     		mov	r0, r4
 1338 007a 0521     		movs	r1, #5
 204:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 1339              		.loc 14 204 16 view .LVU356
 1340 007c 83ED000A 		vstr.32	s0, [r3]
 205:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 1341              		.loc 14 205 2 is_stmt 1 view .LVU357
 205:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 1342              		.loc 14 205 32 is_stmt 0 view .LVU358
 1343 0080 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1344              	.LVL84:
 205:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 1345              		.loc 14 205 16 view .LVU359
 1346 0084 30EE480A 		vsub.f32	s0, s0, s16
 1347 0088 354B     		ldr	r3, .L64+56
 206:AmpSim.cpp    **** 
 1348              		.loc 14 206 32 view .LVU360
 1349 008a 2046     		mov	r0, r4
 1350 008c 0221     		movs	r1, #2
 205:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 1351              		.loc 14 205 16 view .LVU361
 1352 008e 83ED000A 		vstr.32	s0, [r3]
 206:AmpSim.cpp    **** 
 1353              		.loc 14 206 2 is_stmt 1 view .LVU362
 206:AmpSim.cpp    **** 
 1354              		.loc 14 206 32 is_stmt 0 view .LVU363
 1355 0092 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1356              	.LVL85:
 206:AmpSim.cpp    **** 
 1357              		.loc 14 206 16 view .LVU364
 1358 0096 334B     		ldr	r3, .L64+60
 208:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1359              		.loc 14 208 35 view .LVU365
 1360 0098 2046     		mov	r0, r4
 1361 009a 0A21     		movs	r1, #10
 206:AmpSim.cpp    **** 
 1362              		.loc 14 206 16 view .LVU366
 1363 009c 83ED000A 		vstr.32	s0, [r3]
 208:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1364              		.loc 14 208 2 is_stmt 1 view .LVU367
 208:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1365              		.loc 14 208 35 is_stmt 0 view .LVU368
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 47


 1366 00a0 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1367              	.LVL86:
 208:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1368              		.loc 14 208 19 view .LVU369
 1369 00a4 304B     		ldr	r3, .L64+64
 1370              		.loc 14 209 35 view .LVU370
 1371 00a6 2046     		mov	r0, r4
 1372 00a8 0B21     		movs	r1, #11
 208:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 1373              		.loc 14 208 19 view .LVU371
 1374 00aa 83ED000A 		vstr.32	s0, [r3]
 1375              		.loc 14 209 2 is_stmt 1 view .LVU372
 1376              		.loc 14 209 35 is_stmt 0 view .LVU373
 1377 00ae FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1378              	.LVL87:
 210:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 1379              		.loc 14 210 35 view .LVU374
 1380 00b2 2046     		mov	r0, r4
 1381 00b4 0621     		movs	r1, #6
 209:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 1382              		.loc 14 209 19 view .LVU375
 1383 00b6 86ED000A 		vstr.32	s0, [r6]
 1384              		.loc 14 210 2 is_stmt 1 view .LVU376
 1385              		.loc 14 210 35 is_stmt 0 view .LVU377
 1386 00ba FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1387              	.LVL88:
 1388              		.loc 14 210 19 view .LVU378
 1389 00be 2B4B     		ldr	r3, .L64+68
 211:AmpSim.cpp    **** 	knob_fx_tone     = hw.GetAdcValue(CV_8);
 1390              		.loc 14 211 35 view .LVU379
 1391 00c0 2046     		mov	r0, r4
 1392 00c2 0721     		movs	r1, #7
 210:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 1393              		.loc 14 210 19 view .LVU380
 1394 00c4 83ED000A 		vstr.32	s0, [r3]
 1395              		.loc 14 211 2 is_stmt 1 view .LVU381
 1396              		.loc 14 211 35 is_stmt 0 view .LVU382
 1397 00c8 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 1398              	.LVL89:
 212:AmpSim.cpp    **** 
 213:AmpSim.cpp    **** 	time_osc.SetFreq(3.0 * (1.0 - knob_fx_time) + 0.1);
 1399              		.loc 14 213 32 view .LVU383
 1400 00cc 96ED005A 		vldr.32	s10, [r6]
 1401              		.loc 14 213 30 view .LVU384
 1402 00d0 B7EE006B 		vmov.f64	d6, #1.0e+0
 1403              		.loc 14 213 46 view .LVU385
 1404 00d4 B0EE084B 		vmov.f64	d4, #3.0e+0
 211:AmpSim.cpp    **** 	knob_fx_tone     = hw.GetAdcValue(CV_8);
 1405              		.loc 14 211 19 view .LVU386
 1406 00d8 254B     		ldr	r3, .L64+72
 1407              		.loc 14 213 32 view .LVU387
 1408 00da B7EEC55A 		vcvt.f64.f32	d5, s10
 1409              	.LBB545:
 1410              	.LBB542:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1411              		.loc 10 70 34 view .LVU388
 1412 00de 2846     		mov	r0, r5
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 48


 1413              	.LBE542:
 1414              	.LBE545:
 211:AmpSim.cpp    **** 	knob_fx_tone     = hw.GetAdcValue(CV_8);
 1415              		.loc 14 211 19 view .LVU389
 1416 00e0 83ED000A 		vstr.32	s0, [r3]
 1417              		.loc 14 213 2 is_stmt 1 view .LVU390
 1418              		.loc 14 213 30 is_stmt 0 view .LVU391
 1419 00e4 36EE456B 		vsub.f64	d6, d6, d5
 1420              		.loc 14 213 46 view .LVU392
 1421 00e8 9FED0F7B 		vldr.64	d7, .L64
 1422 00ec A6EE047B 		vfma.f64	d7, d6, d4
 1423              		.loc 14 213 18 view .LVU393
 1424 00f0 B7EEC70B 		vcvt.f32.f64	s0, d7
 1425              	.LVL90:
 1426              	.LBB546:
 1427              	.LBI540:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1428              		.loc 10 67 17 is_stmt 1 view .LVU394
 1429              	.LBB543:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1430              		.loc 10 69 9 view .LVU395
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1431              		.loc 10 69 20 is_stmt 0 view .LVU396
 1432 00f4 85ED020A 		vstr.32	s0, [r5, #8]
 1433              		.loc 10 70 9 is_stmt 1 view .LVU397
 1434              		.loc 10 70 34 is_stmt 0 view .LVU398
 1435 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1436              	.LVL91:
 1437              		.loc 10 70 34 view .LVU399
 1438              	.LBE543:
 1439              	.LBE546:
 214:AmpSim.cpp    **** 	
 215:AmpSim.cpp    **** 	led_time_pwm.Set((time_osc.Process() + 0.6) * TIME_LED_BRIGHTNESS);
 1440              		.loc 14 215 36 view .LVU400
 1441 00fc 2846     		mov	r0, r5
 1442              	.LBB547:
 1443              	.LBB544:
 1444              		.loc 10 70 20 view .LVU401
 1445 00fe 85ED070A 		vstr.32	s0, [r5, #28]
 1446              	.LVL92:
 1447              		.loc 10 70 20 view .LVU402
 1448              	.LBE544:
 1449              	.LBE547:
 1450              		.loc 14 215 2 is_stmt 1 view .LVU403
 1451              		.loc 14 215 36 is_stmt 0 view .LVU404
 1452 0102 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 1453              	.LVL93:
 1454 0106 B7EEC00A 		vcvt.f64.f32	d0, s0
 1455              		.loc 14 215 18 view .LVU405
 1456 010a 1A48     		ldr	r0, .L64+76
 1457              		.loc 14 215 39 view .LVU406
 1458 010c 9FED087B 		vldr.64	d7, .L64+8
 216:AmpSim.cpp    **** }
 1459              		.loc 14 216 1 view .LVU407
 1460 0110 BDEC028B 		vldm	sp!, {d8}
 1461              		.cfi_restore 80
 1462              		.cfi_restore 81
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 49


 1463              		.cfi_def_cfa_offset 16
 215:AmpSim.cpp    **** }
 1464              		.loc 14 215 39 view .LVU408
 1465 0114 30EE070B 		vadd.f64	d0, d0, d7
 1466              		.loc 14 216 1 view .LVU409
 1467 0118 BDE87040 		pop	{r4, r5, r6, lr}
 1468              		.cfi_restore 14
 1469              		.cfi_restore 6
 1470              		.cfi_restore 5
 1471              		.cfi_restore 4
 1472              		.cfi_def_cfa_offset 0
 215:AmpSim.cpp    **** }
 1473              		.loc 14 215 46 view .LVU410
 1474 011c 20EE070B 		vmul.f64	d0, d0, d7
 215:AmpSim.cpp    **** }
 1475              		.loc 14 215 18 view .LVU411
 1476 0120 B7EEC00B 		vcvt.f32.f64	s0, d0
 1477 0124 FFF7FEBF 		b	_ZN5daisy3Led3SetEf
 1478              	.LVL94:
 1479              	.L65:
 1480              		.align	3
 1481              	.L64:
 1482 0128 9A999999 		.word	-1717986918
 1483 012c 9999B93F 		.word	1069128089
 1484 0130 33333333 		.word	858993459
 1485 0134 3333E33F 		.word	1071854387
 1486 0138 00000000 		.word	.LANCHOR31
 1487 013c 00000000 		.word	.LANCHOR34
 1488 0140 00000000 		.word	.LANCHOR37
 1489 0144 00000000 		.word	.LANCHOR3
 1490 0148 00000000 		.word	.LANCHOR11
 1491 014c 00000000 		.word	.LANCHOR6
 1492 0150 00007A45 		.word	1165623296
 1493 0154 00002A43 		.word	1126825984
 1494 0158 00000000 		.word	.LANCHOR0
 1495 015c 00000000 		.word	.LANCHOR2
 1496 0160 00000000 		.word	.LANCHOR8
 1497 0164 00000000 		.word	.LANCHOR32
 1498 0168 00000000 		.word	.LANCHOR33
 1499 016c 00000000 		.word	.LANCHOR35
 1500 0170 00000000 		.word	.LANCHOR36
 1501 0174 00000000 		.word	.LANCHOR38
 1502              		.cfi_endproc
 1503              	.LFE4688:
 1505              		.section	.text._Z18setFilterConstantsf,"ax",%progbits
 1506              		.align	1
 1507              		.p2align 2,,3
 1508              		.global	_Z18setFilterConstantsf
 1509              		.syntax unified
 1510              		.thumb
 1511              		.thumb_func
 1512              		.fpu fpv5-d16
 1514              	_Z18setFilterConstantsf:
 1515              	.LVL95:
 1516              	.LFB4689:
 217:AmpSim.cpp    **** 
 218:AmpSim.cpp    **** void setFilterConstants(float sample_rate){
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 50


 1517              		.loc 14 218 43 is_stmt 1 view -0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 219:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1521              		.loc 14 219 2 view .LVU413
 1522              	.LBB554:
 1523              	.LBI554:
  56:../../DaisySP//Source/Filters/onepole.h ****     {
 1524              		.loc 13 56 17 view .LVU414
 1525              	.LBB555:
  59:../../DaisySP//Source/Filters/onepole.h **** 
 1526              		.loc 13 59 9 view .LVU415
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1527              		.loc 13 61 9 view .LVU416
 1528              	.LBE555:
 1529              	.LBE554:
 218:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1530              		.loc 14 218 43 is_stmt 0 view .LVU417
 1531 0000 38B5     		push	{r3, r4, r5, lr}
 1532              		.cfi_def_cfa_offset 16
 1533              		.cfi_offset 3, -16
 1534              		.cfi_offset 4, -12
 1535              		.cfi_offset 5, -8
 1536              		.cfi_offset 14, -4
 1537              	.LBB560:
 1538              	.LBB556:
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1539              		.loc 13 61 13 view .LVU418
 1540 0002 364A     		ldr	r2, .L68
 1541 0004 364B     		ldr	r3, .L68+4
 1542              	.LBE556:
 1543              	.LBE560:
 220:AmpSim.cpp    **** 	// AmpLowPass.SetRes(0.1);
 221:AmpSim.cpp    **** 	AmpLowPass.Init(); //sample_rate);
 222:AmpSim.cpp    **** 	// AmpLowPass.SetFilterMode(FilterMode);
 223:AmpSim.cpp    **** 
 224:AmpSim.cpp    **** 	AmpBandPass.SetDrive(0.1);
 1544              		.loc 14 224 22 view .LVU419
 1545 0006 3748     		ldr	r0, .L68+8
 225:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 226:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 227:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 228:AmpSim.cpp    **** 
 229:AmpSim.cpp    **** 	TrebleBandPass.SetFreq(3500);
 1546              		.loc 14 229 24 view .LVU420
 1547 0008 374C     		ldr	r4, .L68+12
 230:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 231:AmpSim.cpp    **** 	TrebleBandPass.SetRes(0.2);
 232:AmpSim.cpp    **** 	TrebleBandPass.Init(sample_rate);
 233:AmpSim.cpp    **** 
 234:AmpSim.cpp    **** 	BassLowPass.Init(sample_rate);
 235:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 236:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 237:AmpSim.cpp    **** 
 238:AmpSim.cpp    **** 
 239:AmpSim.cpp    **** 	MidBandPass.SetFreq(1000);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 51


 240:AmpSim.cpp    **** 	MidBandPass.SetDrive(0.2);
 241:AmpSim.cpp    **** 	MidBandPass.SetRes(0.3);
 242:AmpSim.cpp    **** 	MidBandPass.Init(sample_rate);
 243:AmpSim.cpp    **** 
 244:AmpSim.cpp    **** 	Drive.SetDrive(0.2);
 1548              		.loc 14 244 16 view .LVU421
 1549 000a 384D     		ldr	r5, .L68+16
 218:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1550              		.loc 14 218 43 view .LVU422
 1551 000c 2DED048B 		vpush.64	{d8, d9}
 1552              		.cfi_def_cfa_offset 32
 1553              		.cfi_offset 80, -32
 1554              		.cfi_offset 81, -28
 1555              		.cfi_offset 82, -24
 1556              		.cfi_offset 83, -20
 1557              	.LBB561:
 1558              	.LBB557:
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1559              		.loc 13 61 13 view .LVU423
 1560 0010 1A60     		str	r2, [r3]	@ float
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 1561              		.loc 13 62 9 is_stmt 1 view .LVU424
 1562              	.LBE557:
 1563              	.LBE561:
 218:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1564              		.loc 14 218 43 is_stmt 0 view .LVU425
 1565 0012 B0EE408A 		vmov.f32	s16, s0
 1566              	.LBB562:
 1567              	.LBB558:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 1568              		.loc 13 62 13 view .LVU426
 1569 0016 364A     		ldr	r2, .L68+20
 1570              	.LBE558:
 1571              	.LBE562:
 224:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1572              		.loc 14 224 22 view .LVU427
 1573 0018 9FED369A 		vldr.32	s18, .L68+24
 1574              	.LBB563:
 1575              	.LBB559:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 1576              		.loc 13 62 13 view .LVU428
 1577 001c 5A60     		str	r2, [r3, #4]	@ float
 1578              	.LVL96:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 1579              		.loc 13 62 13 view .LVU429
 1580              	.LBE559:
 1581              	.LBE563:
 221:AmpSim.cpp    **** 	// AmpLowPass.SetFilterMode(FilterMode);
 1582              		.loc 14 221 2 is_stmt 1 view .LVU430
 1583              	.LBB564:
 1584              	.LBI564:
  44:../../DaisySP//Source/Filters/onepole.h ****     {
 1585              		.loc 13 44 10 view .LVU431
 1586              	.LBB565:
  46:../../DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 1587              		.loc 13 46 9 view .LVU432
 1588              	.LBB566:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 52


 1589              	.LBI566:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1590              		.loc 13 51 17 view .LVU433
 1591              	.LBB567:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1592              		.loc 13 51 27 view .LVU434
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1593              		.loc 13 51 34 is_stmt 0 view .LVU435
 1594 001e 0022     		movs	r2, #0
 1595              	.LBE567:
 1596              	.LBE566:
 1597              	.LBE565:
 1598              	.LBE564:
 224:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1599              		.loc 14 224 22 view .LVU436
 1600 0020 B0EE490A 		vmov.f32	s0, s18
 1601              	.LVL97:
 230:AmpSim.cpp    **** 	TrebleBandPass.SetRes(0.2);
 1602              		.loc 14 230 25 view .LVU437
 1603 0024 DFED348A 		vldr.32	s17, .L68+28
 1604              	.LBB571:
 1605              	.LBB570:
 1606              	.LBB569:
 1607              	.LBB568:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1608              		.loc 13 51 34 view .LVU438
 1609 0028 9A60     		str	r2, [r3, #8]	@ float
 1610              	.LVL98:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1611              		.loc 13 51 34 view .LVU439
 1612              	.LBE568:
 1613              	.LBE569:
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1614              		.loc 13 47 9 is_stmt 1 view .LVU440
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1615              		.loc 13 47 15 is_stmt 0 view .LVU441
 1616 002a 0022     		movs	r2, #0
 1617 002c 1A73     		strb	r2, [r3, #12]
 1618              	.LVL99:
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1619              		.loc 13 47 15 view .LVU442
 1620              	.LBE570:
 1621              	.LBE571:
 224:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1622              		.loc 14 224 2 is_stmt 1 view .LVU443
 224:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1623              		.loc 14 224 22 is_stmt 0 view .LVU444
 1624 002e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1625              	.LVL100:
 225:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 1626              		.loc 14 225 2 is_stmt 1 view .LVU445
 225:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 1627              		.loc 14 225 21 is_stmt 0 view .LVU446
 1628 0032 9FED320A 		vldr.32	s0, .L68+32
 1629 0036 2B48     		ldr	r0, .L68+8
 1630 0038 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1631              	.LVL101:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 53


 226:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 1632              		.loc 14 226 2 is_stmt 1 view .LVU447
 226:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 1633              		.loc 14 226 20 is_stmt 0 view .LVU448
 1634 003c B0EE490A 		vmov.f32	s0, s18
 1635 0040 2848     		ldr	r0, .L68+8
 1636 0042 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1637              	.LVL102:
 227:AmpSim.cpp    **** 
 1638              		.loc 14 227 2 is_stmt 1 view .LVU449
 227:AmpSim.cpp    **** 
 1639              		.loc 14 227 18 is_stmt 0 view .LVU450
 1640 0046 B0EE480A 		vmov.f32	s0, s16
 1641 004a 2648     		ldr	r0, .L68+8
 1642 004c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1643              	.LVL103:
 229:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 1644              		.loc 14 229 2 is_stmt 1 view .LVU451
 229:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 1645              		.loc 14 229 24 is_stmt 0 view .LVU452
 1646 0050 2046     		mov	r0, r4
 1647 0052 9FED2B0A 		vldr.32	s0, .L68+36
 1648 0056 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1649              	.LVL104:
 230:AmpSim.cpp    **** 	TrebleBandPass.SetRes(0.2);
 1650              		.loc 14 230 2 is_stmt 1 view .LVU453
 230:AmpSim.cpp    **** 	TrebleBandPass.SetRes(0.2);
 1651              		.loc 14 230 25 is_stmt 0 view .LVU454
 1652 005a B0EE680A 		vmov.f32	s0, s17
 1653 005e 2046     		mov	r0, r4
 1654 0060 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1655              	.LVL105:
 231:AmpSim.cpp    **** 	TrebleBandPass.Init(sample_rate);
 1656              		.loc 14 231 2 is_stmt 1 view .LVU455
 231:AmpSim.cpp    **** 	TrebleBandPass.Init(sample_rate);
 1657              		.loc 14 231 23 is_stmt 0 view .LVU456
 1658 0064 B0EE680A 		vmov.f32	s0, s17
 1659 0068 2046     		mov	r0, r4
 1660 006a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1661              	.LVL106:
 232:AmpSim.cpp    **** 
 1662              		.loc 14 232 2 is_stmt 1 view .LVU457
 232:AmpSim.cpp    **** 
 1663              		.loc 14 232 21 is_stmt 0 view .LVU458
 1664 006e 2046     		mov	r0, r4
 234:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 1665              		.loc 14 234 18 view .LVU459
 1666 0070 244C     		ldr	r4, .L68+40
 232:AmpSim.cpp    **** 
 1667              		.loc 14 232 21 view .LVU460
 1668 0072 B0EE480A 		vmov.f32	s0, s16
 1669 0076 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1670              	.LVL107:
 234:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 1671              		.loc 14 234 2 is_stmt 1 view .LVU461
 234:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 1672              		.loc 14 234 18 is_stmt 0 view .LVU462
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 54


 1673 007a B0EE480A 		vmov.f32	s0, s16
 1674 007e 2046     		mov	r0, r4
 1675 0080 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1676              	.LVL108:
 235:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 1677              		.loc 14 235 2 is_stmt 1 view .LVU463
 235:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 1678              		.loc 14 235 21 is_stmt 0 view .LVU464
 1679 0084 2046     		mov	r0, r4
 1680 0086 9FED200A 		vldr.32	s0, .L68+44
 1681 008a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1682              	.LVL109:
 236:AmpSim.cpp    **** 
 1683              		.loc 14 236 2 is_stmt 1 view .LVU465
 236:AmpSim.cpp    **** 
 1684              		.loc 14 236 20 is_stmt 0 view .LVU466
 1685 008e 2046     		mov	r0, r4
 239:AmpSim.cpp    **** 	MidBandPass.SetDrive(0.2);
 1686              		.loc 14 239 21 view .LVU467
 1687 0090 1E4C     		ldr	r4, .L68+48
 236:AmpSim.cpp    **** 
 1688              		.loc 14 236 20 view .LVU468
 1689 0092 B0EE490A 		vmov.f32	s0, s18
 1690 0096 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1691              	.LVL110:
 239:AmpSim.cpp    **** 	MidBandPass.SetDrive(0.2);
 1692              		.loc 14 239 2 is_stmt 1 view .LVU469
 239:AmpSim.cpp    **** 	MidBandPass.SetDrive(0.2);
 1693              		.loc 14 239 21 is_stmt 0 view .LVU470
 1694 009a 9FED1D0A 		vldr.32	s0, .L68+52
 1695 009e 2046     		mov	r0, r4
 1696 00a0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1697              	.LVL111:
 240:AmpSim.cpp    **** 	MidBandPass.SetRes(0.3);
 1698              		.loc 14 240 2 is_stmt 1 view .LVU471
 240:AmpSim.cpp    **** 	MidBandPass.SetRes(0.3);
 1699              		.loc 14 240 22 is_stmt 0 view .LVU472
 1700 00a4 B0EE680A 		vmov.f32	s0, s17
 1701 00a8 2046     		mov	r0, r4
 1702 00aa FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1703              	.LVL112:
 241:AmpSim.cpp    **** 	MidBandPass.Init(sample_rate);
 1704              		.loc 14 241 2 is_stmt 1 view .LVU473
 241:AmpSim.cpp    **** 	MidBandPass.Init(sample_rate);
 1705              		.loc 14 241 20 is_stmt 0 view .LVU474
 1706 00ae 2046     		mov	r0, r4
 1707 00b0 9FED180A 		vldr.32	s0, .L68+56
 1708 00b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1709              	.LVL113:
 242:AmpSim.cpp    **** 
 1710              		.loc 14 242 2 is_stmt 1 view .LVU475
 242:AmpSim.cpp    **** 
 1711              		.loc 14 242 18 is_stmt 0 view .LVU476
 1712 00b8 B0EE480A 		vmov.f32	s0, s16
 1713 00bc 2046     		mov	r0, r4
 1714 00be FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1715              	.LVL114:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 55


 1716              		.loc 14 244 2 is_stmt 1 view .LVU477
 1717              		.loc 14 244 16 is_stmt 0 view .LVU478
 1718 00c2 2846     		mov	r0, r5
 1719 00c4 B0EE680A 		vmov.f32	s0, s17
 1720 00c8 FFF7FEFF 		bl	_ZN7daisysp9Overdrive8SetDriveEf
 1721              	.LVL115:
 245:AmpSim.cpp    **** 	Drive.Init();
 1722              		.loc 14 245 2 is_stmt 1 view .LVU479
 1723              		.loc 14 245 12 is_stmt 0 view .LVU480
 1724 00cc 2846     		mov	r0, r5
 246:AmpSim.cpp    **** }...
 1725              		.loc 14 246 1 view .LVU481
 1726 00ce BDEC048B 		vldm	sp!, {d8-d9}
 1727              		.cfi_restore 82
 1728              		.cfi_restore 83
 1729              		.cfi_restore 80
 1730              		.cfi_restore 81
 1731              		.cfi_def_cfa_offset 16
 1732              	.LVL116:
 1733              		.loc 14 246 1 view .LVU482
 1734 00d2 BDE83840 		pop	{r3, r4, r5, lr}
 1735              		.cfi_restore 14
 1736              		.cfi_restore 5
 1737              		.cfi_restore 4
 1738              		.cfi_restore 3
 1739              		.cfi_def_cfa_offset 0
 245:AmpSim.cpp    **** 	Drive.Init();
 1740              		.loc 14 245 12 view .LVU483
 1741 00d6 FFF7FEBF 		b	_ZN7daisysp9Overdrive4InitEv
 1742              	.LVL117:
 1743              	.L69:
 1744 00da 00BF     		.align	2
 1745              	.L68:
 1746 00dc 5F33D442 		.word	1121203039
 1747 00e0 00000000 		.word	.LANCHOR9
 1748 00e4 00000000 		.word	.LANCHOR10
 1749 00e8 00000000 		.word	.LANCHOR5
 1750 00ec 00000000 		.word	.LANCHOR4
 1751 00f0 61FA183C 		.word	1008269921
 1752 00f4 CDCCCC3D 		.word	1036831949
 1753 00f8 CDCC4C3E 		.word	1045220557
 1754 00fc 00002A44 		.word	1143603200
 1755 0100 00C05A45 		.word	1163575296
 1756 0104 00000000 		.word	.LANCHOR7
 1757 0108 00009643 		.word	1133903872
 1758 010c 00000000 		.word	.LANCHOR1
 1759 0110 00007A44 		.word	1148846080
 1760 0114 9A99993E 		.word	1050253722
 1761              		.cfi_endproc
 1762              	.LFE4689:
 1764              		.section	.text.startup.main,"ax",%progbits
 1765              		.align	1
 1766              		.p2align 2,,3
 1767              		.global	main
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 56


 1771              		.fpu fpv5-d16
 1773              	main:
 1774              	.LFB4686:
 104:AmpSim.cpp    **** {
 1775              		.loc 14 104 1 is_stmt 1 view -0
 1776              		.cfi_startproc
 1777              		@ Volatile: function does not return.
 1778              		@ args = 0, pretend = 0, frame = 16
 1779              		@ frame_needed = 0, uses_anonymous_args = 0
 105:AmpSim.cpp    **** 	hw.Init();
 1780              		.loc 14 105 2 view .LVU485
 104:AmpSim.cpp    **** {
 1781              		.loc 14 104 1 is_stmt 0 view .LVU486
 1782 0000 00B5     		push	{lr}
 1783              		.cfi_def_cfa_offset 4
 1784              		.cfi_offset 14, -4
 105:AmpSim.cpp    **** 	hw.Init();
 1785              		.loc 14 105 9 view .LVU487
 1786 0002 7448     		ldr	r0, .L73
 104:AmpSim.cpp    **** {
 1787              		.loc 14 104 1 view .LVU488
 1788 0004 87B0     		sub	sp, sp, #28
 1789              		.cfi_def_cfa_offset 32
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1790              		.loc 14 108 18 view .LVU489
 1791 0006 0125     		movs	r5, #1
 105:AmpSim.cpp    **** 	hw.Init();
 1792              		.loc 14 105 9 view .LVU490
 1793 0008 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
 1794              	.LVL118:
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1795              		.loc 14 108 2 is_stmt 1 view .LVU491
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1796              		.loc 14 108 18 is_stmt 0 view .LVU492
 1797 000c 0E23     		movs	r3, #14
 1798 000e 9FED728A 		vldr.32	s16, .L73+4
 1799 0012 8DF80850 		strb	r5, [sp, #8]
 109:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1800              		.loc 14 109 19 view .LVU493
 1801 0016 0426     		movs	r6, #4
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1802              		.loc 14 108 18 view .LVU494
 1803 0018 8DF80930 		strb	r3, [sp, #9]
 1804 001c B0EE480A 		vmov.f32	s0, s16
 1805 0020 6E48     		ldr	r0, .L73+8
 115:AmpSim.cpp    **** 	led_link.Init(hw.A9, GPIO::Mode::OUTPUT);
 1806              		.loc 14 115 15 view .LVU495
 1807 0022 0024     		movs	r4, #0
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1808              		.loc 14 108 18 view .LVU496
 1809 0024 0299     		ldr	r1, [sp, #8]
 1810              	.LBB580:
 1811              	.LBB581:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1812              		.loc 10 53 27 view .LVU497
 1813 0026 F7EE008A 		vmov.f32	s17, #1.0e+0
 1814              	.LBE581:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 57


 1815              	.LBE580:
 108:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 1816              		.loc 14 108 18 view .LVU498
 1817 002a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1818              	.LVL119:
 109:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1819              		.loc 14 109 2 is_stmt 1 view .LVU499
 109:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1820              		.loc 14 109 19 is_stmt 0 view .LVU500
 1821 002e 8DF80C50 		strb	r5, [sp, #12]
 1822 0032 8DF80D60 		strb	r6, [sp, #13]
 1823 0036 B0EE480A 		vmov.f32	s0, s16
 1824 003a 0399     		ldr	r1, [sp, #12]
 1825 003c 6848     		ldr	r0, .L73+12
 1826 003e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1827              	.LVL120:
 110:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 1828              		.loc 14 110 2 is_stmt 1 view .LVU501
 110:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 1829              		.loc 14 110 16 is_stmt 0 view .LVU502
 1830 0042 0222     		movs	r2, #2
 1831 0044 0B23     		movs	r3, #11
 1832 0046 B0EE480A 		vmov.f32	s0, s16
 1833 004a 8DF81020 		strb	r2, [sp, #16]
 1834 004e 8DF81130 		strb	r3, [sp, #17]
 1835 0052 6448     		ldr	r0, .L73+16
 1836 0054 0499     		ldr	r1, [sp, #16]
 1837 0056 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1838              	.LVL121:
 111:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 1839              		.loc 14 111 2 is_stmt 1 view .LVU503
 111:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 1840              		.loc 14 111 20 is_stmt 0 view .LVU504
 1841 005a 634B     		ldr	r3, .L73+20
 1842 005c 6348     		ldr	r0, .L73+24
 1843 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1844 0060 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1845 0062 42EA0121 		orr	r1, r2, r1, lsl #8
 1846 0066 2A46     		mov	r2, r5
 1847 0068 FFF7FEFF 		bl	_ZN5daisy6GateIn4InitENS_3PinEb
 1848              	.LVL122:
 112:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 1849              		.loc 14 112 2 is_stmt 1 view .LVU505
 112:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 1850              		.loc 14 112 16 is_stmt 0 view .LVU506
 1851 006c 604B     		ldr	r3, .L73+28
 1852 006e 6148     		ldr	r0, .L73+32
 1853 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1854 0072 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1855 0074 42EA0121 		orr	r1, r2, r1, lsl #8
 1856 0078 2A46     		mov	r2, r5
 1857 007a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitENS_3PinEb
 1858              	.LVL123:
 115:AmpSim.cpp    **** 	led_link.Init(hw.A9, GPIO::Mode::OUTPUT);
 1859              		.loc 14 115 2 is_stmt 1 view .LVU507
 115:AmpSim.cpp    **** 	led_link.Init(hw.A9, GPIO::Mode::OUTPUT);
 1860              		.loc 14 115 15 is_stmt 0 view .LVU508
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 58


 1861 007e 5E4B     		ldr	r3, .L73+36
 1862 0080 0094     		str	r4, [sp]
 1863 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1864 0084 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1865 0086 2346     		mov	r3, r4
 1866 0088 5C48     		ldr	r0, .L73+40
 1867 008a 42EA0121 		orr	r1, r2, r1, lsl #8
 1868 008e 2A46     		mov	r2, r5
 1869 0090 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1870              	.LVL124:
 116:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 1871              		.loc 14 116 2 is_stmt 1 view .LVU509
 116:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 1872              		.loc 14 116 16 is_stmt 0 view .LVU510
 1873 0094 5A4A     		ldr	r2, .L73+44
 1874 0096 0094     		str	r4, [sp]
 1875 0098 2346     		mov	r3, r4
 1876 009a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1877 009c 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1878 009e 5948     		ldr	r0, .L73+48
 1879 00a0 41EA0221 		orr	r1, r1, r2, lsl #8
 1880 00a4 2A46     		mov	r2, r5
 1881 00a6 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1882              	.LVL125:
 117:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 1883              		.loc 14 117 2 is_stmt 1 view .LVU511
 117:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 1884              		.loc 14 117 16 is_stmt 0 view .LVU512
 1885 00aa 574A     		ldr	r2, .L73+52
 1886 00ac 0094     		str	r4, [sp]
 1887 00ae 2346     		mov	r3, r4
 1888 00b0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1889 00b2 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1890 00b4 5548     		ldr	r0, .L73+56
 1891 00b6 41EA0221 		orr	r1, r1, r2, lsl #8
 1892 00ba 2A46     		mov	r2, r5
 1893 00bc FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1894              	.LVL126:
 118:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 1895              		.loc 14 118 2 is_stmt 1 view .LVU513
 118:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 1896              		.loc 14 118 17 is_stmt 0 view .LVU514
 1897 00c0 534A     		ldr	r2, .L73+60
 1898 00c2 0094     		str	r4, [sp]
 1899 00c4 2346     		mov	r3, r4
 1900 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1901 00c8 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1902 00ca 5248     		ldr	r0, .L73+64
 1903 00cc 41EA0221 		orr	r1, r1, r2, lsl #8
 1904 00d0 2A46     		mov	r2, r5
 1905 00d2 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1906              	.LVL127:
 119:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 1907              		.loc 14 119 2 is_stmt 1 view .LVU515
 119:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 1908              		.loc 14 119 16 is_stmt 0 view .LVU516
 1909 00d6 504A     		ldr	r2, .L73+68
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 59


 1910 00d8 0094     		str	r4, [sp]
 1911 00da 2346     		mov	r3, r4
 1912 00dc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1913 00de 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1914 00e0 4E48     		ldr	r0, .L73+72
 1915 00e2 41EA0221 		orr	r1, r1, r2, lsl #8
 1916 00e6 2A46     		mov	r2, r5
 1917 00e8 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1918              	.LVL128:
 120:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 1919              		.loc 14 120 2 is_stmt 1 view .LVU517
 120:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 1920              		.loc 14 120 17 is_stmt 0 view .LVU518
 1921 00ec 4C4A     		ldr	r2, .L73+76
 1922 00ee 0094     		str	r4, [sp]
 1923 00f0 2346     		mov	r3, r4
 1924 00f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1925 00f4 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1926 00f6 4B48     		ldr	r0, .L73+80
 1927 00f8 41EA0221 		orr	r1, r1, r2, lsl #8
 1928 00fc 2A46     		mov	r2, r5
 1929 00fe FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1930              	.LVL129:
 122:AmpSim.cpp    **** 	led_time_pwm.Init(hw.B8, false, 1000.0f);
 1931              		.loc 14 122 2 is_stmt 1 view .LVU519
 122:AmpSim.cpp    **** 	led_time_pwm.Init(hw.B8, false, 1000.0f);
 1932              		.loc 14 122 19 is_stmt 0 view .LVU520
 1933 0102 0923     		movs	r3, #9
 1934 0104 8DF81450 		strb	r5, [sp, #20]
 1935 0108 2246     		mov	r2, r4
 1936 010a 8DF81530 		strb	r3, [sp, #21]
 1937 010e 0599     		ldr	r1, [sp, #20]
 1938 0110 9FED450A 		vldr.32	s0, .L73+84
 1939 0114 4548     		ldr	r0, .L73+88
 1940 0116 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 1941              	.LVL130:
 123:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 1942              		.loc 14 123 2 is_stmt 1 view .LVU521
 123:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 1943              		.loc 14 123 18 is_stmt 0 view .LVU522
 1944 011a 9FED450A 		vldr.32	s0, .L73+92
 1945 011e 4348     		ldr	r0, .L73+88
 1946 0120 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 1947              	.LVL131:
 126:AmpSim.cpp    **** 	led_delay.Write(true);
 1948              		.loc 14 126 2 is_stmt 1 view .LVU523
 126:AmpSim.cpp    **** 	led_delay.Write(true);
 1949              		.loc 14 126 17 is_stmt 0 view .LVU524
 1950 0124 2946     		mov	r1, r5
 1951 0126 3948     		ldr	r0, .L73+56
 1952 0128 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1953              	.LVL132:
 127:AmpSim.cpp    **** 	led_stereo.Write(true);
 1954              		.loc 14 127 2 is_stmt 1 view .LVU525
 127:AmpSim.cpp    **** 	led_stereo.Write(true);
 1955              		.loc 14 127 18 is_stmt 0 view .LVU526
 1956 012c 2946     		mov	r1, r5
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 60


 1957 012e 3D48     		ldr	r0, .L73+80
 1958 0130 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1959              	.LVL133:
 128:AmpSim.cpp    **** 	state_fx = false;
 1960              		.loc 14 128 2 is_stmt 1 view .LVU527
 128:AmpSim.cpp    **** 	state_fx = false;
 1961              		.loc 14 128 11 is_stmt 0 view .LVU528
 1962 0134 3F4B     		ldr	r3, .L73+96
 132:AmpSim.cpp    **** 	time_osc.Init(hw.AudioSampleRate());
 1963              		.loc 14 132 15 view .LVU529
 1964 0136 2748     		ldr	r0, .L73
 128:AmpSim.cpp    **** 	state_fx = false;
 1965              		.loc 14 128 11 view .LVU530
 1966 0138 1C70     		strb	r4, [r3]
 129:AmpSim.cpp    **** 	state_stereo = true;
 1967              		.loc 14 129 2 is_stmt 1 view .LVU531
 129:AmpSim.cpp    **** 	state_stereo = true;
 1968              		.loc 14 129 15 is_stmt 0 view .LVU532
 1969 013a 3F4B     		ldr	r3, .L73+100
 1970 013c 1D70     		strb	r5, [r3]
 132:AmpSim.cpp    **** 	time_osc.Init(hw.AudioSampleRate());
 1971              		.loc 14 132 2 is_stmt 1 view .LVU533
 132:AmpSim.cpp    **** 	time_osc.Init(hw.AudioSampleRate());
 1972              		.loc 14 132 15 is_stmt 0 view .LVU534
 1973 013e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 1974              	.LVL134:
 1975 0142 F0EE407A 		vmov.f32	s15, s0
 1976              	.LBB586:
 1977              	.LBB582:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1978              		.loc 10 52 20 view .LVU535
 1979 0146 3D4D     		ldr	r5, .L73+104
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1980              		.loc 10 57 20 view .LVU536
 1981 0148 0022     		movs	r2, #0
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1982              		.loc 10 55 20 view .LVU537
 1983 014a 4FF07C53 		mov	r3, #1056964608
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1984              		.loc 10 58 34 view .LVU538
 1985 014e 2846     		mov	r0, r5
 1986 0150 B0EE480A 		vmov.f32	s0, s16
 1987              	.LVL135:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1988              		.loc 10 58 34 view .LVU539
 1989              	.LBE582:
 1990              	.LBI580:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1991              		.loc 10 50 10 is_stmt 1 view .LVU540
 1992              	.LBB583:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1993              		.loc 10 52 9 view .LVU541
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1994              		.loc 10 53 27 is_stmt 0 view .LVU542
 1995 0154 88EEA77A 		vdiv.f32	s14, s17, s15
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1996              		.loc 10 57 20 view .LVU543
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 61


 1997 0158 AA61     		str	r2, [r5, #24]	@ float
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1998              		.loc 10 52 20 view .LVU544
 1999 015a C5ED047A 		vstr.32	s15, [r5, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 2000              		.loc 10 53 9 is_stmt 1 view .LVU545
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 2001              		.loc 10 55 20 is_stmt 0 view .LVU546
 2002 015e 6B60     		str	r3, [r5, #4]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 2003              		.loc 10 56 20 view .LVU547
 2004 0160 EB60     		str	r3, [r5, #12]	@ float
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 2005              		.loc 10 54 20 view .LVU548
 2006 0162 85ED028A 		vstr.32	s16, [r5, #8]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 2007              		.loc 10 53 20 view .LVU549
 2008 0166 85ED057A 		vstr.32	s14, [r5, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 2009              		.loc 10 54 9 is_stmt 1 view .LVU550
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 2010              		.loc 10 55 9 view .LVU551
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 2011              		.loc 10 56 9 view .LVU552
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 2012              		.loc 10 57 9 view .LVU553
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 2013              		.loc 10 58 9 view .LVU554
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 2014              		.loc 10 58 34 is_stmt 0 view .LVU555
 2015 016a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 2016              	.LVL136:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2017              		.loc 10 61 20 view .LVU556
 2018 016e 40F20113 		movw	r3, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 2019              		.loc 10 58 34 view .LVU557
 2020 0172 F0EE407A 		vmov.f32	s15, s0
 2021              	.LBE583:
 2022              	.LBE586:
 2023              	.LBB587:
 2024              	.LBB588:
 2025              		.loc 10 70 34 view .LVU558
 2026 0176 2846     		mov	r0, r5
 2027 0178 B0EE680A 		vmov.f32	s0, s17
 2028              	.LBE588:
 2029              	.LBE587:
 2030              	.LBB592:
 2031              	.LBB584:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2032              		.loc 10 61 20 view .LVU559
 2033 017c 2B85     		strh	r3, [r5, #40]	@ movhi
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 2034              		.loc 10 58 20 view .LVU560
 2035 017e C5ED077A 		vstr.32	s15, [r5, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 2036              		.loc 10 59 9 is_stmt 1 view .LVU561
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 62


  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 2037              		.loc 10 60 9 view .LVU562
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2038              		.loc 10 61 9 view .LVU563
 2039              	.LVL137:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2040              		.loc 10 61 9 is_stmt 0 view .LVU564
 2041              	.LBE584:
 2042              	.LBE592:
 133:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
 2043              		.loc 14 133 2 is_stmt 1 view .LVU565
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 2044              		.loc 10 81 9 view .LVU566
 134:AmpSim.cpp    **** 	time_osc.SetFreq(1.0);
 2045              		.loc 14 134 2 view .LVU567
 2046              	.LBB593:
 2047              	.LBI587:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 2048              		.loc 10 67 17 view .LVU568
 2049              	.LBB589:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2050              		.loc 10 69 9 view .LVU569
 2051              	.LBE589:
 2052              	.LBE593:
 2053              	.LBB594:
 2054              	.LBB585:
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 2055              		.loc 10 59 20 is_stmt 0 view .LVU570
 2056 0182 2C70     		strb	r4, [r5]
 2057              	.LBE585:
 2058              	.LBE594:
 2059              	.LBB595:
 2060              	.LBB590:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2061              		.loc 10 69 20 view .LVU571
 2062 0184 C5ED028A 		vstr.32	s17, [r5, #8]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2063              		.loc 10 70 9 is_stmt 1 view .LVU572
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2064              		.loc 10 70 34 is_stmt 0 view .LVU573
 2065 0188 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 2066              	.LVL138:
 2067              	.LBE590:
 2068              	.LBE595:
 137:AmpSim.cpp    **** 	hw.adc.Start();
 2069              		.loc 14 137 14 view .LVU574
 2070 018c 2C48     		ldr	r0, .L73+108
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 63


 2071              	.LBB596:
 2072              	.LBB591:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2073              		.loc 10 70 20 view .LVU575
 2074 018e 85ED070A 		vstr.32	s0, [r5, #28]
 2075              	.LVL139:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 2076              		.loc 10 70 20 view .LVU576
 2077              	.LBE591:
 2078              	.LBE596:
 137:AmpSim.cpp    **** 	hw.adc.Start();
 2079              		.loc 14 137 2 is_stmt 1 view .LVU577
 137:AmpSim.cpp    **** 	hw.adc.Start();
 2080              		.loc 14 137 14 is_stmt 0 view .LVU578
 2081 0192 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 2082              	.LVL140:
 140:AmpSim.cpp    **** 	setFilterConstants(hw.AudioSampleRate());
 2083              		.loc 14 140 2 is_stmt 1 view .LVU579
 140:AmpSim.cpp    **** 	setFilterConstants(hw.AudioSampleRate());
 2084              		.loc 14 140 20 is_stmt 0 view .LVU580
 2085 0196 0F48     		ldr	r0, .L73
 2086 0198 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 2087              	.LVL141:
 2088 019c FFF7FEFF 		bl	_Z18setFilterConstantsf
 2089              	.LVL142:
 141:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 2090              		.loc 14 141 2 is_stmt 1 view .LVU581
 141:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 2091              		.loc 14 141 22 is_stmt 0 view .LVU582
 2092 01a0 3146     		mov	r1, r6
 2093 01a2 0C48     		ldr	r0, .L73
 2094 01a4 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
 2095              	.LVL143:
 142:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 2096              		.loc 14 142 2 is_stmt 1 view .LVU583
 142:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 2097              		.loc 14 142 23 is_stmt 0 view .LVU584
 2098 01a8 0321     		movs	r1, #3
 2099 01aa 0A48     		ldr	r0, .L73
 2100 01ac FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 2101              	.LVL144:
 143:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
 2102              		.loc 14 143 2 is_stmt 1 view .LVU585
 143:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
 2103              		.loc 14 143 15 is_stmt 0 view .LVU586
 2104 01b0 2449     		ldr	r1, .L73+112
 2105 01b2 0848     		ldr	r0, .L73
 2106 01b4 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
 2107              	.LVL145:
 2108              	.L71:
 146:AmpSim.cpp    **** 	while(1) {
 2109              		.loc 14 146 2 is_stmt 1 discriminator 1 view .LVU587
 147:AmpSim.cpp    **** 		hw.ProcessAllControls();
 2110              		.loc 14 147 3 discriminator 1 view .LVU588
 2111              	.LBB597:
 2112              	.LBI597:
  66:../../libDaisy//src/daisy_patch_sm.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 64


  67:../../libDaisy//src/daisy_patch_sm.h ****         /** Initializes the memories, and core peripherals for the Daisy Patch SM */
  68:../../libDaisy//src/daisy_patch_sm.h ****         void Init();
  69:../../libDaisy//src/daisy_patch_sm.h **** 
  70:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts a non-interleaving audio callback */
  71:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::AudioCallback cb);
  72:../../libDaisy//src/daisy_patch_sm.h **** 
  73:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts an interleaving audio callback */
  74:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  75:../../libDaisy//src/daisy_patch_sm.h **** 
  76:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  77:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  78:../../libDaisy//src/daisy_patch_sm.h ****          */
  79:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  80:../../libDaisy//src/daisy_patch_sm.h **** 
  81:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  82:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  83:../../libDaisy//src/daisy_patch_sm.h ****          */
  84:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  85:../../libDaisy//src/daisy_patch_sm.h **** 
  86:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the transmission of audio. */
  87:../../libDaisy//src/daisy_patch_sm.h ****         void StopAudio();
  88:../../libDaisy//src/daisy_patch_sm.h **** 
  89:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the number of samples processed in an audio callback. 
  90:../../libDaisy//src/daisy_patch_sm.h ****          *  This will only take effect on the next invocation of `StartAudio`
  91:../../libDaisy//src/daisy_patch_sm.h ****          */
  92:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioBlockSize(size_t size);
  93:../../libDaisy//src/daisy_patch_sm.h **** 
  94:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the samplerate for the audio engine 
  95:../../libDaisy//src/daisy_patch_sm.h ****          *  This will set it to the closest valid samplerate. Options being:
  96:../../libDaisy//src/daisy_patch_sm.h ****          *  8kHz, 16kHz, 32kHz, 48kHz, and 96kHz
  97:../../libDaisy//src/daisy_patch_sm.h ****          */
  98:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(float sr);
  99:../../libDaisy//src/daisy_patch_sm.h **** 
 100:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(SaiHandle::Config::SampleRate sample_rate);
 101:../../libDaisy//src/daisy_patch_sm.h **** 
 102:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the number of samples processed in an audio callback */
 103:../../libDaisy//src/daisy_patch_sm.h ****         size_t AudioBlockSize();
 104:../../libDaisy//src/daisy_patch_sm.h **** 
 105:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the audio engine's samplerate in Hz */
 106:../../libDaisy//src/daisy_patch_sm.h ****         float AudioSampleRate();
 107:../../libDaisy//src/daisy_patch_sm.h **** 
 108:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the rate at which the audio callback will be called in Hz */
 109:../../libDaisy//src/daisy_patch_sm.h ****         float AudioCallbackRate();
 110:../../libDaisy//src/daisy_patch_sm.h **** 
 111:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts the Control ADCs 
 112:../../libDaisy//src/daisy_patch_sm.h ****          * 
 113:../../libDaisy//src/daisy_patch_sm.h ****          *  This is started automatically when Init() is called.
 114:../../libDaisy//src/daisy_patch_sm.h ****          */
 115:../../libDaisy//src/daisy_patch_sm.h ****         void StartAdc();
 116:../../libDaisy//src/daisy_patch_sm.h **** 
 117:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the Control ADCs */
 118:../../libDaisy//src/daisy_patch_sm.h ****         void StopAdc();
 119:../../libDaisy//src/daisy_patch_sm.h **** 
 120:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and filters all of the analog control inputs */
 121:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAnalogControls();
 122:../../libDaisy//src/daisy_patch_sm.h **** 
 123:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and debounces any of the digital control inputs 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 65


 124:../../libDaisy//src/daisy_patch_sm.h ****          *  This does nothing on this board at this time.
 125:../../libDaisy//src/daisy_patch_sm.h ****          */
 126:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessDigitalControls();
 127:../../libDaisy//src/daisy_patch_sm.h **** 
 128:../../libDaisy//src/daisy_patch_sm.h ****         /** Does both of the above */
 129:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAllControls()
 2113              		.loc 4 129 14 discriminator 1 view .LVU589
 2114              	.LBB598:
 130:../../libDaisy//src/daisy_patch_sm.h ****         {
 131:../../libDaisy//src/daisy_patch_sm.h ****             ProcessAnalogControls();
 2115              		.loc 4 131 13 discriminator 1 view .LVU590
 2116              		.loc 4 131 34 is_stmt 0 discriminator 1 view .LVU591
 2117 01b8 0648     		ldr	r0, .L73
 2118 01ba FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 2119              	.LVL146:
 132:../../libDaisy//src/daisy_patch_sm.h ****             ProcessDigitalControls();
 2120              		.loc 4 132 13 is_stmt 1 discriminator 1 view .LVU592
 2121              		.loc 4 132 35 is_stmt 0 discriminator 1 view .LVU593
 2122 01be 0548     		ldr	r0, .L73
 2123 01c0 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 2124              	.LVL147:
 2125              		.loc 4 132 35 discriminator 1 view .LVU594
 2126              	.LBE598:
 2127              	.LBE597:
 148:AmpSim.cpp    **** 		readKnobs();
 2128              		.loc 14 148 3 is_stmt 1 discriminator 1 view .LVU595
 148:AmpSim.cpp    **** 		readKnobs();
 2129              		.loc 14 148 12 is_stmt 0 discriminator 1 view .LVU596
 2130 01c4 FFF7FEFF 		bl	_Z9readKnobsv
 2131              	.LVL148:
 149:AmpSim.cpp    **** 		readButtons();		
 2132              		.loc 14 149 3 is_stmt 1 discriminator 1 view .LVU597
 149:AmpSim.cpp    **** 		readButtons();		
 2133              		.loc 14 149 14 is_stmt 0 discriminator 1 view .LVU598
 2134 01c8 FFF7FEFF 		bl	_Z11readButtonsv
 2135              	.LVL149:
 150:AmpSim.cpp    **** 		led_time_pwm.Update();
 2136              		.loc 14 150 3 is_stmt 1 discriminator 1 view .LVU599
 150:AmpSim.cpp    **** 		led_time_pwm.Update();
 2137              		.loc 14 150 22 is_stmt 0 discriminator 1 view .LVU600
 2138 01cc 1748     		ldr	r0, .L73+88
 2139 01ce FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 2140              	.LVL150:
 146:AmpSim.cpp    **** 	while(1) {
 2141              		.loc 14 146 2 is_stmt 1 discriminator 1 view .LVU601
 2142 01d2 F1E7     		b	.L71
 2143              	.L74:
 2144              		.align	2
 2145              	.L73:
 2146 01d4 00000000 		.word	.LANCHOR31
 2147 01d8 0000C842 		.word	1120403456
 2148 01dc 00000000 		.word	.LANCHOR15
 2149 01e0 00000000 		.word	.LANCHOR12
 2150 01e4 00000000 		.word	.LANCHOR18
 2151 01e8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM3B10E
 2152 01ec 00000000 		.word	.LANCHOR24
 2153 01f0 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B9E
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 66


 2154 01f4 00000000 		.word	.LANCHOR28
 2155 01f8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A9E
 2156 01fc 00000000 		.word	.LANCHOR17
 2157 0200 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D3E
 2158 0204 00000000 		.word	.LANCHOR14
 2159 0208 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D4E
 2160 020c 00000000 		.word	.LANCHOR20
 2161 0210 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D5E
 2162 0214 00000000 		.word	.LANCHOR21
 2163 0218 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B5E
 2164 021c 00000000 		.word	.LANCHOR27
 2165 0220 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B6E
 2166 0224 00000000 		.word	.LANCHOR26
 2167 0228 00007A44 		.word	1148846080
 2168 022c 00000000 		.word	.LANCHOR38
 2169 0230 0000FE42 		.word	1123942400
 2170 0234 00000000 		.word	.LANCHOR19
 2171 0238 00000000 		.word	.LANCHOR22
 2172 023c 00000000 		.word	.LANCHOR37
 2173 0240 14000000 		.word	.LANCHOR31+20
 2174 0244 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 2175              		.cfi_endproc
 2176              	.LFE4686:
 2178              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 2179              		.align	1
 2180              		.p2align 2,,3
 2181              		.syntax unified
 2182              		.thumb
 2183              		.thumb_func
 2184              		.fpu fpv5-d16
 2186              	_GLOBAL__sub_I_hw:
 2187              	.LFB5252:
 2188              		.loc 14 246 1 view -0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              	.LBB741:
 2193              	.LBI741:
 2194              		.loc 14 246 1 view .LVU603
 2195              	.LVL151:
 2196              	.LBB742:
 2197              	.LBB743:
 2198              	.LBI743:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2199              		.loc 4 64 9 view .LVU604
 2200              	.LBB744:
 2201              	.LBB745:
 2202              	.LBI745:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 2203              		.loc 9 96 5 view .LVU605
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 2204              		.loc 9 96 5 is_stmt 0 view .LVU606
 2205              	.LBE745:
 2206              	.LBB746:
 2207              	.LBI746:
 2208              		.file 16 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 67


   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 68


  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 69


 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2209              		.loc 16 166 5 is_stmt 1 view .LVU607
 2210              		.loc 16 166 5 is_stmt 0 view .LVU608
 2211              	.LBE746:
 2212              	.LBB749:
 2213              	.LBI749:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 70


 2214              		.loc 8 95 5 is_stmt 1 view .LVU609
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2215              		.loc 8 95 5 is_stmt 0 view .LVU610
 2216              	.LBE749:
 2217              	.LBB752:
 2218              	.LBI752:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2219              		.loc 7 109 5 is_stmt 1 view .LVU611
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 2220              		.loc 7 109 5 is_stmt 0 view .LVU612
 2221              	.LBE752:
 2222              	.LBB753:
 2223              	.LBI753:
  40:../../libDaisy//src/hid/usb.h **** 
 2224              		.loc 6 40 5 is_stmt 1 view .LVU613
  40:../../libDaisy//src/hid/usb.h **** 
 2225              		.loc 6 40 5 is_stmt 0 view .LVU614
 2226              	.LBE753:
 2227              	.LBB754:
 2228              	.LBI754:
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 2229              		.loc 5 28 5 is_stmt 1 view .LVU615
 2230              	.LBB755:
 2231              	.LBB756:
 2232              	.LBI756:
 2233              		.file 17 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 71


  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libDaisy//src/per/i2c.h ****     enum class Result
  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 2234              		.loc 17 82 5 view .LVU616
 2235              		.loc 17 82 5 is_stmt 0 view .LVU617
 2236              	.LBE756:
 2237              	.LBE755:
 2238              	.LBE754:
 2239              	.LBB761:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 72


 2240              	.LBI761:
 2241              		.file 18 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 73


  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 2242              		.loc 18 84 5 is_stmt 1 view .LVU618
 2243              		.loc 18 84 5 is_stmt 0 view .LVU619
 2244              	.LBE761:
 2245              	.LBE744:
 2246              	.LBE743:
 2247              	.LBE742:
 2248              	.LBE741:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2249              		.loc 4 64 24 is_stmt 1 view .LVU620
 2250              	.LBB946:
 2251              	.LBB943:
 2252              	.LBB802:
 2253              	.LBB798:
 2254              	.LBB764:
 2255              	.LBI764:
  18:../../libDaisy//src/hid/gatein.h **** 
 2256              		.loc 2 18 5 view .LVU621
 2257              	.LBB765:
 2258              	.LBB766:
 2259              	.LBI766:
 2260              		.file 19 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 74


   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 75


  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 2261              		.loc 19 74 5 view .LVU622
 2262              	.LBB767:
 2263              	.LBB768:
 2264              	.LBI768:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2265              		.loc 19 68 9 view .LVU623
 2266              	.LBB769:
 2267              	.LBB770:
 2268              	.LBB771:
 2269              	.LBI771:
 2270              		.file 20 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 76


  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 77


  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 78


 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 79


 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 80


 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 2271              		.loc 20 272 15 view .LVU624
 2272              		.loc 20 272 15 is_stmt 0 view .LVU625
 2273              	.LBE771:
 2274              	.LBE770:
 2275              	.LBE769:
 2276              	.LBE768:
 2277              	.LBE767:
 2278              	.LBE766:
 2279              	.LBE765:
 2280              	.LBE764:
 2281              	.LBB778:
 2282              	.LBI778:
  18:../../libDaisy//src/hid/gatein.h **** 
 2283              		.loc 2 18 5 is_stmt 1 view .LVU626
 2284              	.LBB779:
 2285              	.LBB780:
 2286              	.LBI780:
 2287              		.loc 19 74 5 view .LVU627
 2288              	.LBB781:
 2289              	.LBB782:
 2290              	.LBI782:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2291              		.loc 19 68 9 view .LVU628
 2292              	.LBB783:
 2293              	.LBB784:
 2294              	.LBB785:
 2295              	.LBI785:
 2296              		.loc 20 272 15 view .LVU629
 2297              		.loc 20 272 15 is_stmt 0 view .LVU630
 2298              	.LBE785:
 2299              	.LBE784:
 2300              	.LBE783:
 2301              	.LBE782:
 2302              	.LBE781:
 2303              	.LBE780:
 2304              	.LBE779:
 2305              	.LBE778:
 2306              	.LBE798:
 2307              	.LBE802:
 2308              	.LBE943:
 2309              	.LBE946:
 2310              		.loc 14 246 1 view .LVU631
 2311 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2312              		.cfi_def_cfa_offset 24
 2313              		.cfi_offset 3, -24
 2314              		.cfi_offset 4, -20
 2315              		.cfi_offset 5, -16
 2316              		.cfi_offset 6, -12
 2317              		.cfi_offset 7, -8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 81


 2318              		.cfi_offset 14, -4
 2319              	.LBB947:
 2320              	.LBB944:
 2321              	.LBB803:
 2322              	.LBB799:
 2323              	.LBB792:
 2324              	.LBB747:
 2325              	.LBB748:
 2326              		.loc 16 166 34 view .LVU632
 2327 0002 4248     		ldr	r0, .L77
 2328 0004 0024     		movs	r4, #0
 2329              	.LBE748:
 2330              	.LBE747:
 2331              	.LBE792:
 2332              	.LBE799:
 2333              	.LBE803:
  19:AmpSim.cpp    **** DaisyPatchSM hw;
 2334              		.loc 14 19 14 view .LVU633
 2335 0006 424D     		ldr	r5, .L77+4
 2336              	.LBB804:
 2337              	.LBB800:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 2338              		.loc 4 64 24 view .LVU634
 2339 0008 4FF60B76 		movw	r6, #65291
 2340              	.LBE800:
 2341              	.LBE804:
  23:AmpSim.cpp    **** static Svf BassLowPass;
 2342              		.loc 14 23 12 view .LVU635
 2343 000c 414F     		ldr	r7, .L77+8
  19:AmpSim.cpp    **** DaisyPatchSM hw;
 2344              		.loc 14 19 14 view .LVU636
 2345 000e 2A46     		mov	r2, r5
 2346 0010 4149     		ldr	r1, .L77+12
 2347              	.LBB805:
 2348              	.LBB801:
 2349              	.LBB793:
 2350              	.LBB760:
 2351              	.LBB759:
 2352              	.LBB757:
 2353              	.LBB758:
 2354              		.loc 17 82 33 view .LVU637
 2355 0012 0462     		str	r4, [r0, #32]
 2356              	.LBE758:
 2357              	.LBE757:
 2358              	.LBE759:
 2359              	.LBE760:
 2360              	.LBE793:
 2361              	.LBB794:
 2362              	.LBB762:
 2363              	.LBB763:
 2364              		.loc 18 84 33 view .LVU638
 2365 0014 8462     		str	r4, [r0, #40]
 2366              	.LBE763:
 2367              	.LBE762:
 2368              	.LBE794:
 2369              	.LBB795:
 2370              	.LBB750:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 82


 2371              	.LBB751:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 2372              		.loc 8 95 35 view .LVU639
 2373 0016 C0E90344 		strd	r4, r4, [r0, #12]
 2374              	.LBE751:
 2375              	.LBE750:
 2376              	.LBE795:
 2377              	.LBB796:
 2378              	.LBB777:
 2379              	.LBB776:
 2380              	.LBB775:
 2381              	.LBB774:
 2382              	.LBB773:
 2383              	.LBB772:
  69:../../libDaisy//src/per/gpio.h ****         {
 2384              		.loc 19 69 73 view .LVU640
 2385 001a C0E96C64 		strd	r6, r4, [r0, #432]
 2386 001e C0E96E44 		strd	r4, r4, [r0, #440]
 2387              	.LBE772:
 2388              	.LBE773:
 2389              	.LBE774:
 2390              	.LBE775:
 2391              	.LBE776:
 2392              	.LBE777:
 2393              	.LBE796:
 2394              	.LBB797:
 2395              	.LBB791:
 2396              	.LBB790:
 2397              	.LBB789:
 2398              	.LBB788:
 2399              	.LBB787:
 2400              	.LBB786:
 2401 0022 C0E97264 		strd	r6, r4, [r0, #456]
 2402 0026 C0E97444 		strd	r4, r4, [r0, #464]
 2403              	.LVL152:
  69:../../libDaisy//src/per/gpio.h ****         {
 2404              		.loc 19 69 73 view .LVU641
 2405              	.LBE786:
 2406              	.LBE787:
 2407              	.LBE788:
 2408              	.LBE789:
 2409              	.LBE790:
 2410              	.LBE791:
 2411              	.LBE797:
 2412              	.LBE801:
 2413              	.LBE805:
  19:AmpSim.cpp    **** DaisyPatchSM hw;
 2414              		.loc 14 19 14 view .LVU642
 2415 002a FFF7FEFF 		bl	__aeabi_atexit
 2416              	.LVL153:
 2417              	.LBB806:
 2418              	.LBI806:
  29:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 2419              		.loc 13 29 5 is_stmt 1 view .LVU643
  29:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 2420              		.loc 13 29 5 is_stmt 0 view .LVU644
 2421              	.LBE806:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 83


  22:AmpSim.cpp    **** static OnePole AmpLowPass;
 2422              		.loc 14 22 16 view .LVU645
 2423 002e 2A46     		mov	r2, r5
 2424 0030 3A49     		ldr	r1, .L77+16
 2425 0032 3B48     		ldr	r0, .L77+20
 2426 0034 FFF7FEFF 		bl	__aeabi_atexit
 2427              	.LVL154:
 2428              	.LBB807:
 2429              	.LBI807:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2430              		.loc 11 29 5 is_stmt 1 view .LVU646
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2431              		.loc 11 29 5 is_stmt 0 view .LVU647
 2432              	.LBE807:
  23:AmpSim.cpp    **** static Svf BassLowPass;
 2433              		.loc 14 23 12 view .LVU648
 2434 0038 2A46     		mov	r2, r5
 2435 003a 3946     		mov	r1, r7
 2436 003c 3948     		ldr	r0, .L77+24
 2437 003e FFF7FEFF 		bl	__aeabi_atexit
 2438              	.LVL155:
 2439              	.LBB808:
 2440              	.LBI808:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2441              		.loc 11 29 5 is_stmt 1 view .LVU649
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2442              		.loc 11 29 5 is_stmt 0 view .LVU650
 2443              	.LBE808:
  24:AmpSim.cpp    **** static Svf    AmpBandPass;
 2444              		.loc 14 24 15 view .LVU651
 2445 0042 2A46     		mov	r2, r5
 2446 0044 3946     		mov	r1, r7
 2447 0046 3848     		ldr	r0, .L77+28
 2448 0048 FFF7FEFF 		bl	__aeabi_atexit
 2449              	.LVL156:
 2450              	.LBB809:
 2451              	.LBI809:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2452              		.loc 11 29 5 is_stmt 1 view .LVU652
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2453              		.loc 11 29 5 is_stmt 0 view .LVU653
 2454              	.LBE809:
  25:AmpSim.cpp    **** static Svf    TrebleBandPass;
 2455              		.loc 14 25 15 view .LVU654
 2456 004c 2A46     		mov	r2, r5
 2457 004e 3946     		mov	r1, r7
 2458 0050 3648     		ldr	r0, .L77+32
 2459 0052 FFF7FEFF 		bl	__aeabi_atexit
 2460              	.LVL157:
 2461              	.LBB810:
 2462              	.LBI810:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2463              		.loc 11 29 5 is_stmt 1 view .LVU655
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 2464              		.loc 11 29 5 is_stmt 0 view .LVU656
 2465              	.LBE810:
  26:AmpSim.cpp    **** static Svf    MidBandPass;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 84


 2466              		.loc 14 26 15 view .LVU657
 2467 0056 2A46     		mov	r2, r5
 2468 0058 3946     		mov	r1, r7
 2469 005a 3548     		ldr	r0, .L77+36
  32:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 2470              		.loc 14 32 8 view .LVU658
 2471 005c 354F     		ldr	r7, .L77+40
  26:AmpSim.cpp    **** static Svf    MidBandPass;
 2472              		.loc 14 26 15 view .LVU659
 2473 005e FFF7FEFF 		bl	__aeabi_atexit
 2474              	.LVL158:
 2475              	.LBB811:
 2476              	.LBI811:
  31:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 2477              		.loc 12 31 5 is_stmt 1 view .LVU660
  31:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 2478              		.loc 12 31 5 is_stmt 0 view .LVU661
 2479              	.LBE811:
  27:AmpSim.cpp    **** static Overdrive Drive;
 2480              		.loc 14 27 18 view .LVU662
 2481 0062 2A46     		mov	r2, r5
 2482 0064 3449     		ldr	r1, .L77+44
 2483 0066 3548     		ldr	r0, .L77+48
 2484 0068 FFF7FEFF 		bl	__aeabi_atexit
 2485              	.LVL159:
 2486              	.LBB812:
 2487              	.LBI812:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2488              		.loc 1 41 5 is_stmt 1 view .LVU663
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2489              		.loc 1 41 5 is_stmt 0 view .LVU664
 2490              	.LBE812:
  32:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 2491              		.loc 14 32 8 view .LVU665
 2492 006c 2A46     		mov	r2, r5
 2493 006e 3946     		mov	r1, r7
 2494 0070 3348     		ldr	r0, .L77+52
 2495 0072 FFF7FEFF 		bl	__aeabi_atexit
 2496              	.LVL160:
 2497              	.LBB813:
 2498              	.LBI813:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2499              		.loc 1 41 5 is_stmt 1 view .LVU666
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2500              		.loc 1 41 5 is_stmt 0 view .LVU667
 2501              	.LBE813:
  32:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 2502              		.loc 14 32 21 view .LVU668
 2503 0076 2A46     		mov	r2, r5
 2504 0078 3946     		mov	r1, r7
 2505 007a 3248     		ldr	r0, .L77+56
 2506 007c FFF7FEFF 		bl	__aeabi_atexit
 2507              	.LVL161:
 2508              	.LBB814:
 2509              	.LBI814:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2510              		.loc 1 41 5 is_stmt 1 view .LVU669
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 85


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 2511              		.loc 1 41 5 is_stmt 0 view .LVU670
 2512              	.LBE814:
  32:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 2513              		.loc 14 32 35 view .LVU671
 2514 0080 2A46     		mov	r2, r5
 2515 0082 3946     		mov	r1, r7
 2516 0084 3048     		ldr	r0, .L77+60
 2517 0086 FFF7FEFF 		bl	__aeabi_atexit
 2518              	.LVL162:
 2519              	.LBB815:
 2520              	.LBI815:
 2521              		.loc 19 74 5 is_stmt 1 view .LVU672
 2522              	.LBB816:
 2523              	.LBB817:
 2524              	.LBI817:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2525              		.loc 19 68 9 view .LVU673
 2526              	.LBB818:
 2527              	.LBB819:
 2528              	.LBB820:
 2529              	.LBI820:
 2530              		.loc 20 272 15 view .LVU674
 2531              		.loc 20 272 15 is_stmt 0 view .LVU675
 2532              	.LBE820:
 2533              	.LBE819:
 2534              	.LBE818:
 2535              	.LBE817:
 2536              	.LBE816:
 2537              	.LBE815:
 2538              	.LBB826:
 2539              	.LBB827:
 2540              		.loc 19 74 12 view .LVU676
 2541 008a 304B     		ldr	r3, .L77+64
 2542              	.LBE827:
 2543              	.LBE826:
 2544              	.LBB837:
 2545              	.LBB824:
 2546 008c 304A     		ldr	r2, .L77+68
 2547              	.LBE824:
 2548              	.LBE837:
  36:AmpSim.cpp    **** Led led_time_pwm;
 2549              		.loc 14 36 5 view .LVU677
 2550 008e 3149     		ldr	r1, .L77+72
 2551 0090 3148     		ldr	r0, .L77+76
 2552              	.LBB838:
 2553              	.LBB835:
 2554              	.LBB828:
 2555              	.LBB829:
 2556              	.LBB830:
  69:../../libDaisy//src/per/gpio.h ****         {
 2557              		.loc 19 69 73 view .LVU678
 2558 0092 C3E90064 		strd	r6, r4, [r3]
 2559 0096 C3E90244 		strd	r4, r4, [r3, #8]
 2560              	.LBE830:
 2561              	.LBE829:
 2562              	.LBE828:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 86


 2563              	.LBE835:
 2564              	.LBE838:
 2565              	.LBB839:
 2566              	.LBB840:
 2567              		.loc 19 74 12 view .LVU679
 2568 009a 304B     		ldr	r3, .L77+80
 2569              	.LBE840:
 2570              	.LBE839:
 2571              	.LBB850:
 2572              	.LBB825:
 2573              	.LBB823:
 2574              	.LBB822:
 2575              	.LBB821:
  69:../../libDaisy//src/per/gpio.h ****         {
 2576              		.loc 19 69 73 view .LVU680
 2577 009c C2E90064 		strd	r6, r4, [r2]
 2578 00a0 C2E90244 		strd	r4, r4, [r2, #8]
 2579              	.LVL163:
  69:../../libDaisy//src/per/gpio.h ****         {
 2580              		.loc 19 69 73 view .LVU681
 2581              	.LBE821:
 2582              	.LBE822:
 2583              	.LBE823:
 2584              	.LBE825:
 2585              	.LBE850:
 2586              	.LBB851:
 2587              	.LBI826:
 2588              		.loc 19 74 5 is_stmt 1 view .LVU682
 2589              	.LBB836:
 2590              	.LBB834:
 2591              	.LBI828:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2592              		.loc 19 68 9 view .LVU683
 2593              	.LBB833:
 2594              	.LBB832:
 2595              	.LBB831:
 2596              	.LBI831:
 2597              		.loc 20 272 15 view .LVU684
 2598              		.loc 20 272 15 is_stmt 0 view .LVU685
 2599              	.LBE831:
 2600              	.LBE832:
 2601              	.LBE833:
 2602              	.LBE834:
 2603              	.LBE836:
 2604              	.LBE851:
 2605              	.LBB852:
 2606              	.LBI852:
 2607              		.loc 19 74 5 is_stmt 1 view .LVU686
 2608              	.LBB853:
 2609              	.LBB854:
 2610              	.LBI854:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2611              		.loc 19 68 9 view .LVU687
 2612              	.LBB855:
 2613              	.LBB856:
 2614              	.LBB857:
 2615              	.LBI857:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 87


 2616              		.loc 20 272 15 view .LVU688
 2617              		.loc 20 272 15 is_stmt 0 view .LVU689
 2618              	.LBE857:
 2619              	.LBE856:
 2620              	.LBE855:
 2621              	.LBE854:
 2622              	.LBE853:
 2623              	.LBE852:
 2624              	.LBB863:
 2625              	.LBB848:
 2626              	.LBB841:
 2627              	.LBB842:
 2628              	.LBB843:
  69:../../libDaisy//src/per/gpio.h ****         {
 2629              		.loc 19 69 73 view .LVU690
 2630 00a4 C3E90064 		strd	r6, r4, [r3]
 2631 00a8 C3E90244 		strd	r4, r4, [r3, #8]
 2632              	.LBE843:
 2633              	.LBE842:
 2634              	.LBE841:
 2635              	.LBE848:
 2636              	.LBE863:
 2637              	.LBB864:
 2638              	.LBB861:
 2639              		.loc 19 74 12 view .LVU691
 2640 00ac 2C4A     		ldr	r2, .L77+84
 2641              	.LBE861:
 2642              	.LBE864:
 2643              	.LBB865:
 2644              	.LBB866:
 2645 00ae 2D4B     		ldr	r3, .L77+88
 2646              	.LBE866:
 2647              	.LBE865:
 2648              	.LBB876:
 2649              	.LBB862:
 2650              	.LBB860:
 2651              	.LBB859:
 2652              	.LBB858:
  69:../../libDaisy//src/per/gpio.h ****         {
 2653              		.loc 19 69 73 view .LVU692
 2654 00b0 C2E90064 		strd	r6, r4, [r2]
 2655 00b4 C2E90244 		strd	r4, r4, [r2, #8]
 2656              	.LVL164:
  69:../../libDaisy//src/per/gpio.h ****         {
 2657              		.loc 19 69 73 view .LVU693
 2658              	.LBE858:
 2659              	.LBE859:
 2660              	.LBE860:
 2661              	.LBE862:
 2662              	.LBE876:
 2663              	.LBB877:
 2664              	.LBI839:
 2665              		.loc 19 74 5 is_stmt 1 view .LVU694
 2666              	.LBB849:
 2667              	.LBB847:
 2668              	.LBI841:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 88


 2669              		.loc 19 68 9 view .LVU695
 2670              	.LBB846:
 2671              	.LBB845:
 2672              	.LBB844:
 2673              	.LBI844:
 2674              		.loc 20 272 15 view .LVU696
 2675              		.loc 20 272 15 is_stmt 0 view .LVU697
 2676              	.LBE844:
 2677              	.LBE845:
 2678              	.LBE846:
 2679              	.LBE847:
 2680              	.LBE849:
 2681              	.LBE877:
 2682              	.LBB878:
 2683              	.LBI878:
 2684              		.loc 19 74 5 is_stmt 1 view .LVU698
 2685              	.LBB879:
 2686              	.LBB880:
 2687              	.LBI880:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2688              		.loc 19 68 9 view .LVU699
 2689              	.LBB881:
 2690              	.LBB882:
 2691              	.LBB883:
 2692              	.LBI883:
 2693              		.loc 20 272 15 view .LVU700
 2694              		.loc 20 272 15 is_stmt 0 view .LVU701
 2695              	.LBE883:
 2696              	.LBE882:
 2697              	.LBE881:
 2698              	.LBE880:
 2699              	.LBE879:
 2700              	.LBE878:
 2701              	.LBB893:
 2702              	.LBB874:
 2703              	.LBB867:
 2704              	.LBB868:
 2705              	.LBB869:
  69:../../libDaisy//src/per/gpio.h ****         {
 2706              		.loc 19 69 73 view .LVU702
 2707 00b8 C3E90064 		strd	r6, r4, [r3]
 2708 00bc C3E90244 		strd	r4, r4, [r3, #8]
 2709              	.LBE869:
 2710              	.LBE868:
 2711              	.LBE867:
 2712              	.LBE874:
 2713              	.LBE893:
 2714              	.LBB894:
 2715              	.LBB890:
 2716              		.loc 19 74 12 view .LVU703
 2717 00c0 294A     		ldr	r2, .L77+92
 2718              	.LBE890:
 2719              	.LBE894:
 2720              	.LBB895:
 2721              	.LBB896:
 2722 00c2 2A4B     		ldr	r3, .L77+96
 2723              	.LBE896:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 89


 2724              	.LBE895:
 2725              	.LBB906:
 2726              	.LBB891:
 2727              	.LBB888:
 2728              	.LBB886:
 2729              	.LBB884:
  69:../../libDaisy//src/per/gpio.h ****         {
 2730              		.loc 19 69 73 view .LVU704
 2731 00c4 C2E90064 		strd	r6, r4, [r2]
 2732              	.LBE884:
 2733              	.LBE886:
 2734              	.LBE888:
 2735              	.LBE891:
 2736              	.LBE906:
 2737              	.LBB907:
 2738              	.LBB904:
 2739              	.LBB897:
 2740              	.LBB898:
 2741              	.LBB899:
 2742 00c8 C3E90064 		strd	r6, r4, [r3]
 2743 00cc C3E90244 		strd	r4, r4, [r3, #8]
 2744              	.LBE899:
 2745              	.LBE898:
 2746              	.LBE897:
 2747              	.LBE904:
 2748              	.LBE907:
 2749              	.LBB908:
 2750              	.LBB892:
 2751              	.LBB889:
 2752              	.LBB887:
 2753              	.LBB885:
 2754 00d0 C2E90244 		strd	r4, r4, [r2, #8]
 2755              	.LVL165:
  69:../../libDaisy//src/per/gpio.h ****         {
 2756              		.loc 19 69 73 view .LVU705
 2757              	.LBE885:
 2758              	.LBE887:
 2759              	.LBE889:
 2760              	.LBE892:
 2761              	.LBE908:
 2762              	.LBB909:
 2763              	.LBI865:
 2764              		.loc 19 74 5 is_stmt 1 view .LVU706
 2765              	.LBB875:
 2766              	.LBB873:
 2767              	.LBI867:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2768              		.loc 19 68 9 view .LVU707
 2769              	.LBB872:
 2770              	.LBB871:
 2771              	.LBB870:
 2772              	.LBI870:
 2773              		.loc 20 272 15 view .LVU708
 2774              		.loc 20 272 15 is_stmt 0 view .LVU709
 2775              	.LBE870:
 2776              	.LBE871:
 2777              	.LBE872:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 90


 2778              	.LBE873:
 2779              	.LBE875:
 2780              	.LBE909:
 2781              	.LBB910:
 2782              	.LBI895:
 2783              		.loc 19 74 5 is_stmt 1 view .LVU710
 2784              	.LBB905:
 2785              	.LBB903:
 2786              	.LBI897:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2787              		.loc 19 68 9 view .LVU711
 2788              	.LBB902:
 2789              	.LBB901:
 2790              	.LBB900:
 2791              	.LBI900:
 2792              		.loc 20 272 15 view .LVU712
 2793              		.loc 20 272 15 is_stmt 0 view .LVU713
 2794              	.LBE900:
 2795              	.LBE901:
 2796              	.LBE902:
 2797              	.LBE903:
 2798              	.LBE905:
 2799              	.LBE910:
 2800              	.LBB911:
 2801              	.LBI911:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2802              		.loc 3 24 5 is_stmt 1 view .LVU714
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2803              		.loc 3 24 5 is_stmt 0 view .LVU715
 2804              	.LBE911:
  36:AmpSim.cpp    **** Led led_time_pwm;
 2805              		.loc 14 36 5 view .LVU716
 2806 00d4 2A46     		mov	r2, r5
 2807 00d6 FFF7FEFF 		bl	__aeabi_atexit
 2808              	.LVL166:
 2809              	.LBB912:
 2810              	.LBI912:
  18:../../libDaisy//src/hid/gatein.h **** 
 2811              		.loc 2 18 5 is_stmt 1 view .LVU717
 2812              	.LBB913:
 2813              	.LBB914:
 2814              	.LBI914:
 2815              		.loc 19 74 5 view .LVU718
 2816              	.LBB915:
 2817              	.LBB916:
 2818              	.LBI916:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2819              		.loc 19 68 9 view .LVU719
 2820              	.LBB917:
 2821              	.LBB918:
 2822              	.LBB919:
 2823              	.LBI919:
 2824              		.loc 20 272 15 view .LVU720
 2825              		.loc 20 272 15 is_stmt 0 view .LVU721
 2826              	.LBE919:
 2827              	.LBE918:
 2828              	.LBE917:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 91


 2829              	.LBE916:
 2830              	.LBE915:
 2831              	.LBE914:
  18:../../libDaisy//src/hid/gatein.h **** 
 2832              		.loc 2 18 14 view .LVU722
 2833 00da 2548     		ldr	r0, .L77+100
 2834              	.LBE913:
 2835              	.LBE912:
  40:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 2836              		.loc 14 40 8 view .LVU723
 2837 00dc 2A46     		mov	r2, r5
 2838 00de 2549     		ldr	r1, .L77+104
 2839              	.LBB926:
 2840              	.LBB925:
 2841              	.LBB924:
 2842              	.LBB923:
 2843              	.LBB922:
 2844              	.LBB921:
 2845              	.LBB920:
  69:../../libDaisy//src/per/gpio.h ****         {
 2846              		.loc 19 69 73 view .LVU724
 2847 00e0 C0E90064 		strd	r6, r4, [r0]
 2848 00e4 C0E90244 		strd	r4, r4, [r0, #8]
 2849              	.LVL167:
  69:../../libDaisy//src/per/gpio.h ****         {
 2850              		.loc 19 69 73 view .LVU725
 2851              	.LBE920:
 2852              	.LBE921:
 2853              	.LBE922:
 2854              	.LBE923:
 2855              	.LBE924:
 2856              	.LBE925:
 2857              	.LBE926:
  40:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 2858              		.loc 14 40 8 view .LVU726
 2859 00e8 FFF7FEFF 		bl	__aeabi_atexit
 2860              	.LVL168:
 2861              	.LBB927:
 2862              	.LBI927:
  18:../../libDaisy//src/hid/gatein.h **** 
 2863              		.loc 2 18 5 is_stmt 1 view .LVU727
 2864              	.LBB928:
 2865              	.LBB929:
 2866              	.LBI929:
 2867              		.loc 19 74 5 view .LVU728
 2868              	.LBB930:
 2869              	.LBB931:
 2870              	.LBI931:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 2871              		.loc 19 68 9 view .LVU729
 2872              	.LBB932:
 2873              	.LBB933:
 2874              	.LBB934:
 2875              	.LBI934:
 2876              		.loc 20 272 15 view .LVU730
 2877              		.loc 20 272 15 is_stmt 0 view .LVU731
 2878              	.LBE934:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 92


 2879              	.LBE933:
 2880              	.LBE932:
 2881              	.LBE931:
 2882              	.LBE930:
 2883              	.LBE929:
  18:../../libDaisy//src/hid/gatein.h **** 
 2884              		.loc 2 18 14 view .LVU732
 2885 00ec 2248     		ldr	r0, .L77+108
 2886              	.LBE928:
 2887              	.LBE927:
  40:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 2888              		.loc 14 40 23 view .LVU733
 2889 00ee 2A46     		mov	r2, r5
 2890 00f0 2049     		ldr	r1, .L77+104
 2891              	.LBB941:
 2892              	.LBB940:
  18:../../libDaisy//src/hid/gatein.h **** 
 2893              		.loc 2 18 14 view .LVU734
 2894 00f2 0660     		str	r6, [r0]
 2895              	.LBB939:
 2896              	.LBB938:
 2897              	.LBB937:
 2898              	.LBB936:
 2899              	.LBB935:
  69:../../libDaisy//src/per/gpio.h ****         {
 2900              		.loc 19 69 73 view .LVU735
 2901 00f4 C460     		str	r4, [r0, #12]
 2902              	.LVL169:
  69:../../libDaisy//src/per/gpio.h ****         {
 2903              		.loc 19 69 73 view .LVU736
 2904 00f6 C0E90144 		strd	r4, r4, [r0, #4]
 2905              	.LBE935:
 2906              	.LBE936:
 2907              	.LBE937:
 2908              	.LBE938:
 2909              	.LBE939:
 2910              	.LBE940:
 2911              	.LBE941:
  40:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 2912              		.loc 14 40 23 view .LVU737
 2913 00fa FFF7FEFF 		bl	__aeabi_atexit
 2914              	.LVL170:
 2915              	.LBB942:
 2916              	.LBI942:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2917              		.loc 10 23 5 is_stmt 1 view .LVU738
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2918              		.loc 10 23 5 is_stmt 0 view .LVU739
 2919              	.LBE942:
  42:AmpSim.cpp    **** Oscillator time_osc;
 2920              		.loc 14 42 12 view .LVU740
 2921 00fe 2A46     		mov	r2, r5
 2922 0100 1E49     		ldr	r1, .L77+112
 2923 0102 1F48     		ldr	r0, .L77+116
 2924              	.LBE944:
 2925              	.LBE947:
 2926              		.loc 14 246 1 view .LVU741
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 93


 2927 0104 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 2928              		.cfi_restore 14
 2929              		.cfi_restore 7
 2930              		.cfi_restore 6
 2931              		.cfi_restore 5
 2932              		.cfi_restore 4
 2933              		.cfi_restore 3
 2934              		.cfi_def_cfa_offset 0
 2935              	.LBB948:
 2936              	.LBB945:
  42:AmpSim.cpp    **** Oscillator time_osc;
 2937              		.loc 14 42 12 view .LVU742
 2938 0108 FFF7FEBF 		b	__aeabi_atexit
 2939              	.LVL171:
 2940              	.L78:
 2941              		.align	2
 2942              	.L77:
 2943 010c 00000000 		.word	.LANCHOR31
 2944 0110 00000000 		.word	__dso_handle
 2945 0114 00000000 		.word	_ZN7daisysp3SvfD1Ev
 2946 0118 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 2947 011c 00000000 		.word	_ZN7daisysp7OnePoleD1Ev
 2948 0120 00000000 		.word	.LANCHOR9
 2949 0124 00000000 		.word	.LANCHOR7
 2950 0128 00000000 		.word	.LANCHOR10
 2951 012c 00000000 		.word	.LANCHOR5
 2952 0130 00000000 		.word	.LANCHOR1
 2953 0134 00000000 		.word	_ZN5daisy6SwitchD1Ev
 2954 0138 00000000 		.word	_ZN7daisysp9OverdriveD1Ev
 2955 013c 00000000 		.word	.LANCHOR4
 2956 0140 00000000 		.word	.LANCHOR15
 2957 0144 00000000 		.word	.LANCHOR12
 2958 0148 00000000 		.word	.LANCHOR18
 2959 014c 00000000 		.word	.LANCHOR14
 2960 0150 00000000 		.word	.LANCHOR17
 2961 0154 00000000 		.word	_ZN5daisy3LedD1Ev
 2962 0158 00000000 		.word	.LANCHOR38
 2963 015c 00000000 		.word	.LANCHOR21
 2964 0160 00000000 		.word	.LANCHOR20
 2965 0164 00000000 		.word	.LANCHOR26
 2966 0168 00000000 		.word	.LANCHOR27
 2967 016c 00000000 		.word	.LANCHOR23
 2968 0170 00000000 		.word	.LANCHOR24
 2969 0174 00000000 		.word	_ZN5daisy6GateInD1Ev
 2970 0178 00000000 		.word	.LANCHOR28
 2971 017c 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 2972 0180 00000000 		.word	.LANCHOR37
 2973              	.LBE945:
 2974              	.LBE948:
 2975              		.cfi_endproc
 2976              	.LFE5252:
 2978              		.section	.init_array,"aw",%init_array
 2979              		.align	2
 2980 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 2981              		.global	led_brightness
 2982              		.global	time_osc
 2983              		.global	button_cv
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 94


 2984              		.global	button_stereo
 2985              		.global	state_cv_button
 2986              		.global	state_stereo_button
 2987              		.global	state_cv
 2988              		.global	state_stereo
 2989              		.global	state_fx
 2990              		.global	state_blend
 2991              		.global	state_link
 2992              		.global	led_time_pwm
 2993              		.global	led_time
 2994              		.global	led_stereo
 2995              		.global	led_split
 2996              		.global	led_reverb
 2997              		.global	led_delay
 2998              		.global	led_blend
 2999              		.global	led_link
 3000              		.global	button_fx
 3001              		.global	button_blend
 3002              		.global	button_link
 3003              		.global	knob_mid_freq
 3004              		.global	knob_fx_tone
 3005              		.global	knob_fx_time
 3006              		.global	knob_fx_feedback
 3007              		.global	knob_fx_dry_wet
 3008              		.global	knob_color
 3009              		.global	knob_bass
 3010              		.global	knob_mid_gain
 3011              		.global	knob_treble
 3012              		.global	knob_volume
 3013              		.global	knob_gain
 3014              		.global	hw
 3015              		.section	.bss._ZL10AmpLowPass,"aw",%nobits
 3016              		.align	2
 3017              		.set	.LANCHOR9,. + 0
 3020              	_ZL10AmpLowPass:
 3021 0000 00000000 		.space	16
 3021      00000000 
 3021      00000000 
 3021      00000000 
 3022              		.section	.bss._ZL11AmpBandPass,"aw",%nobits
 3023              		.align	2
 3024              		.set	.LANCHOR10,. + 0
 3027              	_ZL11AmpBandPass:
 3028 0000 00000000 		.space	76
 3028      00000000 
 3028      00000000 
 3028      00000000 
 3028      00000000 
 3029              		.section	.bss._ZL11BassLowPass,"aw",%nobits
 3030              		.align	2
 3031              		.set	.LANCHOR7,. + 0
 3034              	_ZL11BassLowPass:
 3035 0000 00000000 		.space	76
 3035      00000000 
 3035      00000000 
 3035      00000000 
 3035      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 95


 3036              		.section	.bss._ZL11MidBandPass,"aw",%nobits
 3037              		.align	2
 3038              		.set	.LANCHOR1,. + 0
 3041              	_ZL11MidBandPass:
 3042 0000 00000000 		.space	76
 3042      00000000 
 3042      00000000 
 3042      00000000 
 3042      00000000 
 3043              		.section	.bss._ZL14TrebleBandPass,"aw",%nobits
 3044              		.align	2
 3045              		.set	.LANCHOR5,. + 0
 3048              	_ZL14TrebleBandPass:
 3049 0000 00000000 		.space	76
 3049      00000000 
 3049      00000000 
 3049      00000000 
 3049      00000000 
 3050              		.section	.bss._ZL5Drive,"aw",%nobits
 3051              		.align	2
 3052              		.set	.LANCHOR4,. + 0
 3055              	_ZL5Drive:
 3056 0000 00000000 		.space	12
 3056      00000000 
 3056      00000000 
 3057              		.section	.bss.button_blend,"aw",%nobits
 3058              		.align	2
 3059              		.set	.LANCHOR12,. + 0
 3062              	button_blend:
 3063 0000 00000000 		.space	16
 3063      00000000 
 3063      00000000 
 3063      00000000 
 3064              		.section	.bss.button_cv,"aw",%nobits
 3065              		.align	2
 3066              		.set	.LANCHOR28,. + 0
 3069              	button_cv:
 3070 0000 00000000 		.space	24
 3070      00000000 
 3070      00000000 
 3070      00000000 
 3070      00000000 
 3071              		.section	.bss.button_fx,"aw",%nobits
 3072              		.align	2
 3073              		.set	.LANCHOR18,. + 0
 3076              	button_fx:
 3077 0000 00000000 		.space	16
 3077      00000000 
 3077      00000000 
 3077      00000000 
 3078              		.section	.bss.button_link,"aw",%nobits
 3079              		.align	2
 3080              		.set	.LANCHOR15,. + 0
 3083              	button_link:
 3084 0000 00000000 		.space	16
 3084      00000000 
 3084      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 96


 3084      00000000 
 3085              		.section	.bss.button_stereo,"aw",%nobits
 3086              		.align	2
 3087              		.set	.LANCHOR24,. + 0
 3090              	button_stereo:
 3091 0000 00000000 		.space	24
 3091      00000000 
 3091      00000000 
 3091      00000000 
 3091      00000000 
 3092              		.section	.bss.hw,"aw",%nobits
 3093              		.align	2
 3094              		.set	.LANCHOR31,. + 0
 3097              	hw:
 3098 0000 00000000 		.space	496
 3098      00000000 
 3098      00000000 
 3098      00000000 
 3098      00000000 
 3099              		.section	.bss.knob_bass,"aw",%nobits
 3100              		.align	2
 3101              		.set	.LANCHOR8,. + 0
 3104              	knob_bass:
 3105 0000 00000000 		.space	4
 3106              		.section	.bss.knob_color,"aw",%nobits
 3107              		.align	2
 3108              		.set	.LANCHOR32,. + 0
 3111              	knob_color:
 3112 0000 00000000 		.space	4
 3113              		.section	.bss.knob_fx_dry_wet,"aw",%nobits
 3114              		.align	2
 3115              		.set	.LANCHOR33,. + 0
 3118              	knob_fx_dry_wet:
 3119 0000 00000000 		.space	4
 3120              		.section	.bss.knob_fx_feedback,"aw",%nobits
 3121              		.align	2
 3122              		.set	.LANCHOR35,. + 0
 3125              	knob_fx_feedback:
 3126 0000 00000000 		.space	4
 3127              		.section	.bss.knob_fx_time,"aw",%nobits
 3128              		.align	2
 3129              		.set	.LANCHOR34,. + 0
 3132              	knob_fx_time:
 3133 0000 00000000 		.space	4
 3134              		.section	.bss.knob_fx_tone,"aw",%nobits
 3135              		.align	2
 3136              		.set	.LANCHOR36,. + 0
 3139              	knob_fx_tone:
 3140 0000 00000000 		.space	4
 3141              		.section	.bss.knob_gain,"aw",%nobits
 3142              		.align	2
 3143              		.set	.LANCHOR3,. + 0
 3146              	knob_gain:
 3147 0000 00000000 		.space	4
 3148              		.section	.bss.knob_mid_freq,"aw",%nobits
 3149              		.align	1
 3150              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 97


 3153              	knob_mid_freq:
 3154 0000 0000     		.space	2
 3155              		.section	.bss.knob_mid_gain,"aw",%nobits
 3156              		.align	2
 3157              		.set	.LANCHOR2,. + 0
 3160              	knob_mid_gain:
 3161 0000 00000000 		.space	4
 3162              		.section	.bss.knob_treble,"aw",%nobits
 3163              		.align	2
 3164              		.set	.LANCHOR6,. + 0
 3167              	knob_treble:
 3168 0000 00000000 		.space	4
 3169              		.section	.bss.knob_volume,"aw",%nobits
 3170              		.align	2
 3171              		.set	.LANCHOR11,. + 0
 3174              	knob_volume:
 3175 0000 00000000 		.space	4
 3176              		.section	.bss.led_blend,"aw",%nobits
 3177              		.align	2
 3178              		.set	.LANCHOR14,. + 0
 3181              	led_blend:
 3182 0000 00000000 		.space	20
 3182      00000000 
 3182      00000000 
 3182      00000000 
 3182      00000000 
 3183              		.section	.bss.led_brightness,"aw",%nobits
 3184              		.align	2
 3187              	led_brightness:
 3188 0000 00000000 		.space	4
 3189              		.section	.bss.led_delay,"aw",%nobits
 3190              		.align	2
 3191              		.set	.LANCHOR20,. + 0
 3194              	led_delay:
 3195 0000 00000000 		.space	20
 3195      00000000 
 3195      00000000 
 3195      00000000 
 3195      00000000 
 3196              		.section	.bss.led_link,"aw",%nobits
 3197              		.align	2
 3198              		.set	.LANCHOR17,. + 0
 3201              	led_link:
 3202 0000 00000000 		.space	20
 3202      00000000 
 3202      00000000 
 3202      00000000 
 3202      00000000 
 3203              		.section	.bss.led_reverb,"aw",%nobits
 3204              		.align	2
 3205              		.set	.LANCHOR21,. + 0
 3208              	led_reverb:
 3209 0000 00000000 		.space	20
 3209      00000000 
 3209      00000000 
 3209      00000000 
 3209      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 98


 3210              		.section	.bss.led_split,"aw",%nobits
 3211              		.align	2
 3212              		.set	.LANCHOR27,. + 0
 3215              	led_split:
 3216 0000 00000000 		.space	20
 3216      00000000 
 3216      00000000 
 3216      00000000 
 3216      00000000 
 3217              		.section	.bss.led_stereo,"aw",%nobits
 3218              		.align	2
 3219              		.set	.LANCHOR26,. + 0
 3222              	led_stereo:
 3223 0000 00000000 		.space	20
 3223      00000000 
 3223      00000000 
 3223      00000000 
 3223      00000000 
 3224              		.section	.bss.led_time,"aw",%nobits
 3225              		.align	2
 3226              		.set	.LANCHOR23,. + 0
 3229              	led_time:
 3230 0000 00000000 		.space	20
 3230      00000000 
 3230      00000000 
 3230      00000000 
 3230      00000000 
 3231              		.section	.bss.led_time_pwm,"aw",%nobits
 3232              		.align	2
 3233              		.set	.LANCHOR38,. + 0
 3236              	led_time_pwm:
 3237 0000 00000000 		.space	28
 3237      00000000 
 3237      00000000 
 3237      00000000 
 3237      00000000 
 3238              		.section	.bss.state_blend,"aw",%nobits
 3239              		.set	.LANCHOR13,. + 0
 3242              	state_blend:
 3243 0000 00       		.space	1
 3244              		.section	.bss.state_cv,"aw",%nobits
 3245              		.set	.LANCHOR30,. + 0
 3248              	state_cv:
 3249 0000 00       		.space	1
 3250              		.section	.bss.state_cv_button,"aw",%nobits
 3251              		.set	.LANCHOR29,. + 0
 3254              	state_cv_button:
 3255 0000 00       		.space	1
 3256              		.section	.bss.state_fx,"aw",%nobits
 3257              		.set	.LANCHOR19,. + 0
 3260              	state_fx:
 3261 0000 00       		.space	1
 3262              		.section	.bss.state_link,"aw",%nobits
 3263              		.set	.LANCHOR16,. + 0
 3266              	state_link:
 3267 0000 00       		.space	1
 3268              		.section	.bss.state_stereo,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 99


 3269              		.set	.LANCHOR22,. + 0
 3272              	state_stereo:
 3273 0000 00       		.space	1
 3274              		.section	.bss.state_stereo_button,"aw",%nobits
 3275              		.set	.LANCHOR25,. + 0
 3278              	state_stereo_button:
 3279 0000 00       		.space	1
 3280              		.section	.bss.time_osc,"aw",%nobits
 3281              		.align	2
 3282              		.set	.LANCHOR37,. + 0
 3285              	time_osc:
 3286 0000 00000000 		.space	44
 3286      00000000 
 3286      00000000 
 3286      00000000 
 3286      00000000 
 3287              		.text
 3288              	.Letext0:
 3289              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 3290              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 3291              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 3292              		.file 24 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 3293              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 3294              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 3295              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 3296              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 3297              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 3298              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 3299              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 3300              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 3301              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 3302              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 3303              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 3304              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 3305              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 3306              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 3307              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 3308              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 3309              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 3310              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 3311              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 3312              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 3313              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 3314              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 3315              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 3316              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 3317              		.file 49 "../../libDaisy//src/per/tim.h"
 3318              		.file 50 "../../libDaisy//src/per/sai.h"
 3319              		.file 51 "../../libDaisy//src/hid/ctrl.h"
 3320              		.file 52 "../../libDaisy//src/util/wav_format.h"
 3321              		.file 53 "../../libDaisy//src/dev/max11300.h"
 3322              		.file 54 "../../libDaisy//src/dev/sdram.h"
 3323              		.file 55 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 3324              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 3325              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 3326              		.file 58 "../../DaisySP//Source/Control/adenv.h"
 3327              		.file 59 "../../DaisySP//Source/Utility/dsp.h"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 100


 3328              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 3329              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 3330              		.file 62 "../../libDaisy//src/dev/sr_595.h"
 3331              		.file 63 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 101


DEFINED SYMBOLS
                            *ABS*:00000000 AmpSim.cpp
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:17     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:43     .text._ZN5daisy6GateInD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:51     .text._ZN5daisy6GateInD2Ev:00000000 _ZN5daisy6GateInD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:51     .text._ZN5daisy6GateInD2Ev:00000000 _ZN5daisy6GateInD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:68     .text._ZN5daisy3LedD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:76     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:76     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:93     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:101    .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:101    .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:158    .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:166    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:166    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:183    .text._ZN7daisysp3SvfD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:191    .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:191    .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:208    .text._ZN7daisysp9OverdriveD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:216    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:216    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:233    .text._ZN7daisysp7OnePoleD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:241    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD2Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:241    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD1Ev
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:258    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:266    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:690    .text._Z13AudioCallbackPKPKfPPfj:000001f0 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:718    .text._Z11readButtonsv:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:726    .text._Z11readButtonsv:00000000 _Z11readButtonsv
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1200   .text._Z11readButtonsv:00000140 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1223   .text._Z9readKnobsv:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1231   .text._Z9readKnobsv:00000000 _Z9readKnobsv
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1482   .text._Z9readKnobsv:00000128 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1506   .text._Z18setFilterConstantsf:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1514   .text._Z18setFilterConstantsf:00000000 _Z18setFilterConstantsf
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1746   .text._Z18setFilterConstantsf:000000dc $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1765   .text.startup.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:1773   .text.startup.main:00000000 main
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:2146   .text.startup.main:000001d4 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:2179   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:2186   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:2943   .text.startup._GLOBAL__sub_I_hw:0000010c $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:2979   .init_array:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3187   .bss.led_brightness:00000000 led_brightness
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3285   .bss.time_osc:00000000 time_osc
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3069   .bss.button_cv:00000000 button_cv
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3090   .bss.button_stereo:00000000 button_stereo
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3254   .bss.state_cv_button:00000000 state_cv_button
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3278   .bss.state_stereo_button:00000000 state_stereo_button
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3248   .bss.state_cv:00000000 state_cv
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3272   .bss.state_stereo:00000000 state_stereo
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3260   .bss.state_fx:00000000 state_fx
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3242   .bss.state_blend:00000000 state_blend
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3266   .bss.state_link:00000000 state_link
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3236   .bss.led_time_pwm:00000000 led_time_pwm
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 102


C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3229   .bss.led_time:00000000 led_time
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3222   .bss.led_stereo:00000000 led_stereo
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3215   .bss.led_split:00000000 led_split
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3208   .bss.led_reverb:00000000 led_reverb
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3194   .bss.led_delay:00000000 led_delay
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3181   .bss.led_blend:00000000 led_blend
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3201   .bss.led_link:00000000 led_link
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3076   .bss.button_fx:00000000 button_fx
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3062   .bss.button_blend:00000000 button_blend
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3083   .bss.button_link:00000000 button_link
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3153   .bss.knob_mid_freq:00000000 knob_mid_freq
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3139   .bss.knob_fx_tone:00000000 knob_fx_tone
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3132   .bss.knob_fx_time:00000000 knob_fx_time
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3125   .bss.knob_fx_feedback:00000000 knob_fx_feedback
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3118   .bss.knob_fx_dry_wet:00000000 knob_fx_dry_wet
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3111   .bss.knob_color:00000000 knob_color
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3104   .bss.knob_bass:00000000 knob_bass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3160   .bss.knob_mid_gain:00000000 knob_mid_gain
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3167   .bss.knob_treble:00000000 knob_treble
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3174   .bss.knob_volume:00000000 knob_volume
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3146   .bss.knob_gain:00000000 knob_gain
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3097   .bss.hw:00000000 hw
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3016   .bss._ZL10AmpLowPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3020   .bss._ZL10AmpLowPass:00000000 _ZL10AmpLowPass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3023   .bss._ZL11AmpBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3027   .bss._ZL11AmpBandPass:00000000 _ZL11AmpBandPass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3030   .bss._ZL11BassLowPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3034   .bss._ZL11BassLowPass:00000000 _ZL11BassLowPass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3037   .bss._ZL11MidBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3041   .bss._ZL11MidBandPass:00000000 _ZL11MidBandPass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3044   .bss._ZL14TrebleBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3048   .bss._ZL14TrebleBandPass:00000000 _ZL14TrebleBandPass
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3051   .bss._ZL5Drive:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3055   .bss._ZL5Drive:00000000 _ZL5Drive
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3058   .bss.button_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3065   .bss.button_cv:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3072   .bss.button_fx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3079   .bss.button_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3086   .bss.button_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3093   .bss.hw:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3100   .bss.knob_bass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3107   .bss.knob_color:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3114   .bss.knob_fx_dry_wet:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3121   .bss.knob_fx_feedback:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3128   .bss.knob_fx_time:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3135   .bss.knob_fx_tone:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3142   .bss.knob_gain:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3149   .bss.knob_mid_freq:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3156   .bss.knob_mid_gain:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3163   .bss.knob_treble:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3170   .bss.knob_volume:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3177   .bss.led_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3184   .bss.led_brightness:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3190   .bss.led_delay:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3197   .bss.led_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3204   .bss.led_reverb:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3211   .bss.led_split:00000000 $d
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 103


C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3218   .bss.led_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3225   .bss.led_time:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3232   .bss.led_time_pwm:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3243   .bss.state_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3249   .bss.state_cv:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3255   .bss.state_cv_button:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3261   .bss.state_fx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3267   .bss.state_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3273   .bss.state_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3279   .bss.state_stereo_button:00000000 $d
C:\Users\PC\AppData\Local\Temp\cceoacZx.s:3281   .bss.time_osc:00000000 $d
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy6GateInD5Ev
                           .group:00000000 _ZN5daisy3LedD5Ev
                           .group:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev
                           .group:00000000 _ZN7daisysp3SvfD5Ev
                           .group:00000000 _ZN7daisysp9OverdriveD5Ev
                           .group:00000000 _ZN7daisysp7OnePoleD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp3Svf7ProcessEf
_ZN7daisysp9Overdrive8SetDriveEf
_ZN7daisysp9Overdrive7ProcessEf
_ZN7daisysp3Svf8SetDriveEf
_ZN5daisy6Switch8DebounceEv
_ZN5daisy4GPIO4ReadEv
_ZN5daisy4GPIO5WriteEb
_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy3Led3SetEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp9Overdrive4InitEv
_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitENS_3PinEb
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy3Led4InitE12dsy_gpio_pinbf
_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
_ZN5daisy3Led6UpdateEv
_ZN5daisy8patch_sm12DaisyPatchSM3B10E
_ZN5daisy8patch_sm12DaisyPatchSM2B9E
_ZN5daisy8patch_sm12DaisyPatchSM2A9E
_ZN5daisy8patch_sm12DaisyPatchSM2D3E
_ZN5daisy8patch_sm12DaisyPatchSM2D4E
_ZN5daisy8patch_sm12DaisyPatchSM2D5E
_ZN5daisy8patch_sm12DaisyPatchSM2B5E
_ZN5daisy8patch_sm12DaisyPatchSM2B6E
ARM GAS  C:\Users\PC\AppData\Local\Temp\cceoacZx.s 			page 104


__aeabi_atexit
__dso_handle
