ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"AmpSim.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1639:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1639:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1681:
  54              		.file 2 "../../libDaisy//src/hid/gatein.h"
   1:../../libDaisy//src/hid/gatein.h **** #pragma once
   2:../../libDaisy//src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libDaisy//src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libDaisy//src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libDaisy//src/hid/gatein.h **** 
   6:../../libDaisy//src/hid/gatein.h **** namespace daisy
   7:../../libDaisy//src/hid/gatein.h **** {
   8:../../libDaisy//src/hid/gatein.h **** /**
   9:../../libDaisy//src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../../libDaisy//src/hid/gatein.h ****    @author Stephen Hensley
  11:../../libDaisy//src/hid/gatein.h ****    @date    March 2020
  12:../../libDaisy//src/hid/gatein.h ****    @ingroup controls
  13:../../libDaisy//src/hid/gatein.h **** */
  14:../../libDaisy//src/hid/gatein.h **** class GateIn
  15:../../libDaisy//src/hid/gatein.h **** {
  16:../../libDaisy//src/hid/gatein.h ****   public:
  17:../../libDaisy//src/hid/gatein.h ****     /** GateIn Constructor */
  18:../../libDaisy//src/hid/gatein.h ****     GateIn() {}
  19:../../libDaisy//src/hid/gatein.h **** 
  20:../../libDaisy//src/hid/gatein.h ****     /** GateIn Destructor */
  21:../../libDaisy//src/hid/gatein.h ****     ~GateIn() {}
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 3


  55              		.loc 2 21 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 21 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1681:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67              		.section	.text._ZN5daisy3LedD2Ev,"axG",%progbits,_ZN5daisy3LedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy3LedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy3LedD2Ev:
  77              	.LVL2:
  78              	.LFB1844:
  79              		.file 3 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  80              		.loc 3 25 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 3 25 13 is_stmt 0 view .LVU5
  86 0000 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE1844:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 4


  90              		.weak	_ZN5daisy3LedD1Ev
  91              		.thumb_set _ZN5daisy3LedD1Ev,_ZN5daisy3LedD2Ev
  92              		.section	.text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev,"axG",%progbits,_ZN5daisy8patch_sm12DaisyPatch
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv5-d16
 101              	_ZN5daisy8patch_sm12DaisyPatchSMD2Ev:
 102              	.LVL3:
 103              	.LFB2555:
 104              		.file 4 "../../libDaisy//src/daisy_patch_sm.h"
   1:../../libDaisy//src/daisy_patch_sm.h **** #pragma once
   2:../../libDaisy//src/daisy_patch_sm.h **** 
   3:../../libDaisy//src/daisy_patch_sm.h **** #include "daisy.h"
   4:../../libDaisy//src/daisy_patch_sm.h **** 
   5:../../libDaisy//src/daisy_patch_sm.h **** namespace daisy
   6:../../libDaisy//src/daisy_patch_sm.h **** {
   7:../../libDaisy//src/daisy_patch_sm.h **** namespace patch_sm
   8:../../libDaisy//src/daisy_patch_sm.h **** {
   9:../../libDaisy//src/daisy_patch_sm.h ****     /** Accessors for the Analog Controls. 
  10:../../libDaisy//src/daisy_patch_sm.h ****      *  These cover the 8x Bipolar CV inputs
  11:../../libDaisy//src/daisy_patch_sm.h ****      *  as well as the 4x 0-3V3 ADC inputs on
  12:../../libDaisy//src/daisy_patch_sm.h ****      *  the hardware 
  13:../../libDaisy//src/daisy_patch_sm.h ****      * 
  14:../../libDaisy//src/daisy_patch_sm.h ****      *  When reading a value with DaisyPatchSM::GetAdcValue()
  15:../../libDaisy//src/daisy_patch_sm.h ****      * 
  16:../../libDaisy//src/daisy_patch_sm.h ****      *  patch.GetAdcValue(patch_sm::CV_1);
  17:../../libDaisy//src/daisy_patch_sm.h ****      */
  18:../../libDaisy//src/daisy_patch_sm.h ****     enum
  19:../../libDaisy//src/daisy_patch_sm.h ****     {
  20:../../libDaisy//src/daisy_patch_sm.h ****         CV_1 = 0,
  21:../../libDaisy//src/daisy_patch_sm.h ****         CV_2,
  22:../../libDaisy//src/daisy_patch_sm.h ****         CV_3,
  23:../../libDaisy//src/daisy_patch_sm.h ****         CV_4,
  24:../../libDaisy//src/daisy_patch_sm.h ****         CV_5,
  25:../../libDaisy//src/daisy_patch_sm.h ****         CV_6,
  26:../../libDaisy//src/daisy_patch_sm.h ****         CV_7,
  27:../../libDaisy//src/daisy_patch_sm.h ****         CV_8,
  28:../../libDaisy//src/daisy_patch_sm.h ****         ADC_9,
  29:../../libDaisy//src/daisy_patch_sm.h ****         ADC_10,
  30:../../libDaisy//src/daisy_patch_sm.h ****         ADC_11,
  31:../../libDaisy//src/daisy_patch_sm.h ****         ADC_12,
  32:../../libDaisy//src/daisy_patch_sm.h ****         ADC_LAST,
  33:../../libDaisy//src/daisy_patch_sm.h ****     };
  34:../../libDaisy//src/daisy_patch_sm.h **** 
  35:../../libDaisy//src/daisy_patch_sm.h ****     /** Enum for addressing the CV Outputs via the WriteCvOut function. */
  36:../../libDaisy//src/daisy_patch_sm.h ****     enum
  37:../../libDaisy//src/daisy_patch_sm.h ****     {
  38:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_BOTH = 0,
  39:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_1,
  40:../../libDaisy//src/daisy_patch_sm.h ****         CV_OUT_2,
  41:../../libDaisy//src/daisy_patch_sm.h ****     };
  42:../../libDaisy//src/daisy_patch_sm.h **** 
  43:../../libDaisy//src/daisy_patch_sm.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 5


  44:../../libDaisy//src/daisy_patch_sm.h ****     /** @brief Board support file for DaisyPatchSM hardware
  45:../../libDaisy//src/daisy_patch_sm.h ****      *  @author shensley
  46:../../libDaisy//src/daisy_patch_sm.h ****      *  @ingroup boards
  47:../../libDaisy//src/daisy_patch_sm.h ****      * 
  48:../../libDaisy//src/daisy_patch_sm.h ****      *  Daisy Patch SM is a complete Eurorack module DSP engine.
  49:../../libDaisy//src/daisy_patch_sm.h ****      *  Based on the Daisy Seed, with circuits added for 
  50:../../libDaisy//src/daisy_patch_sm.h ****      *  interfacing directly with eurorack modular synthesizers.
  51:../../libDaisy//src/daisy_patch_sm.h ****      */
  52:../../libDaisy//src/daisy_patch_sm.h ****     class DaisyPatchSM
  53:../../libDaisy//src/daisy_patch_sm.h ****     {
  54:../../libDaisy//src/daisy_patch_sm.h ****       public:
  55:../../libDaisy//src/daisy_patch_sm.h ****         /** Helper for mapping pins, and accessing them using the `GetPin` function */
  56:../../libDaisy//src/daisy_patch_sm.h ****         enum class PinBank
  57:../../libDaisy//src/daisy_patch_sm.h ****         {
  58:../../libDaisy//src/daisy_patch_sm.h ****             A,
  59:../../libDaisy//src/daisy_patch_sm.h ****             B,
  60:../../libDaisy//src/daisy_patch_sm.h ****             C,
  61:../../libDaisy//src/daisy_patch_sm.h ****             D
  62:../../libDaisy//src/daisy_patch_sm.h ****         };
  63:../../libDaisy//src/daisy_patch_sm.h **** 
  64:../../libDaisy//src/daisy_patch_sm.h ****         DaisyPatchSM() {}
  65:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 105              		.loc 4 65 9 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LBB450:
 111              	.LBI450:
 112              		.loc 2 21 5 view .LVU7
 113              		.loc 2 21 5 is_stmt 0 view .LVU8
 114              	.LBE450:
 115              	.LBB451:
 116              	.LBI451:
 117              		.loc 2 21 5 is_stmt 1 view .LVU9
 118              		.loc 2 21 5 is_stmt 0 view .LVU10
 119              	.LBE451:
 120              	.LBB452:
 121              	.LBI452:
 122              		.file 5 "../../libDaisy//src/dev/codec_pcm3060.h"
   1:../../libDaisy//src/dev/codec_pcm3060.h **** #pragma once
   2:../../libDaisy//src/dev/codec_pcm3060.h **** #ifndef DSY_CODEC_PCM3060_H
   3:../../libDaisy//src/dev/codec_pcm3060.h **** #define DSY_CODEC_PCM3060_H
   4:../../libDaisy//src/dev/codec_pcm3060.h **** #include "per/i2c.h"
   5:../../libDaisy//src/dev/codec_pcm3060.h **** namespace daisy
   6:../../libDaisy//src/dev/codec_pcm3060.h **** {
   7:../../libDaisy//src/dev/codec_pcm3060.h **** /**
   8:../../libDaisy//src/dev/codec_pcm3060.h ****  * @brief Driver for the TI PCM3060 Audio Codec.
   9:../../libDaisy//src/dev/codec_pcm3060.h ****  * @addtogroup codec
  10:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  11:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now this is a limited interface that uses I2C to communicate with the PCM3060
  12:../../libDaisy//src/dev/codec_pcm3060.h ****  * The device can also be accessed with SPI, which is not yet supported.
  13:../../libDaisy//src/dev/codec_pcm3060.h ****  * 
  14:../../libDaisy//src/dev/codec_pcm3060.h ****  * For now all registers are set to their defaults, and the Init function will 
  15:../../libDaisy//src/dev/codec_pcm3060.h ****  * perform a MRST and SRST before setting the format to 24bit LJ, and disabling 
  16:../../libDaisy//src/dev/codec_pcm3060.h ****  * power save for both the ADC and DAC.
  17:../../libDaisy//src/dev/codec_pcm3060.h ****  *
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 6


  18:../../libDaisy//src/dev/codec_pcm3060.h ****  */
  19:../../libDaisy//src/dev/codec_pcm3060.h **** class Pcm3060
  20:../../libDaisy//src/dev/codec_pcm3060.h **** {
  21:../../libDaisy//src/dev/codec_pcm3060.h ****   public:
  22:../../libDaisy//src/dev/codec_pcm3060.h ****     enum class Result
  23:../../libDaisy//src/dev/codec_pcm3060.h ****     {
  24:../../libDaisy//src/dev/codec_pcm3060.h ****         OK,
  25:../../libDaisy//src/dev/codec_pcm3060.h ****         ERR,
  26:../../libDaisy//src/dev/codec_pcm3060.h ****     };
  27:../../libDaisy//src/dev/codec_pcm3060.h **** 
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     Pcm3060() {}
  29:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 123              		.loc 5 29 5 is_stmt 1 view .LVU11
 124              		.loc 5 29 5 is_stmt 0 view .LVU12
 125              	.LBE452:
 126              	.LBB453:
 127              	.LBI453:
 128              		.file 6 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 7


  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 129              		.loc 6 42 5 is_stmt 1 view .LVU13
 130              		.loc 6 42 5 is_stmt 0 view .LVU14
 131              	.LBE453:
 132              	.LBB454:
 133              	.LBI454:
 134              		.file 7 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 8


  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 9


 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 135              		.loc 7 110 5 is_stmt 1 view .LVU15
 136              		.loc 7 110 5 is_stmt 0 view .LVU16
 137              	.LBE454:
 138              	.LBB455:
 139              	.LBI455:
 140              		.file 8 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 10


  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 141              		.loc 8 96 5 is_stmt 1 view .LVU17
 142              		.loc 8 96 5 is_stmt 0 view .LVU18
 143              	.LBE455:
 144              	.LBB456:
 145              	.LBI456:
 146              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 11


   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 12


  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 147              		.loc 9 97 5 is_stmt 1 view .LVU19
 148              		.loc 9 97 5 is_stmt 0 view .LVU20
 149              	.LBE456:
 150              		.loc 4 65 26 view .LVU21
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE2555:
 155              		.weak	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 156              		.thumb_set _ZN5daisy8patch_sm12DaisyPatchSMD1Ev,_ZN5daisy8patch_sm12DaisyPatchSMD2Ev
 157 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 158              		.align	1
 159              		.p2align 2,,3
 160              		.weak	_ZN7daisysp10OscillatorD2Ev
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv5-d16
 166              	_ZN7daisysp10OscillatorD2Ev:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 13


 167              	.LVL4:
 168              	.LFB4244:
 169              		.file 10 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 170              		.loc 10 24 5 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              		.loc 10 24 20 is_stmt 0 view .LVU23
 176 0000 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE4244:
 180              		.weak	_ZN7daisysp10OscillatorD1Ev
 181              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 182              		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 183              		.align	1
 184              		.p2align 2,,3
 185              		.weak	_ZN7daisysp3SvfD2Ev
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv5-d16
 191              	_ZN7daisysp3SvfD2Ev:
 192              	.LVL5:
 193              	.LFB4261:
 194              		.file 11 "../../DaisySP//Source/Filters/svf.h"
   1:../../DaisySP//Source/Filters/svf.h **** /*
   2:../../DaisySP//Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Filters/svf.h **** 
   4:../../DaisySP//Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/svf.h **** */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 14


   8:../../DaisySP//Source/Filters/svf.h **** 
   9:../../DaisySP//Source/Filters/svf.h **** #pragma once
  10:../../DaisySP//Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../DaisySP//Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../DaisySP//Source/Filters/svf.h **** 
  13:../../DaisySP//Source/Filters/svf.h **** namespace daisysp
  14:../../DaisySP//Source/Filters/svf.h **** {
  15:../../DaisySP//Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../DaisySP//Source/Filters/svf.h **** 
  17:../../DaisySP//Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../DaisySP//Source/Filters/svf.h **** 
  19:../../DaisySP//Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../DaisySP//Source/Filters/svf.h **** 
  21:../../DaisySP//Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../DaisySP//Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../DaisySP//Source/Filters/svf.h **** 
  24:../../DaisySP//Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../DaisySP//Source/Filters/svf.h **** */
  26:../../DaisySP//Source/Filters/svf.h **** class Svf
  27:../../DaisySP//Source/Filters/svf.h **** {
  28:../../DaisySP//Source/Filters/svf.h ****   public:
  29:../../DaisySP//Source/Filters/svf.h ****     Svf() {}
  30:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 195              		.loc 11 30 5 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200              		.loc 11 30 13 is_stmt 0 view .LVU25
 201 0000 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE4261:
 205              		.weak	_ZN7daisysp3SvfD1Ev
 206              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 207              		.section	.text._ZN7daisysp9OverdriveD2Ev,"axG",%progbits,_ZN7daisysp9OverdriveD5Ev,comdat
 208              		.align	1
 209              		.p2align 2,,3
 210              		.weak	_ZN7daisysp9OverdriveD2Ev
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv5-d16
 216              	_ZN7daisysp9OverdriveD2Ev:
 217              	.LVL6:
 218              	.LFB4398:
 219              		.file 12 "../../DaisySP//Source/Effects/overdrive.h"
   1:../../DaisySP//Source/Effects/overdrive.h **** /*
   2:../../DaisySP//Source/Effects/overdrive.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Effects/overdrive.h **** 
   4:../../DaisySP//Source/Effects/overdrive.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Effects/overdrive.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Effects/overdrive.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Effects/overdrive.h **** */
   8:../../DaisySP//Source/Effects/overdrive.h **** 
   9:../../DaisySP//Source/Effects/overdrive.h **** #pragma once
  10:../../DaisySP//Source/Effects/overdrive.h **** #ifndef DSY_OVERDRIVE_H
  11:../../DaisySP//Source/Effects/overdrive.h **** #define DSY_OVERDRIVE_H
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 15


  12:../../DaisySP//Source/Effects/overdrive.h **** 
  13:../../DaisySP//Source/Effects/overdrive.h **** #include <stdint.h>
  14:../../DaisySP//Source/Effects/overdrive.h **** #ifdef __cplusplus
  15:../../DaisySP//Source/Effects/overdrive.h **** 
  16:../../DaisySP//Source/Effects/overdrive.h **** /** @file overdrive.h */
  17:../../DaisySP//Source/Effects/overdrive.h **** 
  18:../../DaisySP//Source/Effects/overdrive.h **** namespace daisysp
  19:../../DaisySP//Source/Effects/overdrive.h **** {
  20:../../DaisySP//Source/Effects/overdrive.h **** /**  
  21:../../DaisySP//Source/Effects/overdrive.h ****        @brief Distortion / Overdrive Module
  22:../../DaisySP//Source/Effects/overdrive.h ****        @author Ported by Ben Sergentanis 
  23:../../DaisySP//Source/Effects/overdrive.h ****        @date Jan 2021 
  24:../../DaisySP//Source/Effects/overdrive.h ****        Ported from pichenettes/eurorack/plaits/dsp/fx/overdrive.h \n
  25:../../DaisySP//Source/Effects/overdrive.h ****        to an independent module. \n
  26:../../DaisySP//Source/Effects/overdrive.h ****        Original code written by Emilie Gillet in 2014. \n
  27:../../DaisySP//Source/Effects/overdrive.h **** */
  28:../../DaisySP//Source/Effects/overdrive.h **** class Overdrive
  29:../../DaisySP//Source/Effects/overdrive.h **** {
  30:../../DaisySP//Source/Effects/overdrive.h ****   public:
  31:../../DaisySP//Source/Effects/overdrive.h ****     Overdrive() {}
  32:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 220              		.loc 12 32 5 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              		.loc 12 32 19 is_stmt 0 view .LVU27
 226 0000 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE4398:
 230              		.weak	_ZN7daisysp9OverdriveD1Ev
 231              		.thumb_set _ZN7daisysp9OverdriveD1Ev,_ZN7daisysp9OverdriveD2Ev
 232              		.section	.text._ZN7daisysp7OnePoleD2Ev,"axG",%progbits,_ZN7daisysp7OnePoleD5Ev,comdat
 233              		.align	1
 234              		.p2align 2,,3
 235              		.weak	_ZN7daisysp7OnePoleD2Ev
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-d16
 241              	_ZN7daisysp7OnePoleD2Ev:
 242              	.LVL7:
 243              	.LFB4456:
 244              		.file 13 "../../DaisySP//Source/Filters/onepole.h"
   1:../../DaisySP//Source/Filters/onepole.h **** /*
   2:../../DaisySP//Source/Filters/onepole.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Filters/onepole.h **** 
   4:../../DaisySP//Source/Filters/onepole.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Filters/onepole.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Filters/onepole.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Filters/onepole.h **** */
   8:../../DaisySP//Source/Filters/onepole.h **** 
   9:../../DaisySP//Source/Filters/onepole.h **** #ifndef DSY_ONEPOLE_H
  10:../../DaisySP//Source/Filters/onepole.h **** #define DSY_ONEPOLE_H
  11:../../DaisySP//Source/Filters/onepole.h **** 
  12:../../DaisySP//Source/Filters/onepole.h **** #include "Utility/dsp.h"
  13:../../DaisySP//Source/Filters/onepole.h **** #include <cmath>
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 16


  14:../../DaisySP//Source/Filters/onepole.h **** #include <algorithm>
  15:../../DaisySP//Source/Filters/onepole.h **** 
  16:../../DaisySP//Source/Filters/onepole.h **** namespace daisysp
  17:../../DaisySP//Source/Filters/onepole.h **** {
  18:../../DaisySP//Source/Filters/onepole.h **** /**         
  19:../../DaisySP//Source/Filters/onepole.h ****     @brief One Pole Lowpass / Highpass Filter
  20:../../DaisySP//Source/Filters/onepole.h ****     @author beserge
  21:../../DaisySP//Source/Filters/onepole.h ****     @date Dec 2023 
  22:../../DaisySP//Source/Filters/onepole.h ****     Ported from pichenettes/stmlib/dsp/filter.h \n 
  23:../../DaisySP//Source/Filters/onepole.h ****     \n to an independent module. \n
  24:../../DaisySP//Source/Filters/onepole.h ****     Original code written by Emilie Gillet. \n
  25:../../DaisySP//Source/Filters/onepole.h **** */
  26:../../DaisySP//Source/Filters/onepole.h **** class OnePole
  27:../../DaisySP//Source/Filters/onepole.h **** {
  28:../../DaisySP//Source/Filters/onepole.h ****   public:
  29:../../DaisySP//Source/Filters/onepole.h ****     OnePole() {}
  30:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 245              		.loc 13 30 5 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              		.loc 13 30 17 is_stmt 0 view .LVU29
 251 0000 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE4456:
 255              		.weak	_ZN7daisysp7OnePoleD1Ev
 256              		.thumb_set _ZN7daisysp7OnePoleD1Ev,_ZN7daisysp7OnePoleD2Ev
 257              		.section	.text._ZN7daisysp9DelayLineIfLj120000EED2Ev,"axG",%progbits,_ZN7daisysp9DelayLineIfLj1200
 258              		.align	1
 259              		.p2align 2,,3
 260              		.weak	_ZN7daisysp9DelayLineIfLj120000EED2Ev
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv5-d16
 266              	_ZN7daisysp9DelayLineIfLj120000EED2Ev:
 267              	.LVL8:
 268              	.LFB5264:
 269              		.file 14 "../../DaisySP//Source/Utility/delayline.h"
   1:../../DaisySP//Source/Utility/delayline.h **** /*
   2:../../DaisySP//Source/Utility/delayline.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Utility/delayline.h **** 
   4:../../DaisySP//Source/Utility/delayline.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/delayline.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/delayline.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/delayline.h **** */
   8:../../DaisySP//Source/Utility/delayline.h **** 
   9:../../DaisySP//Source/Utility/delayline.h **** #pragma once
  10:../../DaisySP//Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
  11:../../DaisySP//Source/Utility/delayline.h **** #define DSY_DELAY_H
  12:../../DaisySP//Source/Utility/delayline.h **** #include <stdlib.h>
  13:../../DaisySP//Source/Utility/delayline.h **** #include <stdint.h>
  14:../../DaisySP//Source/Utility/delayline.h **** namespace daisysp
  15:../../DaisySP//Source/Utility/delayline.h **** {
  16:../../DaisySP//Source/Utility/delayline.h **** /** Simple Delay line.
  17:../../DaisySP//Source/Utility/delayline.h **** November 2019
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 17


  18:../../DaisySP//Source/Utility/delayline.h **** 
  19:../../DaisySP//Source/Utility/delayline.h **** Converted to Template December 2019
  20:../../DaisySP//Source/Utility/delayline.h **** 
  21:../../DaisySP//Source/Utility/delayline.h **** declaration example: (1 second of floats)
  22:../../DaisySP//Source/Utility/delayline.h **** 
  23:../../DaisySP//Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  24:../../DaisySP//Source/Utility/delayline.h **** 
  25:../../DaisySP//Source/Utility/delayline.h **** By: shensley
  26:../../DaisySP//Source/Utility/delayline.h **** */
  27:../../DaisySP//Source/Utility/delayline.h **** template <typename T, size_t max_size>
  28:../../DaisySP//Source/Utility/delayline.h **** class DelayLine
  29:../../DaisySP//Source/Utility/delayline.h **** {
  30:../../DaisySP//Source/Utility/delayline.h ****   public:
  31:../../DaisySP//Source/Utility/delayline.h ****     DelayLine() {}
  32:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 270              		.loc 14 32 5 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              		.loc 14 32 19 is_stmt 0 view .LVU31
 276 0000 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE5264:
 280              		.weak	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 281              		.thumb_set _ZN7daisysp9DelayLineIfLj120000EED1Ev,_ZN7daisysp9DelayLineIfLj120000EED2Ev
 282              		.section	.text._Z11readButtonsv,"ax",%progbits
 283              		.align	1
 284              		.p2align 2,,3
 285              		.global	_Z11readButtonsv
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv5-d16
 291              	_Z11readButtonsv:
 292              	.LFB4688:
 293              		.file 15 "AmpSim.cpp"
   1:AmpSim.cpp    **** // #include "daisy_seed.h"
   2:AmpSim.cpp    **** 
   3:AmpSim.cpp    **** /** Our hardware board class handles the interface to the actual DaisyPatchSM
   4:AmpSim.cpp    ****  * hardware. */
   5:AmpSim.cpp    **** #include "daisy_patch_sm.h"
   6:AmpSim.cpp    **** #include "daisysp.h"
   7:AmpSim.cpp    **** // #include "onepole.h"
   8:AmpSim.cpp    **** 
   9:AmpSim.cpp    **** #define BUTTON_SAMPLE_RATE 100
  10:AmpSim.cpp    **** #define TIME_LED_BRIGHTNESS 0.6
  11:AmpSim.cpp    **** 
  12:AmpSim.cpp    **** // Set max delay time to 0.75 of samplerate.
  13:AmpSim.cpp    **** #define MAX_DELAY static_cast<size_t>(48000 * 2.5f)
  14:AmpSim.cpp    **** 
  15:AmpSim.cpp    **** using namespace daisy;
  16:AmpSim.cpp    **** // using namespace daisy::seed;
  17:AmpSim.cpp    **** using namespace patch_sm;
  18:AmpSim.cpp    **** 
  19:AmpSim.cpp    **** using namespace daisysp;
  20:AmpSim.cpp    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 18


  21:AmpSim.cpp    **** // DaisySeed hw;
  22:AmpSim.cpp    **** DaisyPatchSM hw;
  23:AmpSim.cpp    **** 
  24:AmpSim.cpp    **** 
  25:AmpSim.cpp    **** static OnePole AmpLowPass;
  26:AmpSim.cpp    **** static Svf BassLowPass;
  27:AmpSim.cpp    **** static Svf    AmpBandPass;
  28:AmpSim.cpp    **** static Svf    TrebleBandPass;
  29:AmpSim.cpp    **** static Svf    MidBandPass;
  30:AmpSim.cpp    **** static Overdrive Drive;
  31:AmpSim.cpp    **** 
  32:AmpSim.cpp    **** // static ReverbSc rev;
  33:AmpSim.cpp    **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dlyl;
  34:AmpSim.cpp    **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dlyr;
  35:AmpSim.cpp    **** 
  36:AmpSim.cpp    **** float knob_gain, knob_volume, knob_treble, knob_mid_gain, knob_bass, knob_color, knob_fx_dry_wet, k
  37:AmpSim.cpp    **** int16_t  knob_mid_freq;
  38:AmpSim.cpp    **** 
  39:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
  40:AmpSim.cpp    **** 
  41:AmpSim.cpp    **** GPIO led_link, led_blend, led_delay, led_reverb, led_split, led_stereo, led_time; //TODO reverse or
  42:AmpSim.cpp    **** 
  43:AmpSim.cpp    **** Led led_time_pwm;
  44:AmpSim.cpp    **** 
  45:AmpSim.cpp    **** 
  46:AmpSim.cpp    **** GateIn button_stereo, button_cv;
  47:AmpSim.cpp    **** 
  48:AmpSim.cpp    **** Oscillator time_osc;
  49:AmpSim.cpp    **** 
  50:AmpSim.cpp    **** bool state_link, state_blend, state_fx, state_stereo, state_cv, state_stereo_button, state_cv_butto
  51:AmpSim.cpp    **** 
  52:AmpSim.cpp    **** float maxDelay, currentDelay, feedback, delayTarget, cutoff, dryWet[5];
  53:AmpSim.cpp    **** 
  54:AmpSim.cpp    **** 
  55:AmpSim.cpp    **** void GetReverbSample(float &inl, float &inr);
  56:AmpSim.cpp    **** void GetDelaySample(float &inl, float &inr);
  57:AmpSim.cpp    **** void process_fx(float &f1, float &f2);
  58:AmpSim.cpp    **** 
  59:AmpSim.cpp    **** 
  60:AmpSim.cpp    **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  61:AmpSim.cpp    **** {
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
  63:AmpSim.cpp    **** 	{
  64:AmpSim.cpp    **** 		float f1, f2;
  65:AmpSim.cpp    **** 		MidBandPass.SetFreq(knob_mid_freq);
  66:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
  67:AmpSim.cpp    **** 		MidBandPass.Process(in[0][i]);
  68:AmpSim.cpp    **** 		if (state_stereo_button) 
  69:AmpSim.cpp    **** 			MidBandPass.Process(in[1][i]);
  70:AmpSim.cpp    **** 
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
  72:AmpSim.cpp    **** 		if (state_stereo_button) 
  73:AmpSim.cpp    **** 			f2 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[1][i]; //add bandpass to dry signal in +/- to
  74:AmpSim.cpp    **** 
  75:AmpSim.cpp    **** 		Drive.SetDrive(knob_gain);
  76:AmpSim.cpp    **** 		f1 = Drive.Process(f1);
  77:AmpSim.cpp    **** 		if (state_stereo_button) 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 19


  78:AmpSim.cpp    **** 			f1 = Drive.Process(f1);
  79:AmpSim.cpp    **** 
  80:AmpSim.cpp    **** 
  81:AmpSim.cpp    **** 		TrebleBandPass.SetRes(0.2);
  82:AmpSim.cpp    **** 		TrebleBandPass.SetFreq(3500);
  83:AmpSim.cpp    **** 		TrebleBandPass.Process(f1);
  84:AmpSim.cpp    **** 		TrebleBandPass.Process(f2);
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
  86:AmpSim.cpp    **** 		if (state_stereo_button) 
  87:AmpSim.cpp    **** 			f2 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
  88:AmpSim.cpp    **** 
  89:AmpSim.cpp    **** 
  90:AmpSim.cpp    **** 		
  91:AmpSim.cpp    **** 		BassLowPass.SetRes(0.2);
  92:AmpSim.cpp    **** 		BassLowPass.SetFreq(300); //(bassValue + 0.5) * 10000);
  93:AmpSim.cpp    **** 		BassLowPass.Process(f1);
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
  95:AmpSim.cpp    **** 		if (state_stereo_button) 
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
  97:AmpSim.cpp    **** 		// f2 = (f2 * bassValue);// - f1;
  98:AmpSim.cpp    **** 
  99:AmpSim.cpp    **** 		// AmpLowPass.SetRes(0.2);
 100:AmpSim.cpp    **** 		AmpLowPass.SetFrequency(4100); //(bassValue + 0.5) * 10000);
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 103:AmpSim.cpp    **** 			f2 = AmpLowPass.Process(f2);
 104:AmpSim.cpp    **** 		
 105:AmpSim.cpp    **** 
 106:AmpSim.cpp    **** 		AmpBandPass.SetRes(0.05);
 107:AmpSim.cpp    **** 		AmpBandPass.SetDrive(0.2);
 108:AmpSim.cpp    **** 		AmpBandPass.SetFreq(680);
 109:AmpSim.cpp    **** 		AmpBandPass.Process(f1);
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 111:AmpSim.cpp    **** 		if (state_stereo_button) 
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 113:AmpSim.cpp    **** 
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 115:AmpSim.cpp    **** 		if (!state_stereo_button) 
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 117:AmpSim.cpp    **** 
 118:AmpSim.cpp    **** 			
 119:AmpSim.cpp    **** 
 120:AmpSim.cpp    **** 
 121:AmpSim.cpp    **** 		// AmpBandPass.Process(f2);
 122:AmpSim.cpp    **** 		// f1 = AmpBandPass.Band() * -1.0 + f2;
 123:AmpSim.cpp    **** 		// f2 = AmpLowPass.Process(f1);
 124:AmpSim.cpp    **** 
 125:AmpSim.cpp    **** 		// uncomment for audio passthrough test
 126:AmpSim.cpp    **** 		// out[0][i] = in[0][i];
 127:AmpSim.cpp    **** 		// out[1][i] = in[1][i];
 128:AmpSim.cpp    **** 
 129:AmpSim.cpp    **** 		process_fx(f1, f2);
 130:AmpSim.cpp    **** 
 131:AmpSim.cpp    **** 
 132:AmpSim.cpp    **** 		out[0][i] = f1;
 133:AmpSim.cpp    **** 		out[1][i] = f2;
 134:AmpSim.cpp    **** 	}
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 20


 135:AmpSim.cpp    **** }
 136:AmpSim.cpp    **** 
 137:AmpSim.cpp    **** void process_fx(float &f1, float &f2) {
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 139:AmpSim.cpp    **** 	float verbr = f1 * knob_fx_dry_wet;
 140:AmpSim.cpp    **** 	
 141:AmpSim.cpp    **** 	if (!state_stereo_button)
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 144:AmpSim.cpp    **** 	
 145:AmpSim.cpp    **** 	if (state_fx) {		
 146:AmpSim.cpp    **** 		GetReverbSample(verbl, verbr);
 147:AmpSim.cpp    **** 	} else { 
 148:AmpSim.cpp    **** 		GetDelaySample(verbl, verbr);
 149:AmpSim.cpp    **** 	}
 150:AmpSim.cpp    **** 
 151:AmpSim.cpp    **** 	if (!state_stereo_button)
 152:AmpSim.cpp    **** 		f1 += verbl;
 153:AmpSim.cpp    **** 	f2 += verbr;
 154:AmpSim.cpp    **** }
 155:AmpSim.cpp    **** 
 156:AmpSim.cpp    **** void setFilterConstants(float sample_rate);
 157:AmpSim.cpp    **** 
 158:AmpSim.cpp    **** void readKnobs();
 159:AmpSim.cpp    **** void readButtons();
 160:AmpSim.cpp    **** 
 161:AmpSim.cpp    **** int main(void)
 162:AmpSim.cpp    **** {
 163:AmpSim.cpp    **** 	hw.Init();
 164:AmpSim.cpp    **** 
 165:AmpSim.cpp    **** 	//initialize buttons
 166:AmpSim.cpp    **** 	button_link.Init(hw.A8, BUTTON_SAMPLE_RATE);
 167:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 168:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 169:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 170:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 171:AmpSim.cpp    **** 
 172:AmpSim.cpp    **** 	//initialize LEDs
 173:AmpSim.cpp    **** 	led_link.Init(hw.A9, GPIO::Mode::OUTPUT);
 174:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 175:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 176:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 177:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 178:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 179:AmpSim.cpp    **** 	// led_time.Init(hw.B8, GPIO::Mode::OUTPUT);
 180:AmpSim.cpp    **** 	led_time_pwm.Init(hw.B8, false, 1000.0f);
 181:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 182:AmpSim.cpp    **** 
 183:AmpSim.cpp    **** 	//set initial fx/split state
 184:AmpSim.cpp    **** 	led_delay.Write(true);
 185:AmpSim.cpp    **** 	led_stereo.Write(true);
 186:AmpSim.cpp    **** 	state_fx = false;
 187:AmpSim.cpp    **** 	state_stereo = true;
 188:AmpSim.cpp    **** 
 189:AmpSim.cpp    **** 	// Set up the LED PWM oscillator
 190:AmpSim.cpp    **** 	time_osc.Init(hw.AudioSampleRate());
 191:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 21


 192:AmpSim.cpp    **** 	time_osc.SetFreq(1.0);
 193:AmpSim.cpp    **** 
 194:AmpSim.cpp    **** 	// Start the ADC
 195:AmpSim.cpp    **** 	hw.adc.Start();
 196:AmpSim.cpp    **** 
 197:AmpSim.cpp    **** 	// Initialize audio params
 198:AmpSim.cpp    **** 	setFilterConstants(hw.AudioSampleRate());
 199:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 200:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 201:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
 202:AmpSim.cpp    **** 	
 203:AmpSim.cpp    **** 
 204:AmpSim.cpp    **** 
 205:AmpSim.cpp    **** 	while(1) {
 206:AmpSim.cpp    **** 		hw.ProcessAllControls();
 207:AmpSim.cpp    **** 		readKnobs();
 208:AmpSim.cpp    **** 		readButtons();		
 209:AmpSim.cpp    **** 		led_time_pwm.Update();
 210:AmpSim.cpp    **** 	}
 211:AmpSim.cpp    **** }
 212:AmpSim.cpp    **** 
 213:AmpSim.cpp    **** float led_brightness = 0;
 214:AmpSim.cpp    **** 
 215:AmpSim.cpp    **** void readButtons(){
 294              		.loc 15 215 19 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 216:AmpSim.cpp    **** 	button_blend.Debounce();
 298              		.loc 15 216 2 view .LVU33
 215:AmpSim.cpp    **** 	button_blend.Debounce();
 299              		.loc 15 215 19 is_stmt 0 view .LVU34
 300 0000 38B5     		push	{r3, r4, r5, lr}
 301              		.cfi_def_cfa_offset 16
 302              		.cfi_offset 3, -16
 303              		.cfi_offset 4, -12
 304              		.cfi_offset 5, -8
 305              		.cfi_offset 14, -4
 306              		.loc 15 216 23 view .LVU35
 307 0002 4F4C     		ldr	r4, .L46
 308 0004 2046     		mov	r0, r4
 309 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 310              	.LVL9:
 217:AmpSim.cpp    **** 	if (button_blend.RisingEdge()) {
 311              		.loc 15 217 2 is_stmt 1 view .LVU36
 312              	.LBB479:
 313              	.LBI479:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 22


  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 314              		.loc 1 70 17 view .LVU37
 315              	.LBB480:
 316              		.loc 1 70 38 view .LVU38
 317              		.loc 1 70 54 is_stmt 0 view .LVU39
 318 000a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 319 000c 1BB1     		cbz	r3, .L12
 320              	.LVL10:
 321              		.loc 1 70 54 view .LVU40
 322              	.LBE480:
 323              	.LBE479:
 324              		.loc 15 217 2 view .LVU41
 325 000e A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 326 0010 7F2B     		cmp	r3, #127
 327 0012 00F08380 		beq	.L40
 328              	.L12:
 218:AmpSim.cpp    **** 		state_blend = !state_blend;
 219:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 220:AmpSim.cpp    **** 	}
 221:AmpSim.cpp    **** 
 222:AmpSim.cpp    **** 	button_link.Debounce();
 329              		.loc 15 222 2 is_stmt 1 view .LVU42
 330              		.loc 15 222 22 is_stmt 0 view .LVU43
 331 0016 4B4C     		ldr	r4, .L46+4
 332 0018 2046     		mov	r0, r4
 333 001a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 334              	.LVL11:
 223:AmpSim.cpp    **** 	if (button_link.RisingEdge()) {
 335              		.loc 15 223 2 is_stmt 1 view .LVU44
 336              	.LBB481:
 337              	.LBI481:
 338              		.loc 1 70 17 view .LVU45
 339              	.LBB482:
 340              		.loc 1 70 38 view .LVU46
 341              		.loc 1 70 54 is_stmt 0 view .LVU47
 342 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 343 0020 1BB1     		cbz	r3, .L13
 344              	.LVL12:
 345              		.loc 1 70 54 view .LVU48
 346              	.LBE482:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 23


 347              	.LBE481:
 348              		.loc 15 223 2 view .LVU49
 349 0022 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 350 0024 7F2B     		cmp	r3, #127
 351 0026 00F08280 		beq	.L41
 352              	.L13:
 224:AmpSim.cpp    **** 		state_link = !state_link;
 225:AmpSim.cpp    **** 		led_link.Write(state_link);
 226:AmpSim.cpp    **** 	}
 227:AmpSim.cpp    **** 
 228:AmpSim.cpp    **** 	button_fx.Debounce();
 353              		.loc 15 228 2 is_stmt 1 view .LVU50
 354              		.loc 15 228 20 is_stmt 0 view .LVU51
 355 002a 474C     		ldr	r4, .L46+8
 356 002c 2046     		mov	r0, r4
 357 002e FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 358              	.LVL13:
 229:AmpSim.cpp    **** 	if (button_fx.RisingEdge()) {
 359              		.loc 15 229 2 is_stmt 1 view .LVU52
 360              	.LBB483:
 361              	.LBI483:
 362              		.loc 1 70 17 view .LVU53
 363              	.LBB484:
 364              		.loc 1 70 38 view .LVU54
 365              		.loc 1 70 54 is_stmt 0 view .LVU55
 366 0032 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 367 0034 13B1     		cbz	r3, .L14
 368              	.LVL14:
 369              		.loc 1 70 54 view .LVU56
 370              	.LBE484:
 371              	.LBE483:
 372              		.loc 15 229 2 view .LVU57
 373 0036 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 374 0038 7F2B     		cmp	r3, #127
 375 003a 5DD0     		beq	.L42
 376              	.L14:
 230:AmpSim.cpp    **** 		state_fx = !state_fx; //True = delay active
 231:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 232:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 233:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 234:AmpSim.cpp    **** 	}	
 235:AmpSim.cpp    **** 
 236:AmpSim.cpp    **** 	//button_stereo and button_cv use gate_in object and need special handling for toggle and state
 237:AmpSim.cpp    **** 	if ((button_stereo.State() != state_stereo_button)) {
 377              		.loc 15 237 2 is_stmt 1 view .LVU58
 378              	.LVL15:
 379              	.LBB485:
 380              	.LBI485:
  22:../../libDaisy//src/hid/gatein.h **** 
  23:../../libDaisy//src/hid/gatein.h ****     /** @brief Initializes the gate input with specified hardware pin
  24:../../libDaisy//src/hid/gatein.h ****      *
  25:../../libDaisy//src/hid/gatein.h ****      *  @param pin_cfg pointer to pin to initialize
  26:../../libDaisy//src/hid/gatein.h ****      *  @param invert True if the pin state is HIGH when 0V is present
  27:../../libDaisy//src/hid/gatein.h ****      *         at the input. False if input signal matches the pin state.
  28:../../libDaisy//src/hid/gatein.h ****      *
  29:../../libDaisy//src/hid/gatein.h ****      *  @note the default for invert is true because it is typical to use
  30:../../libDaisy//src/hid/gatein.h ****      *  an inverting input circuit (e.g. a BJT circuit) for eurorack gate inputs.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 24


  31:../../libDaisy//src/hid/gatein.h ****      */
  32:../../libDaisy//src/hid/gatein.h ****     void Init(Pin pin, bool invert = true);
  33:../../libDaisy//src/hid/gatein.h **** 
  34:../../libDaisy//src/hid/gatein.h ****     /** @brief Initializes the gate input with specified hardware pin
  35:../../libDaisy//src/hid/gatein.h ****      *
  36:../../libDaisy//src/hid/gatein.h ****      *  @param pin_cfg pointer to pin to initialize
  37:../../libDaisy//src/hid/gatein.h ****      *  @param invert True if the pin state is HIGH when 0V is present
  38:../../libDaisy//src/hid/gatein.h ****      *         at the input. False if input signal matches the pin state.
  39:../../libDaisy//src/hid/gatein.h ****      *
  40:../../libDaisy//src/hid/gatein.h ****      *  @note the default for invert is true because it is typical to use
  41:../../libDaisy//src/hid/gatein.h ****      *  an inverting input circuit (e.g. a BJT circuit) for eurorack gate inputs.
  42:../../libDaisy//src/hid/gatein.h ****      * 
  43:../../libDaisy//src/hid/gatein.h ****      *  @note deprectated - this function still works, but will eventually be removed.
  44:../../libDaisy//src/hid/gatein.h ****      *  It uses the old style dsy_gpio_pin in a way that it is not compatible with the
  45:../../libDaisy//src/hid/gatein.h ****      *  the new Pin class. 
  46:../../libDaisy//src/hid/gatein.h ****      */
  47:../../libDaisy//src/hid/gatein.h ****     void Init(dsy_gpio_pin *pin_cfg, bool invert = true);
  48:../../libDaisy//src/hid/gatein.h **** 
  49:../../libDaisy//src/hid/gatein.h ****     /** Checks current state of gate input.
  50:../../libDaisy//src/hid/gatein.h ****      *  @return True if the GPIO just transitioned.
  51:../../libDaisy//src/hid/gatein.h ****      */
  52:../../libDaisy//src/hid/gatein.h ****     bool Trig();
  53:../../libDaisy//src/hid/gatein.h **** 
  54:../../libDaisy//src/hid/gatein.h ****     /** Checks current state of gate input (no state required)
  55:../../libDaisy//src/hid/gatein.h ****      *  read function is inverted because of suggested BJT input circuit
  56:../../libDaisy//src/hid/gatein.h ****      */
  57:../../libDaisy//src/hid/gatein.h ****     inline bool State() { return invert_ ? !pin_.Read() : pin_.Read(); }
 381              		.loc 2 57 17 view .LVU59
 382              	.LBB486:
 383              		.loc 2 57 27 view .LVU60
 384              		.loc 2 57 34 is_stmt 0 view .LVU61
 385 003c 434C     		ldr	r4, .L46+12
 386              		.loc 2 57 42 view .LVU62
 387 003e A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 388              	.LBB487:
 389              	.LBB488:
 390              		.loc 2 57 54 view .LVU63
 391 0040 2046     		mov	r0, r4
 392              	.LBE488:
 393              	.LBE487:
 394              		.loc 2 57 42 view .LVU64
 395 0042 BBB1     		cbz	r3, .L15
 396              	.LVL16:
 397              	.LBB492:
 398              	.LBI487:
 399              		.loc 2 57 17 is_stmt 1 view .LVU65
 400              	.LBB489:
 401              		.loc 2 57 54 is_stmt 0 view .LVU66
 402 0044 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 403              	.LVL17:
 404              	.LBE489:
 405              	.LBE492:
 406              	.LBE486:
 407              	.LBE485:
 408              		.loc 15 237 29 view .LVU67
 409 0048 414D     		ldr	r5, .L46+16
 410              	.LBB498:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 25


 411              	.LBB495:
 412              	.LBB493:
 413              	.LBB490:
 414              		.loc 2 57 42 view .LVU68
 415 004a 80F00100 		eor	r0, r0, #1
 416              	.LBE490:
 417              	.LBE493:
 418              	.LBE495:
 419              	.LBE498:
 420              		.loc 15 237 2 view .LVU69
 421 004e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 422              	.LBB499:
 423              	.LBB496:
 424              	.LBB494:
 425              	.LBB491:
 426              		.loc 2 57 42 view .LVU70
 427 0050 C0B2     		uxtb	r0, r0
 428              	.LVL18:
 429              		.loc 2 57 42 view .LVU71
 430              	.LBE491:
 431              	.LBE494:
 432              	.LBE496:
 433              	.LBE499:
 434              		.loc 15 237 2 view .LVU72
 435 0052 8342     		cmp	r3, r0
 436 0054 14D1     		bne	.L43
 437              	.L18:
 238:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 239:AmpSim.cpp    **** 		if (state_stereo_button == true) {
 240:AmpSim.cpp    **** 			state_stereo = !state_stereo;
 241:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 242:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 243:AmpSim.cpp    **** 		}
 244:AmpSim.cpp    **** 	}
 245:AmpSim.cpp    **** 
 246:AmpSim.cpp    **** 
 247:AmpSim.cpp    **** 	if (button_cv.State() != state_cv_button) {
 438              		.loc 15 247 2 is_stmt 1 view .LVU73
 439              	.LVL19:
 440              	.LBB500:
 441              	.LBI500:
 442              		.loc 2 57 17 view .LVU74
 443              	.LBB501:
 444              		.loc 2 57 27 view .LVU75
 445              		.loc 2 57 34 is_stmt 0 view .LVU76
 446 0056 3F4C     		ldr	r4, .L46+20
 447              		.loc 2 57 42 view .LVU77
 448 0058 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 449              	.LBB502:
 450              	.LBB503:
 451              		.loc 2 57 54 view .LVU78
 452 005a 2046     		mov	r0, r4
 453              	.LBE503:
 454              	.LBE502:
 455              		.loc 2 57 42 view .LVU79
 456 005c 002B     		cmp	r3, #0
 457 005e 2ED0     		beq	.L22
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 26


 458              	.L45:
 459              	.LVL20:
 460              	.LBB508:
 461              	.LBI502:
 462              		.loc 2 57 17 is_stmt 1 view .LVU80
 463              	.LBB504:
 464              		.loc 2 57 54 is_stmt 0 view .LVU81
 465 0060 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 466              	.LVL21:
 467              	.LBE504:
 468              	.LBE508:
 469              	.LBE501:
 470              	.LBE500:
 471              		.loc 15 247 24 view .LVU82
 472 0064 3C4D     		ldr	r5, .L46+24
 473              	.LBB517:
 474              	.LBB512:
 475              	.LBB509:
 476              	.LBB505:
 477              		.loc 2 57 42 view .LVU83
 478 0066 80F00100 		eor	r0, r0, #1
 479              	.LBE505:
 480              	.LBE509:
 481              	.LBE512:
 482              	.LBE517:
 483              		.loc 15 247 2 view .LVU84
 484 006a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 485              	.LBB518:
 486              	.LBB513:
 487              	.LBB510:
 488              	.LBB506:
 489              		.loc 2 57 42 view .LVU85
 490 006c C0B2     		uxtb	r0, r0
 491              	.LVL22:
 492              		.loc 2 57 42 view .LVU86
 493              	.LBE506:
 494              	.LBE510:
 495              	.LBE513:
 496              	.LBE518:
 497              		.loc 15 247 2 view .LVU87
 498 006e 8342     		cmp	r3, r0
 499 0070 2BD1     		bne	.L44
 500              	.L11:
 248:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 249:AmpSim.cpp    **** 		state_cv = state_cv_button;
 250:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 251:AmpSim.cpp    **** 	}
 252:AmpSim.cpp    **** }
 501              		.loc 15 252 1 view .LVU88
 502 0072 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL23:
 504              	.L15:
 237:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 505              		.loc 15 237 29 view .LVU89
 506 0074 364D     		ldr	r5, .L46+16
 507              	.LBB519:
 508              	.LBB497:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 27


 509              		.loc 2 57 68 view .LVU90
 510 0076 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 511              	.LVL24:
 512              		.loc 2 57 68 view .LVU91
 513              	.LBE497:
 514              	.LBE519:
 237:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 515              		.loc 15 237 2 view .LVU92
 516 007a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 517 007c 8342     		cmp	r3, r0
 518 007e EAD0     		beq	.L18
 519              	.L43:
 238:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 520              		.loc 15 238 3 is_stmt 1 view .LVU93
 521              	.LVL25:
 522              	.LBB520:
 523              	.LBI520:
 524              		.loc 2 57 17 view .LVU94
 525              	.LBB521:
 526              		.loc 2 57 27 view .LVU95
 527              		.loc 2 57 42 is_stmt 0 view .LVU96
 528 0080 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 529              	.LBB522:
 530              	.LBB523:
 531              		.loc 2 57 54 view .LVU97
 532 0082 3248     		ldr	r0, .L46+12
 533              	.LBE523:
 534              	.LBE522:
 535              		.loc 2 57 42 view .LVU98
 536 0084 002B     		cmp	r3, #0
 537 0086 34D0     		beq	.L19
 538              	.LVL26:
 539              	.LBB525:
 540              	.LBI522:
 541              		.loc 2 57 17 is_stmt 1 view .LVU99
 542              	.LBB524:
 543              		.loc 2 57 54 is_stmt 0 view .LVU100
 544 0088 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 545              	.LVL27:
 546              		.loc 2 57 42 view .LVU101
 547 008c 80F00100 		eor	r0, r0, #1
 548 0090 C0B2     		uxtb	r0, r0
 549              	.LVL28:
 550              	.L20:
 551              		.loc 2 57 42 view .LVU102
 552              	.LBE524:
 553              	.LBE525:
 554              	.LBE521:
 555              	.LBE520:
 238:AmpSim.cpp    **** 		state_stereo_button = button_stereo.State();
 556              		.loc 15 238 23 view .LVU103
 557 0092 2870     		strb	r0, [r5]
 239:AmpSim.cpp    **** 			state_stereo = !state_stereo;
 558              		.loc 15 239 3 is_stmt 1 view .LVU104
 559 0094 0028     		cmp	r0, #0
 560 0096 DED0     		beq	.L18
 240:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 28


 561              		.loc 15 240 4 view .LVU105
 240:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 562              		.loc 15 240 19 is_stmt 0 view .LVU106
 563 0098 304C     		ldr	r4, .L46+28
 241:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 564              		.loc 15 241 20 view .LVU107
 565 009a 3148     		ldr	r0, .L46+32
 240:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 566              		.loc 15 240 19 view .LVU108
 567 009c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 568 009e 81F00101 		eor	r1, r1, #1
 240:AmpSim.cpp    **** 			led_stereo.Write(state_stereo);
 569              		.loc 15 240 17 view .LVU109
 570 00a2 2170     		strb	r1, [r4]
 241:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 571              		.loc 15 241 4 is_stmt 1 view .LVU110
 241:AmpSim.cpp    **** 			led_split.Write(!state_stereo);
 572              		.loc 15 241 20 is_stmt 0 view .LVU111
 573 00a4 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 574              	.LVL29:
 242:AmpSim.cpp    **** 		}
 575              		.loc 15 242 4 is_stmt 1 view .LVU112
 242:AmpSim.cpp    **** 		}
 576              		.loc 15 242 19 is_stmt 0 view .LVU113
 577 00a8 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 578              	.LBB527:
 579              	.LBB514:
 580              		.loc 2 57 34 view .LVU114
 581 00aa 2A4C     		ldr	r4, .L46+20
 582              	.LBE514:
 583              	.LBE527:
 242:AmpSim.cpp    **** 		}
 584              		.loc 15 242 19 view .LVU115
 585 00ac 2D48     		ldr	r0, .L46+36
 586 00ae 81F00101 		eor	r1, r1, #1
 587 00b2 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 588              	.LVL30:
 247:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 589              		.loc 15 247 2 is_stmt 1 view .LVU116
 590              	.LBB528:
 591              		.loc 2 57 17 view .LVU117
 592              	.LBB515:
 593              		.loc 2 57 27 view .LVU118
 594              		.loc 2 57 42 is_stmt 0 view .LVU119
 595 00b6 A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 596              	.LBB511:
 597              	.LBB507:
 598              		.loc 2 57 54 view .LVU120
 599 00b8 2046     		mov	r0, r4
 600              	.LBE507:
 601              	.LBE511:
 602              		.loc 2 57 42 view .LVU121
 603 00ba 002B     		cmp	r3, #0
 604 00bc D0D1     		bne	.L45
 605              	.L22:
 606              	.LBE515:
 607              	.LBE528:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 29


 247:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 608              		.loc 15 247 24 view .LVU122
 609 00be 264D     		ldr	r5, .L46+24
 610              	.LBB529:
 611              	.LBB516:
 612              		.loc 2 57 68 view .LVU123
 613 00c0 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 614              	.LVL31:
 615              		.loc 2 57 68 view .LVU124
 616              	.LBE516:
 617              	.LBE529:
 247:AmpSim.cpp    **** 		state_cv_button = button_cv.State();
 618              		.loc 15 247 2 view .LVU125
 619 00c4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 620 00c6 8342     		cmp	r3, r0
 621 00c8 D3D0     		beq	.L11
 622              	.L44:
 248:AmpSim.cpp    **** 		state_cv = state_cv_button;
 623              		.loc 15 248 3 is_stmt 1 view .LVU126
 624              	.LVL32:
 625              	.LBB530:
 626              	.LBI530:
 627              		.loc 2 57 17 view .LVU127
 628              	.LBB531:
 629              		.loc 2 57 27 view .LVU128
 630              		.loc 2 57 42 is_stmt 0 view .LVU129
 631 00ca A37D     		ldrb	r3, [r4, #22]	@ zero_extendqisi2
 632              	.LBB532:
 633              	.LBB533:
 634              		.loc 2 57 54 view .LVU130
 635 00cc 2148     		ldr	r0, .L46+20
 636              	.LBE533:
 637              	.LBE532:
 638              		.loc 2 57 42 view .LVU131
 639 00ce 63B1     		cbz	r3, .L25
 640              	.LVL33:
 641              	.LBB535:
 642              	.LBI532:
 643              		.loc 2 57 17 is_stmt 1 view .LVU132
 644              	.LBB534:
 645              		.loc 2 57 54 is_stmt 0 view .LVU133
 646 00d0 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 647              	.LVL34:
 648              		.loc 2 57 42 view .LVU134
 649 00d4 80F00100 		eor	r0, r0, #1
 650 00d8 C1B2     		uxtb	r1, r0
 651              	.LVL35:
 652              	.L26:
 653              		.loc 2 57 42 view .LVU135
 654              	.LBE534:
 655              	.LBE535:
 656              	.LBE531:
 657              	.LBE530:
 249:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 658              		.loc 15 249 12 view .LVU136
 659 00da 234B     		ldr	r3, .L46+40
 248:AmpSim.cpp    **** 		state_cv = state_cv_button;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 30


 660              		.loc 15 248 19 view .LVU137
 661 00dc 2970     		strb	r1, [r5]
 249:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 662              		.loc 15 249 3 is_stmt 1 view .LVU138
 249:AmpSim.cpp    **** 		led_stereo.Write(state_cv);
 663              		.loc 15 249 12 is_stmt 0 view .LVU139
 664 00de 1970     		strb	r1, [r3]
 250:AmpSim.cpp    **** 	}
 665              		.loc 15 250 3 is_stmt 1 view .LVU140
 250:AmpSim.cpp    **** 	}
 666              		.loc 15 250 19 is_stmt 0 view .LVU141
 667 00e0 1F48     		ldr	r0, .L46+32
 668              		.loc 15 252 1 view .LVU142
 669 00e2 BDE83840 		pop	{r3, r4, r5, lr}
 670              		.cfi_remember_state
 671              		.cfi_restore 14
 672              		.cfi_restore 5
 673              		.cfi_restore 4
 674              		.cfi_restore 3
 675              		.cfi_def_cfa_offset 0
 250:AmpSim.cpp    **** 	}
 676              		.loc 15 250 19 view .LVU143
 677 00e6 FFF7FEBF 		b	_ZN5daisy4GPIO5WriteEb
 678              	.LVL36:
 679              	.L25:
 680              		.cfi_restore_state
 681              	.LBB537:
 682              	.LBB536:
 683              		.loc 2 57 68 view .LVU144
 684 00ea FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 685              	.LVL37:
 686 00ee 0146     		mov	r1, r0
 687 00f0 F3E7     		b	.L26
 688              	.LVL38:
 689              	.L19:
 690              		.loc 2 57 68 view .LVU145
 691              	.LBE536:
 692              	.LBE537:
 693              	.LBB538:
 694              	.LBB526:
 695 00f2 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 696              	.LVL39:
 697 00f6 CCE7     		b	.L20
 698              	.LVL40:
 699              	.L42:
 700              		.loc 2 57 68 view .LVU146
 701              	.LBE526:
 702              	.LBE538:
 230:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 703              		.loc 15 230 3 is_stmt 1 view .LVU147
 230:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 704              		.loc 15 230 14 is_stmt 0 view .LVU148
 705 00f8 1C4C     		ldr	r4, .L46+44
 231:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 706              		.loc 15 231 18 view .LVU149
 707 00fa 1D48     		ldr	r0, .L46+48
 230:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 31


 708              		.loc 15 230 14 view .LVU150
 709 00fc 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 710 00fe 81F00103 		eor	r3, r1, #1
 230:AmpSim.cpp    **** 		led_delay.Write(!state_fx);
 711              		.loc 15 230 12 view .LVU151
 712 0102 2370     		strb	r3, [r4]
 231:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 713              		.loc 15 231 3 is_stmt 1 view .LVU152
 231:AmpSim.cpp    **** 		led_reverb.Write(state_fx);
 714              		.loc 15 231 18 is_stmt 0 view .LVU153
 715 0104 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 716              	.LVL41:
 232:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 717              		.loc 15 232 3 is_stmt 1 view .LVU154
 232:AmpSim.cpp    **** 		led_time.Write(state_stereo);// todo convert to pwm pulse
 718              		.loc 15 232 19 is_stmt 0 view .LVU155
 719 0108 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 720 010a 1A48     		ldr	r0, .L46+52
 721 010c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 722              	.LVL42:
 233:AmpSim.cpp    **** 	}	
 723              		.loc 15 233 3 is_stmt 1 view .LVU156
 233:AmpSim.cpp    **** 	}	
 724              		.loc 15 233 17 is_stmt 0 view .LVU157
 725 0110 124B     		ldr	r3, .L46+28
 726 0112 1948     		ldr	r0, .L46+56
 727 0114 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 728 0116 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 729              	.LVL43:
 730 011a 8FE7     		b	.L14
 731              	.L40:
 218:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 732              		.loc 15 218 3 is_stmt 1 view .LVU158
 218:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 733              		.loc 15 218 17 is_stmt 0 view .LVU159
 734 011c 174B     		ldr	r3, .L46+60
 219:AmpSim.cpp    **** 	}
 735              		.loc 15 219 18 view .LVU160
 736 011e 1848     		ldr	r0, .L46+64
 218:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 737              		.loc 15 218 17 view .LVU161
 738 0120 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 739 0122 81F00101 		eor	r1, r1, #1
 218:AmpSim.cpp    **** 		led_blend.Write(state_blend);
 740              		.loc 15 218 15 view .LVU162
 741 0126 1970     		strb	r1, [r3]
 219:AmpSim.cpp    **** 	}
 742              		.loc 15 219 3 is_stmt 1 view .LVU163
 219:AmpSim.cpp    **** 	}
 743              		.loc 15 219 18 is_stmt 0 view .LVU164
 744 0128 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 745              	.LVL44:
 746 012c 73E7     		b	.L12
 747              	.L41:
 224:AmpSim.cpp    **** 		led_link.Write(state_link);
 748              		.loc 15 224 3 is_stmt 1 view .LVU165
 224:AmpSim.cpp    **** 		led_link.Write(state_link);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 32


 749              		.loc 15 224 16 is_stmt 0 view .LVU166
 750 012e 154B     		ldr	r3, .L46+68
 225:AmpSim.cpp    **** 	}
 751              		.loc 15 225 17 view .LVU167
 752 0130 1548     		ldr	r0, .L46+72
 224:AmpSim.cpp    **** 		led_link.Write(state_link);
 753              		.loc 15 224 16 view .LVU168
 754 0132 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 755 0134 81F00101 		eor	r1, r1, #1
 224:AmpSim.cpp    **** 		led_link.Write(state_link);
 756              		.loc 15 224 14 view .LVU169
 757 0138 1970     		strb	r1, [r3]
 225:AmpSim.cpp    **** 	}
 758              		.loc 15 225 3 is_stmt 1 view .LVU170
 225:AmpSim.cpp    **** 	}
 759              		.loc 15 225 17 is_stmt 0 view .LVU171
 760 013a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 761              	.LVL45:
 762 013e 74E7     		b	.L13
 763              	.L47:
 764              		.align	2
 765              	.L46:
 766 0140 00000000 		.word	.LANCHOR0
 767 0144 00000000 		.word	.LANCHOR3
 768 0148 00000000 		.word	.LANCHOR6
 769 014c 00000000 		.word	.LANCHOR12
 770 0150 00000000 		.word	.LANCHOR13
 771 0154 00000000 		.word	.LANCHOR16
 772 0158 00000000 		.word	.LANCHOR17
 773 015c 00000000 		.word	.LANCHOR10
 774 0160 00000000 		.word	.LANCHOR14
 775 0164 00000000 		.word	.LANCHOR15
 776 0168 00000000 		.word	.LANCHOR18
 777 016c 00000000 		.word	.LANCHOR7
 778 0170 00000000 		.word	.LANCHOR8
 779 0174 00000000 		.word	.LANCHOR9
 780 0178 00000000 		.word	.LANCHOR11
 781 017c 00000000 		.word	.LANCHOR1
 782 0180 00000000 		.word	.LANCHOR2
 783 0184 00000000 		.word	.LANCHOR4
 784 0188 00000000 		.word	.LANCHOR5
 785              		.cfi_endproc
 786              	.LFE4688:
 788              		.section	.text._Z9readKnobsv,"ax",%progbits
 789              		.align	1
 790              		.p2align 2,,3
 791              		.global	_Z9readKnobsv
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 795              		.fpu fpv5-d16
 797              	_Z9readKnobsv:
 798              	.LFB4689:
 253:AmpSim.cpp    **** 
 254:AmpSim.cpp    **** 
 255:AmpSim.cpp    **** void readKnobs(){
 799              		.loc 15 255 17 is_stmt 1 view -0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 33


 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 256:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 803              		.loc 15 256 2 view .LVU173
 255:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 804              		.loc 15 255 17 is_stmt 0 view .LVU174
 805 0000 70B5     		push	{r4, r5, r6, lr}
 806              		.cfi_def_cfa_offset 16
 807              		.cfi_offset 4, -16
 808              		.cfi_offset 5, -12
 809              		.cfi_offset 6, -8
 810              		.cfi_offset 14, -4
 811              		.loc 15 256 26 view .LVU175
 812 0002 514C     		ldr	r4, .L50+16
 257:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 258:AmpSim.cpp    **** 
 259:AmpSim.cpp    **** 	knob_gain     = hw.GetAdcValue(ADC_9); // gainValue    = hw.adc.GetFloat(gainKnob);
 260:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 261:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 262:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 263:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 264:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 265:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 266:AmpSim.cpp    **** 
 267:AmpSim.cpp    **** 	knob_fx_dry_wet  = hw.GetAdcValue(ADC_11);
 268:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 813              		.loc 15 268 19 view .LVU176
 814 0004 514E     		ldr	r6, .L50+20
 256:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 815              		.loc 15 256 26 view .LVU177
 816 0006 2046     		mov	r0, r4
 817              	.LBB539:
 818              	.LBB540:
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 34


  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 819              		.loc 10 69 20 view .LVU178
 820 0008 514D     		ldr	r5, .L50+24
 821              	.LBE540:
 822              	.LBE539:
 255:AmpSim.cpp    **** 	hw.ProcessAnalogControls();
 823              		.loc 15 255 17 view .LVU179
 824 000a 2DED028B 		vpush.64	{d8}
 825              		.cfi_def_cfa_offset 24
 826              		.cfi_offset 80, -24
 827              		.cfi_offset 81, -20
 256:AmpSim.cpp    **** 	hw.ProcessDigitalControls();
 828              		.loc 15 256 26 view .LVU180
 829 000e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 830              	.LVL46:
 257:AmpSim.cpp    **** 
 831              		.loc 15 257 2 is_stmt 1 view .LVU181
 257:AmpSim.cpp    **** 
 832              		.loc 15 257 27 is_stmt 0 view .LVU182
 833 0012 2046     		mov	r0, r4
 834 0014 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 835              	.LVL47:
 259:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 836              		.loc 15 259 2 is_stmt 1 view .LVU183
 259:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 837              		.loc 15 259 32 is_stmt 0 view .LVU184
 838 0018 2046     		mov	r0, r4
 839 001a 0821     		movs	r1, #8
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 840              		.loc 15 261 16 view .LVU185
 841 001c B5EE008A 		vmov.f32	s16, #2.5e-1
 259:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 842              		.loc 15 259 32 view .LVU186
 843 0020 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 844              	.LVL48:
 259:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 35


 845              		.loc 15 259 16 view .LVU187
 846 0024 4B4B     		ldr	r3, .L50+28
 260:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 847              		.loc 15 260 32 view .LVU188
 848 0026 2046     		mov	r0, r4
 849 0028 0121     		movs	r1, #1
 259:AmpSim.cpp    **** 	knob_volume   = hw.GetAdcValue(CV_2); //.5; //hw.adc.GetFloat(volumeKnob);
 850              		.loc 15 259 16 view .LVU189
 851 002a 83ED000A 		vstr.32	s0, [r3]
 260:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 852              		.loc 15 260 2 is_stmt 1 view .LVU190
 260:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 853              		.loc 15 260 32 is_stmt 0 view .LVU191
 854 002e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 855              	.LVL49:
 260:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 856              		.loc 15 260 16 view .LVU192
 857 0032 494B     		ldr	r3, .L50+32
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 858              		.loc 15 261 32 view .LVU193
 859 0034 2046     		mov	r0, r4
 860 0036 0921     		movs	r1, #9
 260:AmpSim.cpp    **** 	knob_treble   = hw.GetAdcValue(ADC_10) - 0.25; //hw.adc.GetFloat(trebleKnob) - 0.25;
 861              		.loc 15 260 16 view .LVU194
 862 0038 83ED000A 		vstr.32	s0, [r3]
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 863              		.loc 15 261 2 is_stmt 1 view .LVU195
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 864              		.loc 15 261 32 is_stmt 0 view .LVU196
 865 003c FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 866              	.LVL50:
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 867              		.loc 15 261 16 view .LVU197
 868 0040 30EE480A 		vsub.f32	s0, s0, s16
 869 0044 454B     		ldr	r3, .L50+36
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 870              		.loc 15 262 32 view .LVU198
 871 0046 2046     		mov	r0, r4
 872 0048 0321     		movs	r1, #3
 261:AmpSim.cpp    **** 	knob_mid_freq = hw.GetAdcValue(CV_4) * 4000 + 170; //hw.adc.GetFloat(midFreqKnob) * 4000.0 + 170;
 873              		.loc 15 261 16 view .LVU199
 874 004a 83ED000A 		vstr.32	s0, [r3]
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 875              		.loc 15 262 2 is_stmt 1 view .LVU200
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 876              		.loc 15 262 32 is_stmt 0 view .LVU201
 877 004e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 878              	.LVL51:
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 879              		.loc 15 262 46 view .LVU202
 880 0052 9FED437A 		vldr.32	s14, .L50+40
 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 881              		.loc 15 263 32 view .LVU203
 882 0056 2046     		mov	r0, r4
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 883              		.loc 15 262 46 view .LVU204
 884 0058 DFED427A 		vldr.32	s15, .L50+44
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 36


 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 885              		.loc 15 263 32 view .LVU205
 886 005c 0421     		movs	r1, #4
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 887              		.loc 15 262 16 view .LVU206
 888 005e 424B     		ldr	r3, .L50+48
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 889              		.loc 15 262 46 view .LVU207
 890 0060 E0EE077A 		vfma.f32	s15, s0, s14
 262:AmpSim.cpp    **** 	knob_mid_gain = hw.GetAdcValue(CV_5) - 0.25; //hw.adc.GetFloat(midGainKnob) - 0.25;
 891              		.loc 15 262 16 view .LVU208
 892 0064 FDEEE77A 		vcvt.s32.f32	s15, s15
 893 0068 17EE902A 		vmov	r2, s15	@ int
 894 006c 1A80     		strh	r2, [r3]	@ movhi
 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 895              		.loc 15 263 2 is_stmt 1 view .LVU209
 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 896              		.loc 15 263 32 is_stmt 0 view .LVU210
 897 006e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 898              	.LVL52:
 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 899              		.loc 15 263 16 view .LVU211
 900 0072 30EE480A 		vsub.f32	s0, s0, s16
 901 0076 3D4B     		ldr	r3, .L50+52
 264:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 902              		.loc 15 264 32 view .LVU212
 903 0078 2046     		mov	r0, r4
 904 007a 0521     		movs	r1, #5
 263:AmpSim.cpp    **** 	knob_bass     = hw.GetAdcValue(CV_6) - 0.25; //hw.adc.GetFloat(bassKnob) - 0.25;
 905              		.loc 15 263 16 view .LVU213
 906 007c 83ED000A 		vstr.32	s0, [r3]
 264:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 907              		.loc 15 264 2 is_stmt 1 view .LVU214
 264:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 908              		.loc 15 264 32 is_stmt 0 view .LVU215
 909 0080 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 910              	.LVL53:
 264:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 911              		.loc 15 264 16 view .LVU216
 912 0084 30EE480A 		vsub.f32	s0, s0, s16
 913 0088 394B     		ldr	r3, .L50+56
 265:AmpSim.cpp    **** 
 914              		.loc 15 265 32 view .LVU217
 915 008a 2046     		mov	r0, r4
 916 008c 0221     		movs	r1, #2
 264:AmpSim.cpp    **** 	knob_color    = hw.GetAdcValue(CV_3);
 917              		.loc 15 264 16 view .LVU218
 918 008e 83ED000A 		vstr.32	s0, [r3]
 265:AmpSim.cpp    **** 
 919              		.loc 15 265 2 is_stmt 1 view .LVU219
 265:AmpSim.cpp    **** 
 920              		.loc 15 265 32 is_stmt 0 view .LVU220
 921 0092 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 922              	.LVL54:
 265:AmpSim.cpp    **** 
 923              		.loc 15 265 16 view .LVU221
 924 0096 374B     		ldr	r3, .L50+60
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 37


 267:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 925              		.loc 15 267 35 view .LVU222
 926 0098 2046     		mov	r0, r4
 927 009a 0A21     		movs	r1, #10
 265:AmpSim.cpp    **** 
 928              		.loc 15 265 16 view .LVU223
 929 009c 83ED000A 		vstr.32	s0, [r3]
 267:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 930              		.loc 15 267 2 is_stmt 1 view .LVU224
 267:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 931              		.loc 15 267 35 is_stmt 0 view .LVU225
 932 00a0 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 933              	.LVL55:
 267:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 934              		.loc 15 267 19 view .LVU226
 935 00a4 344B     		ldr	r3, .L50+64
 936              		.loc 15 268 35 view .LVU227
 937 00a6 2046     		mov	r0, r4
 938 00a8 0B21     		movs	r1, #11
 267:AmpSim.cpp    **** 	knob_fx_time     = hw.GetAdcValue(ADC_12);
 939              		.loc 15 267 19 view .LVU228
 940 00aa 83ED000A 		vstr.32	s0, [r3]
 941              		.loc 15 268 2 is_stmt 1 view .LVU229
 942              		.loc 15 268 35 is_stmt 0 view .LVU230
 943 00ae FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 944              	.LVL56:
 269:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 945              		.loc 15 269 35 view .LVU231
 946 00b2 2046     		mov	r0, r4
 947 00b4 0621     		movs	r1, #6
 268:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 948              		.loc 15 268 19 view .LVU232
 949 00b6 86ED000A 		vstr.32	s0, [r6]
 950              		.loc 15 269 2 is_stmt 1 view .LVU233
 951              		.loc 15 269 35 is_stmt 0 view .LVU234
 952 00ba FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 953              	.LVL57:
 954              		.loc 15 269 19 view .LVU235
 955 00be 2F4B     		ldr	r3, .L50+68
 270:AmpSim.cpp    **** 	knob_fx_tone     = hw.GetAdcValue(CV_8);
 956              		.loc 15 270 35 view .LVU236
 957 00c0 2046     		mov	r0, r4
 958 00c2 0721     		movs	r1, #7
 269:AmpSim.cpp    **** 	knob_fx_feedback = hw.GetAdcValue(CV_7);
 959              		.loc 15 269 19 view .LVU237
 960 00c4 83ED000A 		vstr.32	s0, [r3]
 961              		.loc 15 270 2 is_stmt 1 view .LVU238
 962              		.loc 15 270 35 is_stmt 0 view .LVU239
 963 00c8 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
 964              	.LVL58:
 271:AmpSim.cpp    **** 
 272:AmpSim.cpp    **** 	currentDelay = maxDelay * knob_fx_time;
 965              		.loc 15 272 26 view .LVU240
 966 00cc 96ED006A 		vldr.32	s12, [r6]
 273:AmpSim.cpp    **** 
 274:AmpSim.cpp    **** 	time_osc.SetFreq(3.0 * (1.0 - knob_fx_time) + 0.1);
 967              		.loc 15 274 30 view .LVU241
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 38


 968 00d0 B7EE005B 		vmov.f64	d5, #1.0e+0
 969              		.loc 15 274 46 view .LVU242
 970 00d4 B0EE084B 		vmov.f64	d4, #3.0e+0
 272:AmpSim.cpp    **** 
 971              		.loc 15 272 26 view .LVU243
 972 00d8 2949     		ldr	r1, .L50+72
 973              		.loc 15 274 32 view .LVU244
 974 00da B7EEC63A 		vcvt.f64.f32	d3, s12
 270:AmpSim.cpp    **** 
 975              		.loc 15 270 19 view .LVU245
 976 00de 294A     		ldr	r2, .L50+76
 272:AmpSim.cpp    **** 
 977              		.loc 15 272 26 view .LVU246
 978 00e0 D1ED006A 		vldr.32	s13, [r1]
 979              	.LBB544:
 980              	.LBB541:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 981              		.loc 10 70 34 view .LVU247
 982 00e4 2846     		mov	r0, r5
 983              	.LBE541:
 984              	.LBE544:
 270:AmpSim.cpp    **** 
 985              		.loc 15 270 19 view .LVU248
 986 00e6 82ED000A 		vstr.32	s0, [r2]
 272:AmpSim.cpp    **** 
 987              		.loc 15 272 2 is_stmt 1 view .LVU249
 988              		.loc 15 274 30 is_stmt 0 view .LVU250
 989 00ea 35EE435B 		vsub.f64	d5, d5, d3
 272:AmpSim.cpp    **** 
 990              		.loc 15 272 15 view .LVU251
 991 00ee 264B     		ldr	r3, .L50+80
 272:AmpSim.cpp    **** 
 992              		.loc 15 272 26 view .LVU252
 993 00f0 66EE866A 		vmul.f32	s13, s13, s12
 994              		.loc 15 274 46 view .LVU253
 995 00f4 9FED107B 		vldr.64	d7, .L50
 272:AmpSim.cpp    **** 
 996              		.loc 15 272 15 view .LVU254
 997 00f8 C3ED006A 		vstr.32	s13, [r3]
 998              		.loc 15 274 2 is_stmt 1 view .LVU255
 999              		.loc 15 274 46 is_stmt 0 view .LVU256
 1000 00fc A5EE047B 		vfma.f64	d7, d5, d4
 1001              		.loc 15 274 18 view .LVU257
 1002 0100 B7EEC70B 		vcvt.f32.f64	s0, d7
 1003              	.LVL59:
 1004              	.LBB545:
 1005              	.LBI539:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1006              		.loc 10 67 17 is_stmt 1 view .LVU258
 1007              	.LBB542:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1008              		.loc 10 69 9 view .LVU259
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1009              		.loc 10 69 20 is_stmt 0 view .LVU260
 1010 0104 85ED020A 		vstr.32	s0, [r5, #8]
 1011              		.loc 10 70 9 is_stmt 1 view .LVU261
 1012              		.loc 10 70 34 is_stmt 0 view .LVU262
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 39


 1013 0108 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1014              	.LVL60:
 1015              		.loc 10 70 34 view .LVU263
 1016              	.LBE542:
 1017              	.LBE545:
 275:AmpSim.cpp    **** 	
 276:AmpSim.cpp    **** 	led_time_pwm.Set((time_osc.Process() + 0.6) * TIME_LED_BRIGHTNESS);
 1018              		.loc 15 276 36 view .LVU264
 1019 010c 2846     		mov	r0, r5
 1020              	.LBB546:
 1021              	.LBB543:
 1022              		.loc 10 70 20 view .LVU265
 1023 010e 85ED070A 		vstr.32	s0, [r5, #28]
 1024              	.LVL61:
 1025              		.loc 10 70 20 view .LVU266
 1026              	.LBE543:
 1027              	.LBE546:
 1028              		.loc 15 276 2 is_stmt 1 view .LVU267
 1029              		.loc 15 276 36 is_stmt 0 view .LVU268
 1030 0112 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 1031              	.LVL62:
 1032 0116 B7EEC00A 		vcvt.f64.f32	d0, s0
 1033              		.loc 15 276 18 view .LVU269
 1034 011a 1C48     		ldr	r0, .L50+84
 1035              		.loc 15 276 39 view .LVU270
 1036 011c 9FED087B 		vldr.64	d7, .L50+8
 277:AmpSim.cpp    **** }
 1037              		.loc 15 277 1 view .LVU271
 1038 0120 BDEC028B 		vldm	sp!, {d8}
 1039              		.cfi_restore 80
 1040              		.cfi_restore 81
 1041              		.cfi_def_cfa_offset 16
 276:AmpSim.cpp    **** }
 1042              		.loc 15 276 39 view .LVU272
 1043 0124 30EE070B 		vadd.f64	d0, d0, d7
 1044              		.loc 15 277 1 view .LVU273
 1045 0128 BDE87040 		pop	{r4, r5, r6, lr}
 1046              		.cfi_restore 14
 1047              		.cfi_restore 6
 1048              		.cfi_restore 5
 1049              		.cfi_restore 4
 1050              		.cfi_def_cfa_offset 0
 276:AmpSim.cpp    **** }
 1051              		.loc 15 276 46 view .LVU274
 1052 012c 20EE070B 		vmul.f64	d0, d0, d7
 276:AmpSim.cpp    **** }
 1053              		.loc 15 276 18 view .LVU275
 1054 0130 B7EEC00B 		vcvt.f32.f64	s0, d0
 1055 0134 FFF7FEBF 		b	_ZN5daisy3Led3SetEf
 1056              	.LVL63:
 1057              	.L51:
 1058              		.align	3
 1059              	.L50:
 1060 0138 9A999999 		.word	-1717986918
 1061 013c 9999B93F 		.word	1069128089
 1062 0140 33333333 		.word	858993459
 1063 0144 3333E33F 		.word	1071854387
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 40


 1064 0148 00000000 		.word	.LANCHOR19
 1065 014c 00000000 		.word	.LANCHOR28
 1066 0150 00000000 		.word	.LANCHOR33
 1067 0154 00000000 		.word	.LANCHOR20
 1068 0158 00000000 		.word	.LANCHOR21
 1069 015c 00000000 		.word	.LANCHOR22
 1070 0160 00007A45 		.word	1165623296
 1071 0164 00002A43 		.word	1126825984
 1072 0168 00000000 		.word	.LANCHOR23
 1073 016c 00000000 		.word	.LANCHOR24
 1074 0170 00000000 		.word	.LANCHOR25
 1075 0174 00000000 		.word	.LANCHOR26
 1076 0178 00000000 		.word	.LANCHOR27
 1077 017c 00000000 		.word	.LANCHOR29
 1078 0180 00000000 		.word	.LANCHOR32
 1079 0184 00000000 		.word	.LANCHOR30
 1080 0188 00000000 		.word	.LANCHOR31
 1081 018c 00000000 		.word	.LANCHOR34
 1082              		.cfi_endproc
 1083              	.LFE4689:
 1085              		.section	.text._Z18setFilterConstantsf,"ax",%progbits
 1086              		.align	1
 1087              		.p2align 2,,3
 1088              		.global	_Z18setFilterConstantsf
 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1092              		.fpu fpv5-d16
 1094              	_Z18setFilterConstantsf:
 1095              	.LVL64:
 1096              	.LFB4690:
 278:AmpSim.cpp    **** 
 279:AmpSim.cpp    **** void setFilterConstants(float sample_rate){
 1097              		.loc 15 279 43 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 280:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1101              		.loc 15 280 2 view .LVU277
 1102              	.LBB566:
 1103              	.LBI566:
  31:../../DaisySP//Source/Filters/onepole.h **** 
  32:../../DaisySP//Source/Filters/onepole.h ****     /**
  33:../../DaisySP//Source/Filters/onepole.h ****      * @brief Operational modes of the filter
  34:../../DaisySP//Source/Filters/onepole.h ****      * - LOW_PASS = cuts out high frequency sound, lets low frequency sound pass through
  35:../../DaisySP//Source/Filters/onepole.h ****      * - HIGH_PASS = cuts out low frequency sound, lets high frequency sound pass through
  36:../../DaisySP//Source/Filters/onepole.h ****      */
  37:../../DaisySP//Source/Filters/onepole.h ****     enum FilterMode
  38:../../DaisySP//Source/Filters/onepole.h ****     {
  39:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_LOW_PASS,
  40:../../DaisySP//Source/Filters/onepole.h ****         FILTER_MODE_HIGH_PASS
  41:../../DaisySP//Source/Filters/onepole.h ****     };
  42:../../DaisySP//Source/Filters/onepole.h **** 
  43:../../DaisySP//Source/Filters/onepole.h ****     /** Initializes the module */
  44:../../DaisySP//Source/Filters/onepole.h ****     void Init()
  45:../../DaisySP//Source/Filters/onepole.h ****     {
  46:../../DaisySP//Source/Filters/onepole.h ****         Reset();
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 41


  47:../../DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
  48:../../DaisySP//Source/Filters/onepole.h ****     }
  49:../../DaisySP//Source/Filters/onepole.h **** 
  50:../../DaisySP//Source/Filters/onepole.h ****     /** Reset the module to its default state */
  51:../../DaisySP//Source/Filters/onepole.h ****     inline void Reset() { state_ = 0.0f; }
  52:../../DaisySP//Source/Filters/onepole.h **** 
  53:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter cutoff frequency
  54:../../DaisySP//Source/Filters/onepole.h ****     *   \param freq Cutoff frequency. Valid range from 0 to .497f
  55:../../DaisySP//Source/Filters/onepole.h ****     */
  56:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFrequency(float freq)
 1104              		.loc 13 56 17 view .LVU278
 1105              	.LBB567:
  57:../../DaisySP//Source/Filters/onepole.h ****     {
  58:../../DaisySP//Source/Filters/onepole.h ****         // Clip coefficient to about 100.
  59:../../DaisySP//Source/Filters/onepole.h ****         freq = freq < 0.497f ? freq : 0.497f;
 1106              		.loc 13 59 9 view .LVU279
  60:../../DaisySP//Source/Filters/onepole.h **** 
  61:../../DaisySP//Source/Filters/onepole.h ****         g_  = tanf(PI_F * freq);
 1107              		.loc 13 61 9 view .LVU280
 1108              	.LBE567:
 1109              	.LBE566:
 279:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1110              		.loc 15 279 43 is_stmt 0 view .LVU281
 1111 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1112              		.cfi_def_cfa_offset 24
 1113              		.cfi_offset 3, -24
 1114              		.cfi_offset 4, -20
 1115              		.cfi_offset 5, -16
 1116              		.cfi_offset 6, -12
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
 1119              	.LBB573:
 1120              	.LBB568:
 1121              		.loc 13 61 13 view .LVU282
 1122 0002 4D4A     		ldr	r2, .L54
 1123              	.LBE568:
 1124              	.LBE573:
 1125              	.LBB574:
 1126              	.LBB575:
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1127              		.loc 13 47 15 view .LVU283
 1128 0004 0024     		movs	r4, #0
 1129              	.LBE575:
 1130              	.LBE574:
 1131              	.LBB582:
 1132              	.LBB569:
 1133              		.loc 13 61 13 view .LVU284
 1134 0006 4D4B     		ldr	r3, .L54+4
 1135              	.LBE569:
 1136              	.LBE582:
 281:AmpSim.cpp    **** 	// AmpLowPass.SetRes(0.1);
 282:AmpSim.cpp    **** 	AmpLowPass.Init(); //sample_rate);
 283:AmpSim.cpp    **** 	// AmpLowPass.SetFilterMode(FilterMode);
 284:AmpSim.cpp    **** 
 285:AmpSim.cpp    **** 	AmpBandPass.SetDrive(0.1);
 1137              		.loc 15 285 22 view .LVU285
 1138 0008 4D48     		ldr	r0, .L54+8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 42


 286:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 287:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 288:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 289:AmpSim.cpp    **** 
 290:AmpSim.cpp    **** 	TrebleBandPass.SetFreq(3500);
 1139              		.loc 15 290 24 view .LVU286
 1140 000a 4E4D     		ldr	r5, .L54+12
 1141              	.LBB583:
 1142              	.LBB584:
 1143              	.LBB585:
 1144              	.LBB586:
  33:../../DaisySP//Source/Utility/delayline.h ****     /** initializes the delay line by clearing the values within, and setting delay to 1 sample.
  34:../../DaisySP//Source/Utility/delayline.h ****     */
  35:../../DaisySP//Source/Utility/delayline.h ****     void Init() { Reset(); }
  36:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  37:../../DaisySP//Source/Utility/delayline.h ****     */
  38:../../DaisySP//Source/Utility/delayline.h ****     void Reset()
  39:../../DaisySP//Source/Utility/delayline.h ****     {
  40:../../DaisySP//Source/Utility/delayline.h ****         for(size_t i = 0; i < max_size; i++)
  41:../../DaisySP//Source/Utility/delayline.h ****         {
  42:../../DaisySP//Source/Utility/delayline.h ****             line_[i] = T(0);
 1145              		.loc 14 42 22 view .LVU287
 1146 000c 4E4E     		ldr	r6, .L54+16
 1147              	.LBE586:
 1148              	.LBE585:
 1149              	.LBE584:
 1150              	.LBE583:
 279:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1151              		.loc 15 279 43 view .LVU288
 1152 000e 2DED048B 		vpush.64	{d8, d9}
 1153              		.cfi_def_cfa_offset 40
 1154              		.cfi_offset 80, -40
 1155              		.cfi_offset 81, -36
 1156              		.cfi_offset 82, -32
 1157              		.cfi_offset 83, -28
 1158              	.LBB592:
 1159              	.LBB570:
 1160              		.loc 13 61 13 view .LVU289
 1161 0012 1A60     		str	r2, [r3]	@ float
  62:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 1162              		.loc 13 62 9 is_stmt 1 view .LVU290
 1163              	.LBE570:
 1164              	.LBE592:
 279:AmpSim.cpp    **** 	AmpLowPass.SetFrequency(2800);
 1165              		.loc 15 279 43 is_stmt 0 view .LVU291
 1166 0014 B0EE408A 		vmov.f32	s16, s0
 1167              	.LBB593:
 1168              	.LBB571:
 1169              		.loc 13 62 13 view .LVU292
 1170 0018 4C4A     		ldr	r2, .L54+20
 1171              	.LBE571:
 1172              	.LBE593:
 285:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1173              		.loc 15 285 22 view .LVU293
 1174 001a 9FED4D9A 		vldr.32	s18, .L54+24
 1175              	.LBB594:
 1176              	.LBB572:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 43


 1177              		.loc 13 62 13 view .LVU294
 1178 001e 5A60     		str	r2, [r3, #4]	@ float
 1179              	.LVL65:
 1180              		.loc 13 62 13 view .LVU295
 1181              	.LBE572:
 1182              	.LBE594:
 282:AmpSim.cpp    **** 	// AmpLowPass.SetFilterMode(FilterMode);
 1183              		.loc 15 282 2 is_stmt 1 view .LVU296
 1184              	.LBB595:
 1185              	.LBI574:
  44:../../DaisySP//Source/Filters/onepole.h ****     {
 1186              		.loc 13 44 10 view .LVU297
 1187              	.LBB580:
  46:../../DaisySP//Source/Filters/onepole.h ****         mode_ = FILTER_MODE_LOW_PASS;
 1188              		.loc 13 46 9 view .LVU298
 1189              	.LBB576:
 1190              	.LBI576:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1191              		.loc 13 51 17 view .LVU299
 1192              	.LBB577:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1193              		.loc 13 51 27 view .LVU300
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1194              		.loc 13 51 34 is_stmt 0 view .LVU301
 1195 0020 0022     		movs	r2, #0
 1196              	.LBE577:
 1197              	.LBE576:
 1198              	.LBE580:
 1199              	.LBE595:
 285:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1200              		.loc 15 285 22 view .LVU302
 1201 0022 B0EE490A 		vmov.f32	s0, s18
 1202              	.LVL66:
 1203              	.LBB596:
 1204              	.LBB581:
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1205              		.loc 13 47 15 view .LVU303
 1206 0026 1C73     		strb	r4, [r3, #12]
 1207              	.LBB579:
 1208              	.LBB578:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1209              		.loc 13 51 34 view .LVU304
 1210 0028 9A60     		str	r2, [r3, #8]	@ float
 1211              	.LVL67:
  51:../../DaisySP//Source/Filters/onepole.h **** 
 1212              		.loc 13 51 34 view .LVU305
 1213              	.LBE578:
 1214              	.LBE579:
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1215              		.loc 13 47 9 is_stmt 1 view .LVU306
  47:../../DaisySP//Source/Filters/onepole.h ****     }
 1216              		.loc 13 47 9 is_stmt 0 view .LVU307
 1217              	.LBE581:
 1218              	.LBE596:
 285:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
 1219              		.loc 15 285 2 is_stmt 1 view .LVU308
 285:AmpSim.cpp    **** 	AmpBandPass.SetFreq(680);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 44


 1220              		.loc 15 285 22 is_stmt 0 view .LVU309
 1221 002a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1222              	.LVL68:
 286:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 1223              		.loc 15 286 2 is_stmt 1 view .LVU310
 286:AmpSim.cpp    **** 	AmpBandPass.SetRes(0.1);
 1224              		.loc 15 286 21 is_stmt 0 view .LVU311
 1225 002e 9FED490A 		vldr.32	s0, .L54+28
 1226 0032 4348     		ldr	r0, .L54+8
 1227 0034 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1228              	.LVL69:
 287:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 1229              		.loc 15 287 2 is_stmt 1 view .LVU312
 287:AmpSim.cpp    **** 	AmpBandPass.Init(sample_rate);
 1230              		.loc 15 287 20 is_stmt 0 view .LVU313
 1231 0038 B0EE490A 		vmov.f32	s0, s18
 1232 003c 4048     		ldr	r0, .L54+8
 1233 003e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1234              	.LVL70:
 288:AmpSim.cpp    **** 
 1235              		.loc 15 288 2 is_stmt 1 view .LVU314
 291:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 1236              		.loc 15 291 25 is_stmt 0 view .LVU315
 1237 0042 DFED458A 		vldr.32	s17, .L54+32
 288:AmpSim.cpp    **** 
 1238              		.loc 15 288 18 view .LVU316
 1239 0046 B0EE480A 		vmov.f32	s0, s16
 1240 004a 3D48     		ldr	r0, .L54+8
 1241 004c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1242              	.LVL71:
 290:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 1243              		.loc 15 290 2 is_stmt 1 view .LVU317
 290:AmpSim.cpp    **** 	TrebleBandPass.SetDrive(0.2);
 1244              		.loc 15 290 24 is_stmt 0 view .LVU318
 1245 0050 2846     		mov	r0, r5
 1246 0052 9FED420A 		vldr.32	s0, .L54+36
 1247 0056 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1248              	.LVL72:
 1249              		.loc 15 291 2 is_stmt 1 view .LVU319
 1250              		.loc 15 291 25 is_stmt 0 view .LVU320
 1251 005a B0EE680A 		vmov.f32	s0, s17
 1252 005e 2846     		mov	r0, r5
 1253 0060 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1254              	.LVL73:
 292:AmpSim.cpp    **** 	TrebleBandPass.SetRes(0.2);
 1255              		.loc 15 292 2 is_stmt 1 view .LVU321
 1256              		.loc 15 292 23 is_stmt 0 view .LVU322
 1257 0064 B0EE680A 		vmov.f32	s0, s17
 1258 0068 2846     		mov	r0, r5
 1259 006a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1260              	.LVL74:
 293:AmpSim.cpp    **** 	TrebleBandPass.Init(sample_rate);
 1261              		.loc 15 293 2 is_stmt 1 view .LVU323
 1262              		.loc 15 293 21 is_stmt 0 view .LVU324
 1263 006e B0EE480A 		vmov.f32	s0, s16
 1264 0072 2846     		mov	r0, r5
 294:AmpSim.cpp    **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 45


 295:AmpSim.cpp    **** 	BassLowPass.Init(sample_rate);
 296:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 297:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 298:AmpSim.cpp    **** 
 299:AmpSim.cpp    **** 
 300:AmpSim.cpp    **** 	MidBandPass.SetFreq(1000);
 1265              		.loc 15 300 21 view .LVU325
 1266 0074 3A4D     		ldr	r5, .L54+40
 293:AmpSim.cpp    **** 	TrebleBandPass.Init(sample_rate);
 1267              		.loc 15 293 21 view .LVU326
 1268 0076 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1269              	.LVL75:
 295:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 1270              		.loc 15 295 2 is_stmt 1 view .LVU327
 295:AmpSim.cpp    **** 	BassLowPass.SetFreq(300);
 1271              		.loc 15 295 18 is_stmt 0 view .LVU328
 1272 007a B0EE480A 		vmov.f32	s0, s16
 1273 007e 3948     		ldr	r0, .L54+44
 1274 0080 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1275              	.LVL76:
 296:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 1276              		.loc 15 296 2 is_stmt 1 view .LVU329
 296:AmpSim.cpp    **** 	BassLowPass.SetRes(0.1);
 1277              		.loc 15 296 21 is_stmt 0 view .LVU330
 1278 0084 9FED380A 		vldr.32	s0, .L54+48
 1279 0088 3648     		ldr	r0, .L54+44
 1280 008a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1281              	.LVL77:
 297:AmpSim.cpp    **** 
 1282              		.loc 15 297 2 is_stmt 1 view .LVU331
 297:AmpSim.cpp    **** 
 1283              		.loc 15 297 20 is_stmt 0 view .LVU332
 1284 008e B0EE490A 		vmov.f32	s0, s18
 1285 0092 3448     		ldr	r0, .L54+44
 1286 0094 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1287              	.LVL78:
 1288              		.loc 15 300 2 is_stmt 1 view .LVU333
 1289              		.loc 15 300 21 is_stmt 0 view .LVU334
 1290 0098 2846     		mov	r0, r5
 1291 009a 9FED340A 		vldr.32	s0, .L54+52
 1292 009e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1293              	.LVL79:
 301:AmpSim.cpp    **** 	MidBandPass.SetDrive(0.2);
 1294              		.loc 15 301 2 is_stmt 1 view .LVU335
 1295              		.loc 15 301 22 is_stmt 0 view .LVU336
 1296 00a2 B0EE680A 		vmov.f32	s0, s17
 1297 00a6 2846     		mov	r0, r5
 1298 00a8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 1299              	.LVL80:
 302:AmpSim.cpp    **** 	MidBandPass.SetRes(0.3);
 1300              		.loc 15 302 2 is_stmt 1 view .LVU337
 1301              		.loc 15 302 20 is_stmt 0 view .LVU338
 1302 00ac 2846     		mov	r0, r5
 1303 00ae 9FED300A 		vldr.32	s0, .L54+56
 1304 00b2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1305              	.LVL81:
 303:AmpSim.cpp    **** 	MidBandPass.Init(sample_rate);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 46


 1306              		.loc 15 303 2 is_stmt 1 view .LVU339
 1307              		.loc 15 303 18 is_stmt 0 view .LVU340
 1308 00b6 2846     		mov	r0, r5
 304:AmpSim.cpp    **** 
 305:AmpSim.cpp    **** 	Drive.SetDrive(0.2);
 1309              		.loc 15 305 16 view .LVU341
 1310 00b8 2E4D     		ldr	r5, .L54+60
 303:AmpSim.cpp    **** 	MidBandPass.Init(sample_rate);
 1311              		.loc 15 303 18 view .LVU342
 1312 00ba B0EE480A 		vmov.f32	s0, s16
 1313 00be FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 1314              	.LVL82:
 1315              		.loc 15 305 2 is_stmt 1 view .LVU343
 1316              		.loc 15 305 16 is_stmt 0 view .LVU344
 1317 00c2 B0EE680A 		vmov.f32	s0, s17
 1318 00c6 2846     		mov	r0, r5
 1319 00c8 FFF7FEFF 		bl	_ZN7daisysp9Overdrive8SetDriveEf
 1320              	.LVL83:
 306:AmpSim.cpp    **** 	Drive.Init();
 1321              		.loc 15 306 2 is_stmt 1 view .LVU345
 1322              		.loc 15 306 12 is_stmt 0 view .LVU346
 1323 00cc 2846     		mov	r0, r5
 1324              	.LBB597:
 1325              	.LBB598:
 1326              	.LBB599:
 1327              	.LBB600:
 1328              		.loc 14 42 22 view .LVU347
 1329 00ce 2A4D     		ldr	r5, .L54+64
 1330              	.LBE600:
 1331              	.LBE599:
 1332              	.LBE598:
 1333              	.LBE597:
 1334              		.loc 15 306 12 view .LVU348
 1335 00d0 FFF7FEFF 		bl	_ZN7daisysp9Overdrive4InitEv
 1336              	.LVL84:
 307:AmpSim.cpp    **** 
 308:AmpSim.cpp    **** 	// rev.Init(sample_rate);
 309:AmpSim.cpp    ****     dlyl.Init();
 1337              		.loc 15 309 5 is_stmt 1 view .LVU349
 1338              	.LBB609:
 1339              	.LBI583:
  35:../../DaisySP//Source/Utility/delayline.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
 1340              		.loc 14 35 10 view .LVU350
 1341              	.LBB590:
 1342              	.LBB588:
 1343              	.LBB587:
  40:../../DaisySP//Source/Utility/delayline.h ****         {
 1344              		.loc 14 40 29 view .LVU351
 1345              		.loc 14 42 22 is_stmt 0 view .LVU352
 1346 00d4 2146     		mov	r1, r4
 1347 00d6 294A     		ldr	r2, .L54+68
 1348 00d8 3046     		mov	r0, r6
 1349 00da FFF7FEFF 		bl	memset
 1350              	.LVL85:
 1351              		.loc 14 42 22 view .LVU353
 1352              	.LBE587:
 1353              	.LBE588:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 47


 1354              	.LBE590:
 1355              	.LBE609:
 1356              	.LBB610:
 1357              	.LBB606:
 1358              	.LBB603:
 1359              	.LBB601:
 1360 00de 274A     		ldr	r2, .L54+68
 1361 00e0 2146     		mov	r1, r4
 1362 00e2 2846     		mov	r0, r5
 1363              	.LBE601:
 1364              	.LBE603:
 1365              	.LBE606:
 1366              	.LBE610:
 1367              	.LBB611:
 1368              	.LBB591:
 1369              	.LBB589:
  43:../../DaisySP//Source/Utility/delayline.h ****         }
  44:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_ = 0;
 1370              		.loc 14 44 20 view .LVU354
 1371 00e4 46F8084C 		str	r4, [r6, #-8]
 1372              	.LVL86:
 1373              		.loc 14 44 20 view .LVU355
 1374              	.LBE589:
 1375              	.LBE591:
 1376              	.LBE611:
 1377              	.LBB612:
 1378              	.LBB607:
 1379              	.LBB604:
 1380              	.LBB602:
  40:../../DaisySP//Source/Utility/delayline.h ****         {
 1381              		.loc 14 40 29 is_stmt 1 view .LVU356
  42:../../DaisySP//Source/Utility/delayline.h ****         }
 1382              		.loc 14 42 22 is_stmt 0 view .LVU357
 1383 00e8 FFF7FEFF 		bl	memset
 1384              	.LVL87:
  42:../../DaisySP//Source/Utility/delayline.h ****         }
 1385              		.loc 14 42 22 view .LVU358
 1386              	.LBE602:
 1387              	.LBE604:
 1388              	.LBE607:
 1389              	.LBE612:
 310:AmpSim.cpp    ****     dlyr.Init();
 311:AmpSim.cpp    **** 
 312:AmpSim.cpp    ****     //reverb parameters
 313:AmpSim.cpp    ****     // rev.SetLpFreq(18000.0f);
 314:AmpSim.cpp    ****     // rev.SetFeedback(0.85f);
 315:AmpSim.cpp    **** 
 316:AmpSim.cpp    ****     //delay parameters
 317:AmpSim.cpp    ****     maxDelay = delayTarget = sample_rate * 0.75f;
 1390              		.loc 15 317 42 view .LVU359
 1391 00ec F6EE087A 		vmov.f32	s15, #7.5e-1
 1392              		.loc 15 317 28 view .LVU360
 1393 00f0 234A     		ldr	r2, .L54+72
 1394              	.LBB613:
 1395              	.LBB614:
  45:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
  46:../../DaisySP//Source/Utility/delayline.h ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 48


  47:../../DaisySP//Source/Utility/delayline.h **** 
  48:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  49:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  50:../../DaisySP//Source/Utility/delayline.h ****     */
  51:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(size_t delay)
  52:../../DaisySP//Source/Utility/delayline.h ****     {
  53:../../DaisySP//Source/Utility/delayline.h ****         frac_  = 0.0f;
  54:../../DaisySP//Source/Utility/delayline.h ****         delay_ = delay < max_size ? delay : max_size - 1;
  55:../../DaisySP//Source/Utility/delayline.h ****     }
  56:../../DaisySP//Source/Utility/delayline.h **** 
  57:../../DaisySP//Source/Utility/delayline.h ****     /** sets the delay time in samples
  58:../../DaisySP//Source/Utility/delayline.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  59:../../DaisySP//Source/Utility/delayline.h ****     */
  60:../../DaisySP//Source/Utility/delayline.h ****     inline void SetDelay(float delay)
  61:../../DaisySP//Source/Utility/delayline.h ****     {
  62:../../DaisySP//Source/Utility/delayline.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  63:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
  64:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1396              		.loc 14 64 60 view .LVU361
 1397 00f2 244B     		ldr	r3, .L54+76
 1398              	.LBE614:
 1399              	.LBE613:
 1400              	.LBB621:
 1401              	.LBB608:
 1402              	.LBB605:
  44:../../DaisySP//Source/Utility/delayline.h ****         delay_     = 1;
 1403              		.loc 14 44 20 view .LVU362
 1404 00f4 45F8084C 		str	r4, [r5, #-8]
 1405              	.LBE605:
 1406              	.LBE608:
 1407              	.LBE621:
 1408              		.loc 15 317 5 is_stmt 1 view .LVU363
 1409              		.loc 15 317 42 is_stmt 0 view .LVU364
 1410 00f8 28EE278A 		vmul.f32	s16, s16, s15
 1411              	.LVL88:
 1412              	.LBB622:
 1413              	.LBB615:
  62:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 1414              		.loc 14 62 17 view .LVU365
 1415 00fc FDEEC87A 		vcvt.s32.f32	s15, s16
 1416              	.LBE615:
 1417              	.LBE622:
 1418              		.loc 15 317 28 view .LVU366
 1419 0100 82ED008A 		vstr.32	s16, [r2]
 1420              		.loc 15 317 14 view .LVU367
 1421 0104 204A     		ldr	r2, .L54+80
 1422              	.LBB623:
 1423              	.LBB616:
 1424              		.loc 14 64 60 view .LVU368
 1425 0106 17EE901A 		vmov	r1, s15	@ int
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1426              		.loc 14 63 37 view .LVU369
 1427 010a B8EEE77A 		vcvt.f32.s32	s14, s15
 1428              	.LBE616:
 1429              	.LBE623:
 1430              		.loc 15 317 14 view .LVU370
 1431 010e 82ED008A 		vstr.32	s16, [r2]
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 49


 318:AmpSim.cpp    **** 	currentDelay = maxDelay;
 1432              		.loc 15 318 2 is_stmt 1 view .LVU371
 1433              	.LBB624:
 1434              	.LBB617:
 1435              		.loc 14 64 60 is_stmt 0 view .LVU372
 1436 0112 9942     		cmp	r1, r3
 1437              	.LBE617:
 1438              	.LBE624:
 1439              		.loc 15 318 15 view .LVU373
 1440 0114 1D4A     		ldr	r2, .L54+84
 1441              	.LBB625:
 1442              	.LBB618:
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1443              		.loc 14 63 35 view .LVU374
 1444 0116 78EE477A 		vsub.f32	s15, s16, s14
 1445              		.loc 14 64 60 view .LVU375
 1446 011a 28BF     		it	cs
 1447 011c 1946     		movcs	r1, r3
 1448              	.LBE618:
 1449              	.LBE625:
 1450              		.loc 15 318 15 view .LVU376
 1451 011e 82ED008A 		vstr.32	s16, [r2]
 319:AmpSim.cpp    ****     dlyl.SetDelay(currentDelay);
 1452              		.loc 15 319 5 is_stmt 1 view .LVU377
 1453              	.LVL89:
 1454              	.LBB626:
 1455              	.LBI613:
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 1456              		.loc 14 60 17 view .LVU378
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 1457              		.loc 14 60 17 is_stmt 0 view .LVU379
 1458              	.LBE626:
 320:AmpSim.cpp    ****     dlyr.SetDelay(currentDelay);
 1459              		.loc 15 320 5 is_stmt 1 view .LVU380
 1460              	.LBB627:
 1461              	.LBI627:
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 1462              		.loc 14 60 17 view .LVU381
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 1463              		.loc 14 60 17 is_stmt 0 view .LVU382
 1464              	.LBE627:
 321:AmpSim.cpp    **** }
 1465              		.loc 15 321 1 view .LVU383
 1466 0122 BDEC048B 		vldm	sp!, {d8-d9}
 1467              		.cfi_restore 82
 1468              		.cfi_restore 83
 1469              		.cfi_restore 80
 1470              		.cfi_restore 81
 1471              		.cfi_def_cfa_offset 24
 1472              	.LBB630:
 1473              	.LBB619:
 1474              		.loc 14 64 16 view .LVU384
 1475 0126 46F8041C 		str	r1, [r6, #-4]
 1476              	.LBE619:
 1477              	.LBE630:
 1478              	.LBB631:
 1479              	.LBB628:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 50


 1480 012a 45F8041C 		str	r1, [r5, #-4]
 1481              	.LBE628:
 1482              	.LBE631:
 1483              	.LBB632:
 1484              	.LBB620:
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 1485              		.loc 14 63 27 view .LVU385
 1486 012e 46ED037A 		vstr.32	s15, [r6, #-12]
 1487              	.LBE620:
 1488              	.LBE632:
 1489              	.LBB633:
 1490              	.LBB629:
 1491 0132 45ED037A 		vstr.32	s15, [r5, #-12]
 1492              	.LBE629:
 1493              	.LBE633:
 1494              		.loc 15 321 1 view .LVU386
 1495 0136 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1496              	.L55:
 1497              		.align	2
 1498              	.L54:
 1499 0138 5F33D442 		.word	1121203039
 1500 013c 00000000 		.word	.LANCHOR35
 1501 0140 00000000 		.word	.LANCHOR36
 1502 0144 00000000 		.word	.LANCHOR37
 1503 0148 18530700 		.word	_ZL4dlyl+12
 1504 014c 61FA183C 		.word	1008269921
 1505 0150 CDCCCC3D 		.word	1036831949
 1506 0154 00002A44 		.word	1143603200
 1507 0158 CDCC4C3E 		.word	1045220557
 1508 015c 00C05A45 		.word	1163575296
 1509 0160 00000000 		.word	.LANCHOR39
 1510 0164 00000000 		.word	.LANCHOR38
 1511 0168 00009643 		.word	1133903872
 1512 016c 00007A44 		.word	1148846080
 1513 0170 9A99993E 		.word	1050253722
 1514 0174 00000000 		.word	.LANCHOR40
 1515 0178 0C000000 		.word	_ZL4dlyr+12
 1516 017c 00530700 		.word	480000
 1517 0180 00000000 		.word	.LANCHOR41
 1518 0184 BFD40100 		.word	119999
 1519 0188 00000000 		.word	.LANCHOR32
 1520 018c 00000000 		.word	.LANCHOR31
 1521              		.cfi_endproc
 1522              	.LFE4690:
 1524              		.section	.text.startup.main,"ax",%progbits
 1525              		.align	1
 1526              		.p2align 2,,3
 1527              		.global	main
 1528              		.syntax unified
 1529              		.thumb
 1530              		.thumb_func
 1531              		.fpu fpv5-d16
 1533              	main:
 1534              	.LFB4687:
 162:AmpSim.cpp    **** 	hw.Init();
 1535              		.loc 15 162 1 is_stmt 1 view -0
 1536              		.cfi_startproc
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 51


 1537              		@ Volatile: function does not return.
 1538              		@ args = 0, pretend = 0, frame = 16
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 163:AmpSim.cpp    **** 
 1540              		.loc 15 163 2 view .LVU388
 162:AmpSim.cpp    **** 	hw.Init();
 1541              		.loc 15 162 1 is_stmt 0 view .LVU389
 1542 0000 00B5     		push	{lr}
 1543              		.cfi_def_cfa_offset 4
 1544              		.cfi_offset 14, -4
 163:AmpSim.cpp    **** 
 1545              		.loc 15 163 9 view .LVU390
 1546 0002 7448     		ldr	r0, .L59
 162:AmpSim.cpp    **** 	hw.Init();
 1547              		.loc 15 162 1 view .LVU391
 1548 0004 87B0     		sub	sp, sp, #28
 1549              		.cfi_def_cfa_offset 32
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1550              		.loc 15 166 18 view .LVU392
 1551 0006 0125     		movs	r5, #1
 163:AmpSim.cpp    **** 
 1552              		.loc 15 163 9 view .LVU393
 1553 0008 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
 1554              	.LVL90:
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1555              		.loc 15 166 2 is_stmt 1 view .LVU394
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1556              		.loc 15 166 18 is_stmt 0 view .LVU395
 1557 000c 0E23     		movs	r3, #14
 1558 000e 9FED728A 		vldr.32	s16, .L59+4
 1559 0012 8DF80850 		strb	r5, [sp, #8]
 167:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 1560              		.loc 15 167 19 view .LVU396
 1561 0016 0426     		movs	r6, #4
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1562              		.loc 15 166 18 view .LVU397
 1563 0018 8DF80930 		strb	r3, [sp, #9]
 1564 001c B0EE480A 		vmov.f32	s0, s16
 1565 0020 6E48     		ldr	r0, .L59+8
 173:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 1566              		.loc 15 173 15 view .LVU398
 1567 0022 0024     		movs	r4, #0
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1568              		.loc 15 166 18 view .LVU399
 1569 0024 0299     		ldr	r1, [sp, #8]
 1570              	.LBB642:
 1571              	.LBB643:
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1572              		.loc 10 53 27 view .LVU400
 1573 0026 F7EE008A 		vmov.f32	s17, #1.0e+0
 1574              	.LBE643:
 1575              	.LBE642:
 166:AmpSim.cpp    **** 	button_blend.Init(hw.D1, BUTTON_SAMPLE_RATE);
 1576              		.loc 15 166 18 view .LVU401
 1577 002a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1578              	.LVL91:
 167:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 52


 1579              		.loc 15 167 2 is_stmt 1 view .LVU402
 167:AmpSim.cpp    **** 	button_fx.Init(hw.D2, BUTTON_SAMPLE_RATE);
 1580              		.loc 15 167 19 is_stmt 0 view .LVU403
 1581 002e 8DF80C50 		strb	r5, [sp, #12]
 1582 0032 8DF80D60 		strb	r6, [sp, #13]
 1583 0036 B0EE480A 		vmov.f32	s0, s16
 1584 003a 0399     		ldr	r1, [sp, #12]
 1585 003c 6848     		ldr	r0, .L59+12
 1586 003e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1587              	.LVL92:
 168:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 1588              		.loc 15 168 2 is_stmt 1 view .LVU404
 168:AmpSim.cpp    **** 	button_stereo.Init(hw.B10, BUTTON_SAMPLE_RATE);  //gate_in_1
 1589              		.loc 15 168 16 is_stmt 0 view .LVU405
 1590 0042 0222     		movs	r2, #2
 1591 0044 0B23     		movs	r3, #11
 1592 0046 B0EE480A 		vmov.f32	s0, s16
 1593 004a 8DF81020 		strb	r2, [sp, #16]
 1594 004e 8DF81130 		strb	r3, [sp, #17]
 1595 0052 6448     		ldr	r0, .L59+16
 1596 0054 0499     		ldr	r1, [sp, #16]
 1597 0056 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 1598              	.LVL93:
 169:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 1599              		.loc 15 169 2 is_stmt 1 view .LVU406
 169:AmpSim.cpp    **** 	button_cv.Init(hw.B9, BUTTON_SAMPLE_RATE); //gate_in_2
 1600              		.loc 15 169 20 is_stmt 0 view .LVU407
 1601 005a 634B     		ldr	r3, .L59+20
 1602 005c 6348     		ldr	r0, .L59+24
 1603 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1604 0060 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1605 0062 42EA0121 		orr	r1, r2, r1, lsl #8
 1606 0066 2A46     		mov	r2, r5
 1607 0068 FFF7FEFF 		bl	_ZN5daisy6GateIn4InitENS_3PinEb
 1608              	.LVL94:
 170:AmpSim.cpp    **** 
 1609              		.loc 15 170 2 is_stmt 1 view .LVU408
 170:AmpSim.cpp    **** 
 1610              		.loc 15 170 16 is_stmt 0 view .LVU409
 1611 006c 604B     		ldr	r3, .L59+28
 1612 006e 6148     		ldr	r0, .L59+32
 1613 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1614 0072 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1615 0074 42EA0121 		orr	r1, r2, r1, lsl #8
 1616 0078 2A46     		mov	r2, r5
 1617 007a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitENS_3PinEb
 1618              	.LVL95:
 173:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 1619              		.loc 15 173 2 is_stmt 1 view .LVU410
 173:AmpSim.cpp    **** 	led_blend.Init(hw.D3, GPIO::Mode::OUTPUT);
 1620              		.loc 15 173 15 is_stmt 0 view .LVU411
 1621 007e 5E4B     		ldr	r3, .L59+36
 1622 0080 0094     		str	r4, [sp]
 1623 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1624 0084 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 1625 0086 2346     		mov	r3, r4
 1626 0088 5C48     		ldr	r0, .L59+40
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 53


 1627 008a 42EA0121 		orr	r1, r2, r1, lsl #8
 1628 008e 2A46     		mov	r2, r5
 1629 0090 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1630              	.LVL96:
 174:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 1631              		.loc 15 174 2 is_stmt 1 view .LVU412
 174:AmpSim.cpp    **** 	led_delay.Init(hw.D4, GPIO::Mode::OUTPUT);
 1632              		.loc 15 174 16 is_stmt 0 view .LVU413
 1633 0094 5A4A     		ldr	r2, .L59+44
 1634 0096 0094     		str	r4, [sp]
 1635 0098 2346     		mov	r3, r4
 1636 009a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1637 009c 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1638 009e 5948     		ldr	r0, .L59+48
 1639 00a0 41EA0221 		orr	r1, r1, r2, lsl #8
 1640 00a4 2A46     		mov	r2, r5
 1641 00a6 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1642              	.LVL97:
 175:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 1643              		.loc 15 175 2 is_stmt 1 view .LVU414
 175:AmpSim.cpp    **** 	led_reverb.Init(hw.D5, GPIO::Mode::OUTPUT);
 1644              		.loc 15 175 16 is_stmt 0 view .LVU415
 1645 00aa 574A     		ldr	r2, .L59+52
 1646 00ac 0094     		str	r4, [sp]
 1647 00ae 2346     		mov	r3, r4
 1648 00b0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1649 00b2 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1650 00b4 5548     		ldr	r0, .L59+56
 1651 00b6 41EA0221 		orr	r1, r1, r2, lsl #8
 1652 00ba 2A46     		mov	r2, r5
 1653 00bc FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1654              	.LVL98:
 176:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 1655              		.loc 15 176 2 is_stmt 1 view .LVU416
 176:AmpSim.cpp    **** 	led_split.Init(hw.B5, GPIO::Mode::OUTPUT);
 1656              		.loc 15 176 17 is_stmt 0 view .LVU417
 1657 00c0 534A     		ldr	r2, .L59+60
 1658 00c2 0094     		str	r4, [sp]
 1659 00c4 2346     		mov	r3, r4
 1660 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1661 00c8 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1662 00ca 5248     		ldr	r0, .L59+64
 1663 00cc 41EA0221 		orr	r1, r1, r2, lsl #8
 1664 00d0 2A46     		mov	r2, r5
 1665 00d2 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1666              	.LVL99:
 177:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 1667              		.loc 15 177 2 is_stmt 1 view .LVU418
 177:AmpSim.cpp    **** 	led_stereo.Init(hw.B6, GPIO::Mode::OUTPUT);
 1668              		.loc 15 177 16 is_stmt 0 view .LVU419
 1669 00d6 504A     		ldr	r2, .L59+68
 1670 00d8 0094     		str	r4, [sp]
 1671 00da 2346     		mov	r3, r4
 1672 00dc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1673 00de 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1674 00e0 4E48     		ldr	r0, .L59+72
 1675 00e2 41EA0221 		orr	r1, r1, r2, lsl #8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 54


 1676 00e6 2A46     		mov	r2, r5
 1677 00e8 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1678              	.LVL100:
 178:AmpSim.cpp    **** 	// led_time.Init(hw.B8, GPIO::Mode::OUTPUT);
 1679              		.loc 15 178 2 is_stmt 1 view .LVU420
 178:AmpSim.cpp    **** 	// led_time.Init(hw.B8, GPIO::Mode::OUTPUT);
 1680              		.loc 15 178 17 is_stmt 0 view .LVU421
 1681 00ec 4C4A     		ldr	r2, .L59+76
 1682 00ee 0094     		str	r4, [sp]
 1683 00f0 2346     		mov	r3, r4
 1684 00f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1685 00f4 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1686 00f6 4B48     		ldr	r0, .L59+80
 1687 00f8 41EA0221 		orr	r1, r1, r2, lsl #8
 1688 00fc 2A46     		mov	r2, r5
 1689 00fe FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1690              	.LVL101:
 180:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 1691              		.loc 15 180 2 is_stmt 1 view .LVU422
 180:AmpSim.cpp    **** 	led_time_pwm.Set(127.0);
 1692              		.loc 15 180 19 is_stmt 0 view .LVU423
 1693 0102 0923     		movs	r3, #9
 1694 0104 8DF81450 		strb	r5, [sp, #20]
 1695 0108 2246     		mov	r2, r4
 1696 010a 8DF81530 		strb	r3, [sp, #21]
 1697 010e 0599     		ldr	r1, [sp, #20]
 1698 0110 9FED450A 		vldr.32	s0, .L59+84
 1699 0114 4548     		ldr	r0, .L59+88
 1700 0116 FFF7FEFF 		bl	_ZN5daisy3Led4InitE12dsy_gpio_pinbf
 1701              	.LVL102:
 181:AmpSim.cpp    **** 
 1702              		.loc 15 181 2 is_stmt 1 view .LVU424
 181:AmpSim.cpp    **** 
 1703              		.loc 15 181 18 is_stmt 0 view .LVU425
 1704 011a 9FED450A 		vldr.32	s0, .L59+92
 1705 011e 4348     		ldr	r0, .L59+88
 1706 0120 FFF7FEFF 		bl	_ZN5daisy3Led3SetEf
 1707              	.LVL103:
 184:AmpSim.cpp    **** 	led_stereo.Write(true);
 1708              		.loc 15 184 2 is_stmt 1 view .LVU426
 184:AmpSim.cpp    **** 	led_stereo.Write(true);
 1709              		.loc 15 184 17 is_stmt 0 view .LVU427
 1710 0124 2946     		mov	r1, r5
 1711 0126 3948     		ldr	r0, .L59+56
 1712 0128 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1713              	.LVL104:
 185:AmpSim.cpp    **** 	state_fx = false;
 1714              		.loc 15 185 2 is_stmt 1 view .LVU428
 185:AmpSim.cpp    **** 	state_fx = false;
 1715              		.loc 15 185 18 is_stmt 0 view .LVU429
 1716 012c 2946     		mov	r1, r5
 1717 012e 3D48     		ldr	r0, .L59+80
 1718 0130 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1719              	.LVL105:
 186:AmpSim.cpp    **** 	state_stereo = true;
 1720              		.loc 15 186 2 is_stmt 1 view .LVU430
 186:AmpSim.cpp    **** 	state_stereo = true;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 55


 1721              		.loc 15 186 11 is_stmt 0 view .LVU431
 1722 0134 3F4B     		ldr	r3, .L59+96
 190:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
 1723              		.loc 15 190 15 view .LVU432
 1724 0136 2748     		ldr	r0, .L59
 186:AmpSim.cpp    **** 	state_stereo = true;
 1725              		.loc 15 186 11 view .LVU433
 1726 0138 1C70     		strb	r4, [r3]
 187:AmpSim.cpp    **** 
 1727              		.loc 15 187 2 is_stmt 1 view .LVU434
 187:AmpSim.cpp    **** 
 1728              		.loc 15 187 15 is_stmt 0 view .LVU435
 1729 013a 3F4B     		ldr	r3, .L59+100
 1730 013c 1D70     		strb	r5, [r3]
 190:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
 1731              		.loc 15 190 2 is_stmt 1 view .LVU436
 190:AmpSim.cpp    **** 	time_osc.SetWaveform(Oscillator::WAVE_SIN);
 1732              		.loc 15 190 15 is_stmt 0 view .LVU437
 1733 013e FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 1734              	.LVL106:
 1735 0142 F0EE407A 		vmov.f32	s15, s0
 1736              	.LBB648:
 1737              	.LBB644:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1738              		.loc 10 52 20 view .LVU438
 1739 0146 3D4D     		ldr	r5, .L59+104
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1740              		.loc 10 57 20 view .LVU439
 1741 0148 0022     		movs	r2, #0
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1742              		.loc 10 55 20 view .LVU440
 1743 014a 4FF07C53 		mov	r3, #1056964608
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1744              		.loc 10 58 34 view .LVU441
 1745 014e 2846     		mov	r0, r5
 1746 0150 B0EE480A 		vmov.f32	s0, s16
 1747              	.LVL107:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1748              		.loc 10 58 34 view .LVU442
 1749              	.LBE644:
 1750              	.LBI642:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1751              		.loc 10 50 10 is_stmt 1 view .LVU443
 1752              	.LBB645:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1753              		.loc 10 52 9 view .LVU444
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1754              		.loc 10 53 27 is_stmt 0 view .LVU445
 1755 0154 88EEA77A 		vdiv.f32	s14, s17, s15
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1756              		.loc 10 57 20 view .LVU446
 1757 0158 AA61     		str	r2, [r5, #24]	@ float
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1758              		.loc 10 52 20 view .LVU447
 1759 015a C5ED047A 		vstr.32	s15, [r5, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1760              		.loc 10 53 9 is_stmt 1 view .LVU448
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 56


  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1761              		.loc 10 55 20 is_stmt 0 view .LVU449
 1762 015e 6B60     		str	r3, [r5, #4]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1763              		.loc 10 56 20 view .LVU450
 1764 0160 EB60     		str	r3, [r5, #12]	@ float
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1765              		.loc 10 54 20 view .LVU451
 1766 0162 85ED028A 		vstr.32	s16, [r5, #8]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1767              		.loc 10 53 20 view .LVU452
 1768 0166 85ED057A 		vstr.32	s14, [r5, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1769              		.loc 10 54 9 is_stmt 1 view .LVU453
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1770              		.loc 10 55 9 view .LVU454
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1771              		.loc 10 56 9 view .LVU455
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1772              		.loc 10 57 9 view .LVU456
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1773              		.loc 10 58 9 view .LVU457
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1774              		.loc 10 58 34 is_stmt 0 view .LVU458
 1775 016a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1776              	.LVL108:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1777              		.loc 10 61 20 view .LVU459
 1778 016e 40F20113 		movw	r3, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1779              		.loc 10 58 34 view .LVU460
 1780 0172 F0EE407A 		vmov.f32	s15, s0
 1781              	.LBE645:
 1782              	.LBE648:
 1783              	.LBB649:
 1784              	.LBB650:
 1785              		.loc 10 70 34 view .LVU461
 1786 0176 2846     		mov	r0, r5
 1787 0178 B0EE680A 		vmov.f32	s0, s17
 1788              	.LBE650:
 1789              	.LBE649:
 1790              	.LBB654:
 1791              	.LBB646:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1792              		.loc 10 61 20 view .LVU462
 1793 017c 2B85     		strh	r3, [r5, #40]	@ movhi
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1794              		.loc 10 58 20 view .LVU463
 1795 017e C5ED077A 		vstr.32	s15, [r5, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 1796              		.loc 10 59 9 is_stmt 1 view .LVU464
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 1797              		.loc 10 60 9 view .LVU465
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1798              		.loc 10 61 9 view .LVU466
 1799              	.LVL109:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 57


 1800              		.loc 10 61 9 is_stmt 0 view .LVU467
 1801              	.LBE646:
 1802              	.LBE654:
 191:AmpSim.cpp    **** 	time_osc.SetFreq(1.0);
 1803              		.loc 15 191 2 is_stmt 1 view .LVU468
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 1804              		.loc 10 81 9 view .LVU469
 192:AmpSim.cpp    **** 
 1805              		.loc 15 192 2 view .LVU470
 1806              	.LBB655:
 1807              	.LBI649:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 1808              		.loc 10 67 17 view .LVU471
 1809              	.LBB651:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1810              		.loc 10 69 9 view .LVU472
 1811              	.LBE651:
 1812              	.LBE655:
 1813              	.LBB656:
 1814              	.LBB647:
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 1815              		.loc 10 59 20 is_stmt 0 view .LVU473
 1816 0182 2C70     		strb	r4, [r5]
 1817              	.LBE647:
 1818              	.LBE656:
 1819              	.LBB657:
 1820              	.LBB652:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 1821              		.loc 10 69 20 view .LVU474
 1822 0184 C5ED028A 		vstr.32	s17, [r5, #8]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1823              		.loc 10 70 9 is_stmt 1 view .LVU475
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1824              		.loc 10 70 34 is_stmt 0 view .LVU476
 1825 0188 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1826              	.LVL110:
 1827              	.LBE652:
 1828              	.LBE657:
 195:AmpSim.cpp    **** 
 1829              		.loc 15 195 14 view .LVU477
 1830 018c 2C48     		ldr	r0, .L59+108
 1831              	.LBB658:
 1832              	.LBB653:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1833              		.loc 10 70 20 view .LVU478
 1834 018e 85ED070A 		vstr.32	s0, [r5, #28]
 1835              	.LVL111:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 58


  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 1836              		.loc 10 70 20 view .LVU479
 1837              	.LBE653:
 1838              	.LBE658:
 195:AmpSim.cpp    **** 
 1839              		.loc 15 195 2 is_stmt 1 view .LVU480
 195:AmpSim.cpp    **** 
 1840              		.loc 15 195 14 is_stmt 0 view .LVU481
 1841 0192 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 1842              	.LVL112:
 198:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 1843              		.loc 15 198 2 is_stmt 1 view .LVU482
 198:AmpSim.cpp    **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 1844              		.loc 15 198 20 is_stmt 0 view .LVU483
 1845 0196 0F48     		ldr	r0, .L59
 1846 0198 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
 1847              	.LVL113:
 1848 019c FFF7FEFF 		bl	_Z18setFilterConstantsf
 1849              	.LVL114:
 199:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 1850              		.loc 15 199 2 is_stmt 1 view .LVU484
 199:AmpSim.cpp    **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 1851              		.loc 15 199 22 is_stmt 0 view .LVU485
 1852 01a0 3146     		mov	r1, r6
 1853 01a2 0C48     		ldr	r0, .L59
 1854 01a4 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
 1855              	.LVL115:
 200:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
 1856              		.loc 15 200 2 is_stmt 1 view .LVU486
 200:AmpSim.cpp    **** 	hw.StartAudio(AudioCallback);
 1857              		.loc 15 200 23 is_stmt 0 view .LVU487
 1858 01a8 0321     		movs	r1, #3
 1859 01aa 0A48     		ldr	r0, .L59
 1860 01ac FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 1861              	.LVL116:
 201:AmpSim.cpp    **** 	
 1862              		.loc 15 201 2 is_stmt 1 view .LVU488
 201:AmpSim.cpp    **** 	
 1863              		.loc 15 201 15 is_stmt 0 view .LVU489
 1864 01b0 2449     		ldr	r1, .L59+112
 1865 01b2 0848     		ldr	r0, .L59
 1866 01b4 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
 1867              	.LVL117:
 1868              	.L57:
 205:AmpSim.cpp    **** 		hw.ProcessAllControls();
 1869              		.loc 15 205 2 is_stmt 1 discriminator 1 view .LVU490
 206:AmpSim.cpp    **** 		readKnobs();
 1870              		.loc 15 206 3 discriminator 1 view .LVU491
 1871              	.LBB659:
 1872              	.LBI659:
  66:../../libDaisy//src/daisy_patch_sm.h **** 
  67:../../libDaisy//src/daisy_patch_sm.h ****         /** Initializes the memories, and core peripherals for the Daisy Patch SM */
  68:../../libDaisy//src/daisy_patch_sm.h ****         void Init();
  69:../../libDaisy//src/daisy_patch_sm.h **** 
  70:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts a non-interleaving audio callback */
  71:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::AudioCallback cb);
  72:../../libDaisy//src/daisy_patch_sm.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 59


  73:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts an interleaving audio callback */
  74:../../libDaisy//src/daisy_patch_sm.h ****         void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  75:../../libDaisy//src/daisy_patch_sm.h **** 
  76:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  77:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  78:../../libDaisy//src/daisy_patch_sm.h ****          */
  79:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  80:../../libDaisy//src/daisy_patch_sm.h **** 
  81:../../libDaisy//src/daisy_patch_sm.h ****         /** Changes the callback that is executing.
  82:../../libDaisy//src/daisy_patch_sm.h ****          *  This may cause clicks if done while audio is processing.
  83:../../libDaisy//src/daisy_patch_sm.h ****          */
  84:../../libDaisy//src/daisy_patch_sm.h ****         void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  85:../../libDaisy//src/daisy_patch_sm.h **** 
  86:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the transmission of audio. */
  87:../../libDaisy//src/daisy_patch_sm.h ****         void StopAudio();
  88:../../libDaisy//src/daisy_patch_sm.h **** 
  89:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the number of samples processed in an audio callback. 
  90:../../libDaisy//src/daisy_patch_sm.h ****          *  This will only take effect on the next invocation of `StartAudio`
  91:../../libDaisy//src/daisy_patch_sm.h ****          */
  92:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioBlockSize(size_t size);
  93:../../libDaisy//src/daisy_patch_sm.h **** 
  94:../../libDaisy//src/daisy_patch_sm.h ****         /** Sets the samplerate for the audio engine 
  95:../../libDaisy//src/daisy_patch_sm.h ****          *  This will set it to the closest valid samplerate. Options being:
  96:../../libDaisy//src/daisy_patch_sm.h ****          *  8kHz, 16kHz, 32kHz, 48kHz, and 96kHz
  97:../../libDaisy//src/daisy_patch_sm.h ****          */
  98:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(float sr);
  99:../../libDaisy//src/daisy_patch_sm.h **** 
 100:../../libDaisy//src/daisy_patch_sm.h ****         void SetAudioSampleRate(SaiHandle::Config::SampleRate sample_rate);
 101:../../libDaisy//src/daisy_patch_sm.h **** 
 102:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the number of samples processed in an audio callback */
 103:../../libDaisy//src/daisy_patch_sm.h ****         size_t AudioBlockSize();
 104:../../libDaisy//src/daisy_patch_sm.h **** 
 105:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the audio engine's samplerate in Hz */
 106:../../libDaisy//src/daisy_patch_sm.h ****         float AudioSampleRate();
 107:../../libDaisy//src/daisy_patch_sm.h **** 
 108:../../libDaisy//src/daisy_patch_sm.h ****         /** Returns the rate at which the audio callback will be called in Hz */
 109:../../libDaisy//src/daisy_patch_sm.h ****         float AudioCallbackRate();
 110:../../libDaisy//src/daisy_patch_sm.h **** 
 111:../../libDaisy//src/daisy_patch_sm.h ****         /** Starts the Control ADCs 
 112:../../libDaisy//src/daisy_patch_sm.h ****          * 
 113:../../libDaisy//src/daisy_patch_sm.h ****          *  This is started automatically when Init() is called.
 114:../../libDaisy//src/daisy_patch_sm.h ****          */
 115:../../libDaisy//src/daisy_patch_sm.h ****         void StartAdc();
 116:../../libDaisy//src/daisy_patch_sm.h **** 
 117:../../libDaisy//src/daisy_patch_sm.h ****         /** Stops the Control ADCs */
 118:../../libDaisy//src/daisy_patch_sm.h ****         void StopAdc();
 119:../../libDaisy//src/daisy_patch_sm.h **** 
 120:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and filters all of the analog control inputs */
 121:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAnalogControls();
 122:../../libDaisy//src/daisy_patch_sm.h **** 
 123:../../libDaisy//src/daisy_patch_sm.h ****         /** Reads and debounces any of the digital control inputs 
 124:../../libDaisy//src/daisy_patch_sm.h ****          *  This does nothing on this board at this time.
 125:../../libDaisy//src/daisy_patch_sm.h ****          */
 126:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessDigitalControls();
 127:../../libDaisy//src/daisy_patch_sm.h **** 
 128:../../libDaisy//src/daisy_patch_sm.h ****         /** Does both of the above */
 129:../../libDaisy//src/daisy_patch_sm.h ****         void ProcessAllControls()
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 60


 1873              		.loc 4 129 14 discriminator 1 view .LVU492
 1874              	.LBB660:
 130:../../libDaisy//src/daisy_patch_sm.h ****         {
 131:../../libDaisy//src/daisy_patch_sm.h ****             ProcessAnalogControls();
 1875              		.loc 4 131 13 discriminator 1 view .LVU493
 1876              		.loc 4 131 34 is_stmt 0 discriminator 1 view .LVU494
 1877 01b8 0648     		ldr	r0, .L59
 1878 01ba FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
 1879              	.LVL118:
 132:../../libDaisy//src/daisy_patch_sm.h ****             ProcessDigitalControls();
 1880              		.loc 4 132 13 is_stmt 1 discriminator 1 view .LVU495
 1881              		.loc 4 132 35 is_stmt 0 discriminator 1 view .LVU496
 1882 01be 0548     		ldr	r0, .L59
 1883 01c0 FFF7FEFF 		bl	_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
 1884              	.LVL119:
 1885              		.loc 4 132 35 discriminator 1 view .LVU497
 1886              	.LBE660:
 1887              	.LBE659:
 207:AmpSim.cpp    **** 		readButtons();		
 1888              		.loc 15 207 3 is_stmt 1 discriminator 1 view .LVU498
 207:AmpSim.cpp    **** 		readButtons();		
 1889              		.loc 15 207 12 is_stmt 0 discriminator 1 view .LVU499
 1890 01c4 FFF7FEFF 		bl	_Z9readKnobsv
 1891              	.LVL120:
 208:AmpSim.cpp    **** 		led_time_pwm.Update();
 1892              		.loc 15 208 3 is_stmt 1 discriminator 1 view .LVU500
 208:AmpSim.cpp    **** 		led_time_pwm.Update();
 1893              		.loc 15 208 14 is_stmt 0 discriminator 1 view .LVU501
 1894 01c8 FFF7FEFF 		bl	_Z11readButtonsv
 1895              	.LVL121:
 209:AmpSim.cpp    **** 	}
 1896              		.loc 15 209 3 is_stmt 1 discriminator 1 view .LVU502
 209:AmpSim.cpp    **** 	}
 1897              		.loc 15 209 22 is_stmt 0 discriminator 1 view .LVU503
 1898 01cc 1748     		ldr	r0, .L59+88
 1899 01ce FFF7FEFF 		bl	_ZN5daisy3Led6UpdateEv
 1900              	.LVL122:
 205:AmpSim.cpp    **** 		hw.ProcessAllControls();
 1901              		.loc 15 205 2 is_stmt 1 discriminator 1 view .LVU504
 1902 01d2 F1E7     		b	.L57
 1903              	.L60:
 1904              		.align	2
 1905              	.L59:
 1906 01d4 00000000 		.word	.LANCHOR19
 1907 01d8 0000C842 		.word	1120403456
 1908 01dc 00000000 		.word	.LANCHOR3
 1909 01e0 00000000 		.word	.LANCHOR0
 1910 01e4 00000000 		.word	.LANCHOR6
 1911 01e8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM3B10E
 1912 01ec 00000000 		.word	.LANCHOR12
 1913 01f0 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B9E
 1914 01f4 00000000 		.word	.LANCHOR16
 1915 01f8 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2A9E
 1916 01fc 00000000 		.word	.LANCHOR5
 1917 0200 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D3E
 1918 0204 00000000 		.word	.LANCHOR2
 1919 0208 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D4E
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 61


 1920 020c 00000000 		.word	.LANCHOR8
 1921 0210 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2D5E
 1922 0214 00000000 		.word	.LANCHOR9
 1923 0218 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B5E
 1924 021c 00000000 		.word	.LANCHOR15
 1925 0220 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSM2B6E
 1926 0224 00000000 		.word	.LANCHOR14
 1927 0228 00007A44 		.word	1148846080
 1928 022c 00000000 		.word	.LANCHOR34
 1929 0230 0000FE42 		.word	1123942400
 1930 0234 00000000 		.word	.LANCHOR7
 1931 0238 00000000 		.word	.LANCHOR10
 1932 023c 00000000 		.word	.LANCHOR33
 1933 0240 14000000 		.word	.LANCHOR19+20
 1934 0244 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 1935              		.cfi_endproc
 1936              	.LFE4687:
 1938              		.section	.text._Z15GetReverbSampleRfS_,"ax",%progbits
 1939              		.align	1
 1940              		.p2align 2,,3
 1941              		.global	_Z15GetReverbSampleRfS_
 1942              		.syntax unified
 1943              		.thumb
 1944              		.thumb_func
 1945              		.fpu fpv5-d16
 1947              	_Z15GetReverbSampleRfS_:
 1948              	.LVL123:
 1949              	.LFB4691:
 322:AmpSim.cpp    **** 
 323:AmpSim.cpp    **** void GetReverbSample(float &inl, float &inr)
 324:AmpSim.cpp    **** {
 1950              		.loc 15 324 1 view -0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 0, uses_anonymous_args = 0
 1954              		@ link register save eliminated.
 325:AmpSim.cpp    ****     // rev.Process(inl, inr, &inl, &inr);
 326:AmpSim.cpp    **** }
 1955              		.loc 15 326 1 is_stmt 0 view .LVU506
 1956 0000 7047     		bx	lr
 1957              		.cfi_endproc
 1958              	.LFE4691:
 1960 0002 00BF     		.section	.text._Z14GetDelaySampleRfS_,"ax",%progbits
 1961              		.align	1
 1962              		.p2align 2,,3
 1963              		.global	_Z14GetDelaySampleRfS_
 1964              		.syntax unified
 1965              		.thumb
 1966              		.thumb_func
 1967              		.fpu fpv5-d16
 1969              	_Z14GetDelaySampleRfS_:
 1970              	.LVL124:
 1971              	.LFB4692:
 327:AmpSim.cpp    **** 
 328:AmpSim.cpp    **** void GetDelaySample(float &inl, float &inr)
 329:AmpSim.cpp    **** {
 1972              		.loc 15 329 1 is_stmt 1 view -0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 62


 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 330:AmpSim.cpp    ****     fonepole(currentDelay, delayTarget, .00007f);
 1976              		.loc 15 330 5 view .LVU508
 1977              	.LBB675:
 1978              	.LBI675:
 1979              		.file 16 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisySP//Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP//Source/Utility/dsp.h **** #include <random>
  17:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP//Source/Utility/dsp.h **** {
  31:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisySP//Source/Utility/dsp.h **** }
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 63


  50:../../DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  65:../../DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  67:../../DaisySP//Source/Utility/dsp.h **** }
  68:../../DaisySP//Source/Utility/dsp.h **** 
  69:../../DaisySP//Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  70:../../DaisySP//Source/Utility/dsp.h **** Original code by Stefan Stenzel
  71:../../DaisySP//Source/Utility/dsp.h **** These are approximations
  72:../../DaisySP//Source/Utility/dsp.h **** */
  73:../../DaisySP//Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  74:../../DaisySP//Source/Utility/dsp.h **** {
  75:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  76:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  77:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  78:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  79:../../DaisySP//Source/Utility/dsp.h ****     l <<= (n - 1);
  80:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  81:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  82:../../DaisySP//Source/Utility/dsp.h ****     return f;
  83:../../DaisySP//Source/Utility/dsp.h **** }
  84:../../DaisySP//Source/Utility/dsp.h **** 
  85:../../DaisySP//Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  86:../../DaisySP//Source/Utility/dsp.h **** {
  87:../../DaisySP//Source/Utility/dsp.h ****     long *lp, l;
  88:../../DaisySP//Source/Utility/dsp.h ****     lp = (long *)(&f);
  89:../../DaisySP//Source/Utility/dsp.h ****     l  = *lp;
  90:../../DaisySP//Source/Utility/dsp.h ****     l -= 0x3F800000;
  91:../../DaisySP//Source/Utility/dsp.h ****     l >>= (n - 1);
  92:../../DaisySP//Source/Utility/dsp.h ****     l += 0x3F800000;
  93:../../DaisySP//Source/Utility/dsp.h ****     *lp = l;
  94:../../DaisySP//Source/Utility/dsp.h ****     return f;
  95:../../DaisySP//Source/Utility/dsp.h **** }
  96:../../DaisySP//Source/Utility/dsp.h **** 
  97:../../DaisySP//Source/Utility/dsp.h **** /** Significantly more efficient than fmodf(x, 1.0f) for calculating
  98:../../DaisySP//Source/Utility/dsp.h ****  *  the decimal part of a floating point value.
  99:../../DaisySP//Source/Utility/dsp.h ****  */
 100:../../DaisySP//Source/Utility/dsp.h **** inline float fastmod1f(float x)
 101:../../DaisySP//Source/Utility/dsp.h **** {
 102:../../DaisySP//Source/Utility/dsp.h ****     return x - static_cast<int>(x);
 103:../../DaisySP//Source/Utility/dsp.h **** }
 104:../../DaisySP//Source/Utility/dsp.h **** 
 105:../../DaisySP//Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
 106:../../DaisySP//Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 64


 107:../../DaisySP//Source/Utility/dsp.h **** */
 108:../../DaisySP//Source/Utility/dsp.h **** inline float pow10f(float f)
 109:../../DaisySP//Source/Utility/dsp.h **** {
 110:../../DaisySP//Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
 111:../../DaisySP//Source/Utility/dsp.h **** }
 112:../../DaisySP//Source/Utility/dsp.h **** 
 113:../../DaisySP//Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
 114:../../DaisySP//Source/Utility/dsp.h **** About 25% performance increase over std::log10f
 115:../../DaisySP//Source/Utility/dsp.h **** */
 116:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog2f(float f)
 117:../../DaisySP//Source/Utility/dsp.h **** {
 118:../../DaisySP//Source/Utility/dsp.h ****     float frac;
 119:../../DaisySP//Source/Utility/dsp.h ****     int   exp;
 120:../../DaisySP//Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 121:../../DaisySP//Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 122:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 123:../../DaisySP//Source/Utility/dsp.h ****     f += -4.11852516267426f;
 124:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 125:../../DaisySP//Source/Utility/dsp.h ****     f += 6.02197014179219f;
 126:../../DaisySP//Source/Utility/dsp.h ****     f *= frac;
 127:../../DaisySP//Source/Utility/dsp.h ****     f += -3.13396450166353f;
 128:../../DaisySP//Source/Utility/dsp.h ****     f += exp;
 129:../../DaisySP//Source/Utility/dsp.h ****     return (f);
 130:../../DaisySP//Source/Utility/dsp.h **** }
 131:../../DaisySP//Source/Utility/dsp.h **** 
 132:../../DaisySP//Source/Utility/dsp.h **** inline float fastlog10f(float f)
 133:../../DaisySP//Source/Utility/dsp.h **** {
 134:../../DaisySP//Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 135:../../DaisySP//Source/Utility/dsp.h **** }
 136:../../DaisySP//Source/Utility/dsp.h **** 
 137:../../DaisySP//Source/Utility/dsp.h **** /** Midi to frequency helper
 138:../../DaisySP//Source/Utility/dsp.h **** */
 139:../../DaisySP//Source/Utility/dsp.h **** inline float mtof(float m)
 140:../../DaisySP//Source/Utility/dsp.h **** {
 141:../../DaisySP//Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 142:../../DaisySP//Source/Utility/dsp.h **** }
 143:../../DaisySP//Source/Utility/dsp.h **** 
 144:../../DaisySP//Source/Utility/dsp.h **** 
 145:../../DaisySP//Source/Utility/dsp.h **** /** one pole lpf
 146:../../DaisySP//Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 147:../../DaisySP//Source/Utility/dsp.h **** calls to properly filter the signal
 148:../../DaisySP//Source/Utility/dsp.h **** coeff can be calculated:
 149:../../DaisySP//Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 150:../../DaisySP//Source/Utility/dsp.h **** */
 151:../../DaisySP//Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1980              		.loc 16 151 13 view .LVU509
 1981              	.LBB676:
 152:../../DaisySP//Source/Utility/dsp.h **** {
 153:../../DaisySP//Source/Utility/dsp.h ****     out += coeff * (in - out);
 1982              		.loc 16 153 5 view .LVU510
 1983              		.loc 16 153 9 is_stmt 0 view .LVU511
 1984 0000 4D4B     		ldr	r3, .L64
 1985              	.LBE676:
 1986              	.LBE675:
 331:AmpSim.cpp    ****     dlyl.SetDelay(currentDelay);
 332:AmpSim.cpp    ****     dlyr.SetDelay(currentDelay);
 333:AmpSim.cpp    ****     float outl = dlyl.Read();
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 65


 334:AmpSim.cpp    ****     float outr = dlyr.Read();
 335:AmpSim.cpp    **** 
 336:AmpSim.cpp    ****     dlyl.Write((knob_fx_feedback * outl) + inl);
 337:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 1987              		.loc 15 337 46 view .LVU512
 1988 0002 B7EE007A 		vmov.f32	s14, #1.0e+0
 330:AmpSim.cpp    ****     dlyl.SetDelay(currentDelay);
 1989              		.loc 15 330 13 view .LVU513
 1990 0006 4D4A     		ldr	r2, .L64+4
 1991              	.LBB680:
 1992              	.LBB677:
 1993              		.loc 16 153 9 view .LVU514
 1994 0008 D3ED007A 		vldr.32	s15, [r3]
 1995              		.loc 16 153 24 view .LVU515
 1996 000c D2ED006A 		vldr.32	s13, [r2]
 1997              		.loc 16 153 9 view .LVU516
 1998 0010 9FED4B6A 		vldr.32	s12, .L64+8
 1999              		.loc 16 153 24 view .LVU517
 2000 0014 76EEE76A 		vsub.f32	s13, s13, s15
 2001              	.LBE677:
 2002              	.LBE680:
 2003              	.LBB681:
 2004              	.LBB682:
  65:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
  66:../../DaisySP//Source/Utility/delayline.h ****     }
  67:../../DaisySP//Source/Utility/delayline.h **** 
  68:../../DaisySP//Source/Utility/delayline.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  69:../../DaisySP//Source/Utility/delayline.h ****     */
  70:../../DaisySP//Source/Utility/delayline.h ****     inline void Write(const T sample)
  71:../../DaisySP//Source/Utility/delayline.h ****     {
  72:../../DaisySP//Source/Utility/delayline.h ****         line_[write_ptr_] = sample;
  73:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
  74:../../DaisySP//Source/Utility/delayline.h ****     }
  75:../../DaisySP//Source/Utility/delayline.h **** 
  76:../../DaisySP//Source/Utility/delayline.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
  77:../../DaisySP//Source/Utility/delayline.h ****     */
  78:../../DaisySP//Source/Utility/delayline.h ****     inline const T Read() const
  79:../../DaisySP//Source/Utility/delayline.h ****     {
  80:../../DaisySP//Source/Utility/delayline.h ****         T a = line_[(write_ptr_ + delay_) % max_size];
 2005              		.loc 14 80 43 view .LVU518
 2006 0018 4A4A     		ldr	r2, .L64+12
 2007 001a DFF838C1 		ldr	ip, .L64+28
 2008              	.LBE682:
 2009              	.LBE681:
 2010              	.LBB692:
 2011              	.LBB678:
 2012              		.loc 16 153 9 view .LVU519
 2013 001e E6EE867A 		vfma.f32	s15, s13, s12
 2014              	.LBE678:
 2015              	.LBE692:
 329:AmpSim.cpp    ****     fonepole(currentDelay, delayTarget, .00007f);
 2016              		.loc 15 329 1 view .LVU520
 2017 0022 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2018              		.cfi_def_cfa_offset 36
 2019              		.cfi_offset 4, -36
 2020              		.cfi_offset 5, -32
 2021              		.cfi_offset 6, -28
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 66


 2022              		.cfi_offset 7, -24
 2023              		.cfi_offset 8, -20
 2024              		.cfi_offset 9, -16
 2025              		.cfi_offset 10, -12
 2026              		.cfi_offset 11, -8
 2027              		.cfi_offset 14, -4
 2028              	.LBB693:
 2029              	.LBB694:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2030              		.loc 14 64 60 view .LVU521
 2031 0026 484C     		ldr	r4, .L64+16
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2032              		.loc 14 63 27 view .LVU522
 2033 0028 484F     		ldr	r7, .L64+20
  62:../../DaisySP//Source/Utility/delayline.h ****         frac_             = delay - static_cast<float>(int_delay);
 2034              		.loc 14 62 17 view .LVU523
 2035 002a FDEEE76A 		vcvt.s32.f32	s13, s15
 2036              	.LBE694:
 2037              	.LBE693:
 2038              	.LBB698:
 2039              	.LBB679:
 2040              		.loc 16 153 9 view .LVU524
 2041 002e C3ED007A 		vstr.32	s15, [r3]
 2042              	.LVL125:
 2043              		.loc 16 153 9 view .LVU525
 2044              	.LBE679:
 2045              	.LBE698:
 331:AmpSim.cpp    ****     dlyr.SetDelay(currentDelay);
 2046              		.loc 15 331 5 is_stmt 1 view .LVU526
 2047              	.LBB699:
 2048              	.LBI693:
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 2049              		.loc 14 60 17 view .LVU527
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 2050              		.loc 14 60 17 is_stmt 0 view .LVU528
 2051              	.LBE699:
 2052              	.LBB700:
 2053              	.LBB683:
 2054              		.loc 14 80 22 view .LVU529
 2055 0032 7D68     		ldr	r5, [r7, #4]
 2056              	.LBE683:
 2057              	.LBE700:
 2058              	.LBB701:
 2059              	.LBB702:
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2060              		.loc 14 63 27 view .LVU530
 2061 0034 464E     		ldr	r6, .L64+24
 2062              	.LBE702:
 2063              	.LBE701:
 2064              	.LBB705:
 2065              	.LBB695:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2066              		.loc 14 64 60 view .LVU531
 2067 0036 16EE903A 		vmov	r3, s13	@ int
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2068              		.loc 14 63 37 view .LVU532
 2069 003a F8EEE66A 		vcvt.f32.s32	s13, s13
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 67


 2070              	.LVL126:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2071              		.loc 14 64 60 view .LVU533
 2072 003e A342     		cmp	r3, r4
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2073              		.loc 14 63 35 view .LVU534
 2074 0040 77EEE67A 		vsub.f32	s15, s15, s13
 2075              	.LVL127:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2076              		.loc 14 64 60 view .LVU535
 2077 0044 28BF     		it	cs
 2078 0046 2346     		movcs	r3, r4
 2079              	.LVL128:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2080              		.loc 14 64 60 view .LVU536
 2081              	.LBE695:
 2082              	.LBE705:
 2083              	.LBB706:
 2084              	.LBB684:
 2085              		.loc 14 80 33 view .LVU537
 2086 0048 03EB050E 		add	lr, r3, r5
 2087              	.LBE684:
 2088              	.LBE706:
 2089              	.LBB707:
 2090              	.LBB696:
  63:../../DaisySP//Source/Utility/delayline.h ****         delay_ = static_cast<size_t>(int_delay) < max_size ? int_delay
 2091              		.loc 14 63 27 view .LVU538
 2092 004c C7ED007A 		vstr.32	s15, [r7]
 2093              	.LBE696:
 2094              	.LBE707:
 2095              	.LBB708:
 2096              	.LBB703:
 2097 0050 C6ED007A 		vstr.32	s15, [r6]
 2098              	.LBE703:
 2099              	.LBE708:
 2100              	.LBB709:
 2101              	.LBB685:
 2102              		.loc 14 80 43 view .LVU539
 2103 0054 A2FB0EA9 		umull	r10, r9, r2, lr
  81:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2104              		.loc 14 81 42 view .LVU540
 2105 0058 0EF10108 		add	r8, lr, #1
 2106              	.LBE685:
 2107              	.LBE709:
 336:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 2108              		.loc 15 336 15 view .LVU541
 2109 005c D0ED004A 		vldr.32	s9, [r0]
 2110              	.LBB710:
 2111              	.LBB686:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2112              		.loc 14 80 43 view .LVU542
 2113 0060 4FEAD939 		lsr	r9, r9, #15
 2114              	.LBE686:
 2115              	.LBE710:
 2116              	.LBB711:
 2117              	.LBB697:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 68


 2118              		.loc 14 64 16 view .LVU543
 2119 0064 BB60     		str	r3, [r7, #8]
 2120              	.LVL129:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2121              		.loc 14 64 16 view .LVU544
 2122              	.LBE697:
 2123              	.LBE711:
 332:AmpSim.cpp    ****     float outl = dlyl.Read();
 2124              		.loc 15 332 5 is_stmt 1 view .LVU545
 2125              	.LBB712:
 2126              	.LBI701:
  60:../../DaisySP//Source/Utility/delayline.h ****     {
 2127              		.loc 14 60 17 view .LVU546
 2128              	.LBB704:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2129              		.loc 14 64 16 is_stmt 0 view .LVU547
 2130 0066 B360     		str	r3, [r6, #8]
 2131              	.LVL130:
  64:../../DaisySP//Source/Utility/delayline.h ****                                                            : max_size - 1;
 2132              		.loc 14 64 16 view .LVU548
 2133              	.LBE704:
 2134              	.LBE712:
 333:AmpSim.cpp    ****     float outr = dlyr.Read();
 2135              		.loc 15 333 5 is_stmt 1 view .LVU549
 2136              	.LBB713:
 2137              	.LBI681:
  78:../../DaisySP//Source/Utility/delayline.h ****     {
 2138              		.loc 14 78 20 view .LVU550
 2139              	.LBB687:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2140              		.loc 14 80 43 is_stmt 0 view .LVU551
 2141 0068 0CFB19EE 		mls	lr, ip, r9, lr
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2142              		.loc 14 80 11 view .LVU552
 2143 006c 07EB8E0E 		add	lr, r7, lr, lsl #2
 2144 0070 DEED035A 		vldr.32	s11, [lr, #12]
 2145              	.LVL131:
 2146              		.loc 14 81 47 view .LVU553
 2147 0074 A2FB089E 		umull	r9, lr, r2, r8
 2148 0078 4FEADE3E 		lsr	lr, lr, #15
 2149 007c 0CFB1E88 		mls	r8, ip, lr, r8
 2150              	.LVL132:
 2151              		.loc 14 81 47 view .LVU554
 2152              	.LBE687:
 2153              	.LBE713:
 2154              	.LBB714:
 2155              	.LBB715:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2156              		.loc 14 80 22 view .LVU555
 2157 0080 D6F804E0 		ldr	lr, [r6, #4]
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2158              		.loc 14 80 33 view .LVU556
 2159 0084 7344     		add	r3, r3, lr
 2160              	.LVL133:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2161              		.loc 14 80 33 view .LVU557
 2162              	.LBE715:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 69


 2163              	.LBE714:
 2164              	.LBB727:
 2165              	.LBB688:
 2166              		.loc 14 81 11 view .LVU558
 2167 0086 07EB8808 		add	r8, r7, r8, lsl #2
 2168              	.LBE688:
 2169              	.LBE727:
 2170              	.LBB728:
 2171              	.LBB716:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2172              		.loc 14 80 43 view .LVU559
 2173 008a A2FB03BA 		umull	fp, r10, r2, r3
 2174              	.LBE716:
 2175              	.LBE728:
 2176              	.LBB729:
 2177              	.LBB689:
  82:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2178              		.loc 14 82 23 view .LVU560
 2179 008e D8ED036A 		vldr.32	s13, [r8, #12]
 2180              	.LBE689:
 2181              	.LBE729:
 2182              	.LBB730:
 2183              	.LBB717:
  81:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2184              		.loc 14 81 42 view .LVU561
 2185 0092 03F10109 		add	r9, r3, #1
 2186              	.LBE717:
 2187              	.LBE730:
 336:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 2188              		.loc 15 336 34 view .LVU562
 2189 0096 DFF8C080 		ldr	r8, .L64+32
 2190              	.LBB731:
 2191              	.LBB718:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2192              		.loc 14 80 43 view .LVU563
 2193 009a 4FEADA3A 		lsr	r10, r10, #15
 2194              	.LBE718:
 2195              	.LBE731:
 2196              	.LBB732:
 2197              	.LBB690:
 2198              		.loc 14 82 23 view .LVU564
 2199 009e 76EEE56A 		vsub.f32	s13, s13, s11
 2200              	.LBE690:
 2201              	.LBE732:
 336:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 2202              		.loc 15 336 34 view .LVU565
 2203 00a2 98ED005A 		vldr.32	s10, [r8]
 2204              	.LBB733:
 2205              	.LBB719:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2206              		.loc 14 80 43 view .LVU566
 2207 00a6 0CFB1A33 		mls	r3, ip, r10, r3
 2208              	.LBE719:
 2209              	.LBE733:
 2210              	.LBB734:
 2211              	.LBB691:
 2212              		.loc 14 82 30 view .LVU567
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 70


 2213 00aa E7EEA65A 		vfma.f32	s11, s15, s13
 2214              	.LVL134:
 2215              		.loc 14 82 30 view .LVU568
 2216              	.LBE691:
 2217              	.LBE734:
 334:AmpSim.cpp    **** 
 2218              		.loc 15 334 5 is_stmt 1 view .LVU569
 2219              	.LBB735:
 2220              	.LBI714:
  78:../../DaisySP//Source/Utility/delayline.h ****     {
 2221              		.loc 14 78 20 view .LVU570
 2222              	.LBB720:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2223              		.loc 14 80 11 is_stmt 0 view .LVU571
 2224 00ae 06EB8303 		add	r3, r6, r3, lsl #2
 2225              	.LBE720:
 2226              	.LBE735:
 2227              		.loc 15 337 46 view .LVU572
 2228 00b2 37EE456A 		vsub.f32	s12, s14, s10
 2229              	.LBB736:
 2230              	.LBB721:
  80:../../DaisySP//Source/Utility/delayline.h ****         T b = line_[(write_ptr_ + delay_ + 1) % max_size];
 2231              		.loc 14 80 11 view .LVU573
 2232 00b6 D3ED036A 		vldr.32	s13, [r3, #12]
 2233              	.LVL135:
  81:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2234              		.loc 14 81 47 view .LVU574
 2235 00ba A2FB09A3 		umull	r10, r3, r2, r9
 2236 00be DB0B     		lsrs	r3, r3, #15
 2237              	.LBE721:
 2238              	.LBE736:
 336:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 2239              		.loc 15 336 15 view .LVU575
 2240 00c0 E5EE254A 		vfma.f32	s9, s10, s11
 2241              	.LBB737:
 2242              	.LBB722:
  81:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2243              		.loc 14 81 47 view .LVU576
 2244 00c4 0CFB1399 		mls	r9, ip, r3, r9
 2245              	.LBE722:
 2246              	.LBE737:
 2247              	.LBB738:
 2248              	.LBB739:
  72:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2249              		.loc 14 72 27 view .LVU577
 2250 00c8 07EB8503 		add	r3, r7, r5, lsl #2
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2251              		.loc 14 73 45 view .LVU578
 2252 00cc 2544     		add	r5, r5, r4
 2253              	.LBE739:
 2254              	.LBE738:
 2255              	.LBB745:
 2256              	.LBB746:
 2257 00ce 7444     		add	r4, r4, lr
 2258              	.LBE746:
 2259              	.LBE745:
 2260              	.LBB753:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 71


 2261              	.LBB723:
  81:../../DaisySP//Source/Utility/delayline.h ****         return a + (b - a) * frac_;
 2262              		.loc 14 81 11 view .LVU579
 2263 00d0 06EB8909 		add	r9, r6, r9, lsl #2
 2264              	.LBE723:
 2265              	.LBE753:
 2266              	.LBB754:
 2267              	.LBB747:
  72:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2268              		.loc 14 72 27 view .LVU580
 2269 00d4 06EB8E0E 		add	lr, r6, lr, lsl #2
 2270              	.LBE747:
 2271              	.LBE754:
 2272              	.LBB755:
 2273              	.LBB724:
 2274              		.loc 14 82 23 view .LVU581
 2275 00d8 99ED034A 		vldr.32	s8, [r9, #12]
 2276              	.LBE724:
 2277              	.LBE755:
 2278              	.LBB756:
 2279              	.LBB740:
  72:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2280              		.loc 14 72 27 view .LVU582
 2281 00dc C3ED034A 		vstr.32	s9, [r3, #12]
 2282              	.LBE740:
 2283              	.LBE756:
 2284              	.LBB757:
 2285              	.LBB725:
 2286              		.loc 14 82 23 view .LVU583
 2287 00e0 34EE664A 		vsub.f32	s8, s8, s13
 2288              	.LBE725:
 2289              	.LBE757:
 2290              	.LBB758:
 2291              	.LBB741:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2292              		.loc 14 73 57 view .LVU584
 2293 00e4 A2FB0593 		umull	r9, r3, r2, r5
 2294              	.LBE741:
 2295              	.LBE758:
 2296              	.LBB759:
 2297              	.LBB748:
 2298 00e8 A2FB0492 		umull	r9, r2, r2, r4
 2299              	.LBE748:
 2300              	.LBE759:
 2301              	.LBB760:
 2302              	.LBB742:
 2303 00ec DB0B     		lsrs	r3, r3, #15
 2304              	.LBE742:
 2305              	.LBE760:
 2306              	.LBB761:
 2307              	.LBB726:
 2308              		.loc 14 82 30 view .LVU585
 2309 00ee E7EE846A 		vfma.f32	s13, s15, s8
 2310              	.LVL136:
 2311              		.loc 14 82 30 view .LVU586
 2312              	.LBE726:
 2313              	.LBE761:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 72


 336:AmpSim.cpp    ****     inl = (knob_fx_feedback * outl) + ((1.0f - knob_fx_feedback) * inl);
 2314              		.loc 15 336 5 is_stmt 1 view .LVU587
 2315              	.LBB762:
 2316              	.LBI738:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 2317              		.loc 14 70 17 view .LVU588
 2318              	.LBE762:
 2319              		.loc 15 337 66 is_stmt 0 view .LVU589
 2320 00f2 D0ED007A 		vldr.32	s15, [r0]
 2321              	.LBB763:
 2322              	.LBB743:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2323              		.loc 14 73 57 view .LVU590
 2324 00f6 0CFB1355 		mls	r5, ip, r3, r5
 2325              	.LBE743:
 2326              	.LBE763:
 2327              	.LBB764:
 2328              	.LBB749:
 2329 00fa D20B     		lsrs	r2, r2, #15
 2330              	.LBE749:
 2331              	.LBE764:
 2332              		.loc 15 337 66 view .LVU591
 2333 00fc 66EE277A 		vmul.f32	s15, s12, s15
 2334              	.LBB765:
 2335              	.LBB744:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2336              		.loc 14 73 27 view .LVU592
 2337 0100 7D60     		str	r5, [r7, #4]
 2338              	.LVL137:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2339              		.loc 14 73 27 view .LVU593
 2340              	.LBE744:
 2341              	.LBE765:
 2342              		.loc 15 337 5 is_stmt 1 view .LVU594
 2343              	.LBB766:
 2344              	.LBB750:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2345              		.loc 14 73 57 is_stmt 0 view .LVU595
 2346 0102 0CFB1244 		mls	r4, ip, r2, r4
 2347              	.LBE750:
 2348              	.LBE766:
 2349              		.loc 15 337 37 view .LVU596
 2350 0106 E5EE257A 		vfma.f32	s15, s10, s11
 2351              		.loc 15 337 9 view .LVU597
 2352 010a C0ED007A 		vstr.32	s15, [r0]
 338:AmpSim.cpp    **** 
 339:AmpSim.cpp    ****     dlyr.Write((knob_fx_feedback * outr) + inr);
 2353              		.loc 15 339 5 is_stmt 1 view .LVU598
 2354              		.loc 15 339 34 is_stmt 0 view .LVU599
 2355 010e D8ED007A 		vldr.32	s15, [r8]
 2356              		.loc 15 339 15 view .LVU600
 2357 0112 91ED006A 		vldr.32	s12, [r1]
 340:AmpSim.cpp    ****     inr = (knob_fx_feedback * outr) + ((1.0f - knob_fx_feedback) * inr);
 2358              		.loc 15 340 46 view .LVU601
 2359 0116 37EE677A 		vsub.f32	s14, s14, s15
 339:AmpSim.cpp    ****     inr = (knob_fx_feedback * outr) + ((1.0f - knob_fx_feedback) * inr);
 2360              		.loc 15 339 15 view .LVU602
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 73


 2361 011a A7EEA66A 		vfma.f32	s12, s15, s13
 2362              	.LVL138:
 2363              	.LBB767:
 2364              	.LBI745:
  70:../../DaisySP//Source/Utility/delayline.h ****     {
 2365              		.loc 14 70 17 is_stmt 1 view .LVU603
 2366              	.LBB751:
  72:../../DaisySP//Source/Utility/delayline.h ****         write_ptr_        = (write_ptr_ - 1 + max_size) % max_size;
 2367              		.loc 14 72 27 is_stmt 0 view .LVU604
 2368 011e 8EED036A 		vstr.32	s12, [lr, #12]
 2369              	.LBE751:
 2370              	.LBE767:
 2371              		.loc 15 340 66 view .LVU605
 2372 0122 91ED006A 		vldr.32	s12, [r1]
 2373              	.LVL139:
 2374              	.LBB768:
 2375              	.LBB752:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2376              		.loc 14 73 27 view .LVU606
 2377 0126 7460     		str	r4, [r6, #4]
 2378              	.LVL140:
  73:../../DaisySP//Source/Utility/delayline.h ****     }
 2379              		.loc 14 73 27 view .LVU607
 2380              	.LBE752:
 2381              	.LBE768:
 2382              		.loc 15 340 5 is_stmt 1 view .LVU608
 2383              		.loc 15 340 66 is_stmt 0 view .LVU609
 2384 0128 27EE067A 		vmul.f32	s14, s14, s12
 2385              		.loc 15 340 37 view .LVU610
 2386 012c A7EEA67A 		vfma.f32	s14, s15, s13
 2387              		.loc 15 340 9 view .LVU611
 2388 0130 81ED007A 		vstr.32	s14, [r1]
 341:AmpSim.cpp    **** }...
 2389              		.loc 15 341 1 view .LVU612
 2390 0134 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2391              	.L65:
 2392              		.align	2
 2393              	.L64:
 2394 0138 00000000 		.word	.LANCHOR31
 2395 013c 00000000 		.word	.LANCHOR41
 2396 0140 F7CC9238 		.word	949144823
 2397 0144 73B2E745 		.word	1172812403
 2398 0148 BFD40100 		.word	119999
 2399 014c 0C530700 		.word	_ZL4dlyl
 2400 0150 00000000 		.word	_ZL4dlyr
 2401 0154 C0D40100 		.word	120000
 2402 0158 00000000 		.word	.LANCHOR29
 2403              		.cfi_endproc
 2404              	.LFE4692:
 2406              		.section	.text._Z10process_fxRfS_,"ax",%progbits
 2407              		.align	1
 2408              		.p2align 2,,3
 2409              		.global	_Z10process_fxRfS_
 2410              		.syntax unified
 2411              		.thumb
 2412              		.thumb_func
 2413              		.fpu fpv5-d16
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 74


 2415              	_Z10process_fxRfS_:
 2416              	.LVL141:
 2417              	.LFB4686:
 137:AmpSim.cpp    **** void process_fx(float &f1, float &f2) {
 2418              		.loc 15 137 39 is_stmt 1 view -0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 8
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2422              		.loc 15 138 2 view .LVU614
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2423              		.loc 15 138 19 is_stmt 0 view .LVU615
 2424 0000 354B     		ldr	r3, .L75
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2425              		.loc 15 138 16 view .LVU616
 2426 0002 91ED005A 		vldr.32	s10, [r1]
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2427              		.loc 15 138 19 view .LVU617
 2428 0006 93ED007A 		vldr.32	s14, [r3]
 139:AmpSim.cpp    **** 	float verbr = f1 * knob_fx_dry_wet;
 2429              		.loc 15 139 16 view .LVU618
 2430 000a D0ED005A 		vldr.32	s11, [r0]
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2431              		.loc 15 138 19 view .LVU619
 2432 000e 25EE074A 		vmul.f32	s8, s10, s14
 139:AmpSim.cpp    **** 	float verbr = f1 * knob_fx_dry_wet;
 2433              		.loc 15 139 19 view .LVU620
 2434 0012 67EE254A 		vmul.f32	s9, s14, s11
 137:AmpSim.cpp    **** void process_fx(float &f1, float &f2) {
 2435              		.loc 15 137 39 view .LVU621
 2436 0016 70B5     		push	{r4, r5, r6, lr}
 2437              		.cfi_def_cfa_offset 16
 2438              		.cfi_offset 4, -16
 2439              		.cfi_offset 5, -12
 2440              		.cfi_offset 6, -8
 2441              		.cfi_offset 14, -4
 141:AmpSim.cpp    **** 	if (!state_stereo_button)
 2442              		.loc 15 141 6 view .LVU622
 2443 0018 304E     		ldr	r6, .L75+4
 137:AmpSim.cpp    **** void process_fx(float &f1, float &f2) {
 2444              		.loc 15 137 39 view .LVU623
 2445 001a 82B0     		sub	sp, sp, #8
 2446              		.cfi_def_cfa_offset 24
 137:AmpSim.cpp    **** void process_fx(float &f1, float &f2) {
 2447              		.loc 15 137 39 view .LVU624
 2448 001c 0546     		mov	r5, r0
 2449 001e 0C46     		mov	r4, r1
 141:AmpSim.cpp    **** 	if (!state_stereo_button)
 2450              		.loc 15 141 2 view .LVU625
 2451 0020 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 138:AmpSim.cpp    **** 	float verbl = f2 * knob_fx_dry_wet;
 2452              		.loc 15 138 8 view .LVU626
 2453 0022 8DED004A 		vstr.32	s8, [sp]
 139:AmpSim.cpp    **** 	float verbr = f1 * knob_fx_dry_wet;
 2454              		.loc 15 139 2 is_stmt 1 view .LVU627
 139:AmpSim.cpp    **** 	float verbr = f1 * knob_fx_dry_wet;
 2455              		.loc 15 139 8 is_stmt 0 view .LVU628
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 75


 2456 0026 CDED014A 		vstr.32	s9, [sp, #4]
 141:AmpSim.cpp    **** 	if (!state_stereo_button)
 2457              		.loc 15 141 2 is_stmt 1 view .LVU629
 2458 002a 72BB     		cbnz	r2, .L67
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2459              		.loc 15 142 3 view .LVU630
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2460              		.loc 15 142 18 is_stmt 0 view .LVU631
 2461 002c B7EE006B 		vmov.f64	d6, #1.0e+0
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2462              		.loc 15 145 2 view .LVU632
 2463 0030 2B4A     		ldr	r2, .L75+8
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2464              		.loc 15 142 20 view .LVU633
 2465 0032 B7EEC77A 		vcvt.f64.f32	d7, s14
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2466              		.loc 15 142 8 view .LVU634
 2467 0036 B7EEE55A 		vcvt.f64.f32	d5, s11
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2468              		.loc 15 145 2 view .LVU635
 2469 003a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2470              		.loc 15 142 18 view .LVU636
 2471 003c 36EE477B 		vsub.f64	d7, d6, d7
 142:AmpSim.cpp    **** 		f1 = f1 * (1.0 - knob_fx_dry_wet);
 2472              		.loc 15 142 11 view .LVU637
 2473 0040 27EE057B 		vmul.f64	d7, d7, d5
 2474 0044 B7EEC77B 		vcvt.f32.f64	s14, d7
 2475 0048 80ED007A 		vstr.32	s14, [r0]
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2476              		.loc 15 143 2 is_stmt 1 view .LVU638
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2477              		.loc 15 143 19 is_stmt 0 view .LVU639
 2478 004c 93ED005A 		vldr.32	s10, [r3]
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2479              		.loc 15 143 7 view .LVU640
 2480 0050 91ED007A 		vldr.32	s14, [r1]
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2481              		.loc 15 143 19 view .LVU641
 2482 0054 B7EEC55A 		vcvt.f64.f32	d5, s10
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2483              		.loc 15 143 7 view .LVU642
 2484 0058 B7EEC77A 		vcvt.f64.f32	d7, s14
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2485              		.loc 15 143 17 view .LVU643
 2486 005c 36EE456B 		vsub.f64	d6, d6, d5
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2487              		.loc 15 143 10 view .LVU644
 2488 0060 26EE076B 		vmul.f64	d6, d6, d7
 2489 0064 B7EEC66B 		vcvt.f32.f64	s12, d6
 2490 0068 81ED006A 		vstr.32	s12, [r1]
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2491              		.loc 15 145 2 is_stmt 1 view .LVU645
 2492 006c FAB1     		cbz	r2, .L71
 2493              	.LVL142:
 2494              	.L68:
 152:AmpSim.cpp    **** 		f1 += verbl;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 76


 2495              		.loc 15 152 3 view .LVU646
 152:AmpSim.cpp    **** 		f1 += verbl;
 2496              		.loc 15 152 6 is_stmt 0 view .LVU647
 2497 006e D5ED007A 		vldr.32	s15, [r5]
 2498 0072 37EE844A 		vadd.f32	s8, s15, s8
 2499 0076 85ED004A 		vstr.32	s8, [r5]
 153:AmpSim.cpp    **** 	f2 += verbr;
 2500              		.loc 15 153 5 view .LVU648
 2501 007a 94ED007A 		vldr.32	s14, [r4]
 2502              	.L70:
 153:AmpSim.cpp    **** 	f2 += verbr;
 2503              		.loc 15 153 2 is_stmt 1 view .LVU649
 153:AmpSim.cpp    **** 	f2 += verbr;
 2504              		.loc 15 153 5 is_stmt 0 view .LVU650
 2505 007e 34EE877A 		vadd.f32	s14, s9, s14
 2506 0082 84ED007A 		vstr.32	s14, [r4]
 154:AmpSim.cpp    **** }
 2507              		.loc 15 154 1 view .LVU651
 2508 0086 02B0     		add	sp, sp, #8
 2509              		.cfi_remember_state
 2510              		.cfi_def_cfa_offset 16
 2511              		@ sp needed
 2512 0088 70BD     		pop	{r4, r5, r6, pc}
 2513              	.LVL143:
 2514              	.L67:
 2515              		.cfi_restore_state
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2516              		.loc 15 143 2 is_stmt 1 view .LVU652
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2517              		.loc 15 143 19 is_stmt 0 view .LVU653
 2518 008a B7EEC77A 		vcvt.f64.f32	d7, s14
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2519              		.loc 15 145 2 view .LVU654
 2520 008e 144B     		ldr	r3, .L75+8
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2521              		.loc 15 143 17 view .LVU655
 2522 0090 B7EE006B 		vmov.f64	d6, #1.0e+0
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2523              		.loc 15 143 7 view .LVU656
 2524 0094 B7EEC55A 		vcvt.f64.f32	d5, s10
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2525              		.loc 15 145 2 view .LVU657
 2526 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2527              		.loc 15 143 17 view .LVU658
 2528 009a 36EE477B 		vsub.f64	d7, d6, d7
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2529              		.loc 15 143 10 view .LVU659
 2530 009e 27EE057B 		vmul.f64	d7, d7, d5
 2531 00a2 B7EEC77B 		vcvt.f32.f64	s14, d7
 143:AmpSim.cpp    **** 	f2 = f2 * (1.0 - knob_fx_dry_wet);
 2532              		.loc 15 143 5 view .LVU660
 2533 00a6 81ED007A 		vstr.32	s14, [r1]
 145:AmpSim.cpp    **** 	if (state_fx) {		
 2534              		.loc 15 145 2 is_stmt 1 view .LVU661
 2535 00aa 002B     		cmp	r3, #0
 2536 00ac E7D1     		bne	.L70
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 77


 2537              	.L71:
 148:AmpSim.cpp    **** 		GetDelaySample(verbl, verbr);
 2538              		.loc 15 148 3 view .LVU662
 148:AmpSim.cpp    **** 		GetDelaySample(verbl, verbr);
 2539              		.loc 15 148 17 is_stmt 0 view .LVU663
 2540 00ae 01A9     		add	r1, sp, #4
 2541              	.LVL144:
 148:AmpSim.cpp    **** 		GetDelaySample(verbl, verbr);
 2542              		.loc 15 148 17 view .LVU664
 2543 00b0 6846     		mov	r0, sp
 2544              	.LVL145:
 148:AmpSim.cpp    **** 		GetDelaySample(verbl, verbr);
 2545              		.loc 15 148 17 view .LVU665
 2546 00b2 FFF7FEFF 		bl	_Z14GetDelaySampleRfS_
 2547              	.LVL146:
 151:AmpSim.cpp    **** 	if (!state_stereo_button)
 2548              		.loc 15 151 2 is_stmt 1 view .LVU666
 2549 00b6 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2550 00b8 23B9     		cbnz	r3, .L74
 152:AmpSim.cpp    **** 		f1 += verbl;
 2551              		.loc 15 152 6 is_stmt 0 view .LVU667
 2552 00ba 9DED004A 		vldr.32	s8, [sp]
 153:AmpSim.cpp    **** 	f2 += verbr;
 2553              		.loc 15 153 5 view .LVU668
 2554 00be DDED014A 		vldr.32	s9, [sp, #4]
 2555 00c2 D4E7     		b	.L68
 2556              	.L74:
 2557 00c4 94ED007A 		vldr.32	s14, [r4]
 2558 00c8 DDED014A 		vldr.32	s9, [sp, #4]
 153:AmpSim.cpp    **** 	f2 += verbr;
 2559              		.loc 15 153 2 is_stmt 1 view .LVU669
 153:AmpSim.cpp    **** 	f2 += verbr;
 2560              		.loc 15 153 5 is_stmt 0 view .LVU670
 2561 00cc 34EE877A 		vadd.f32	s14, s9, s14
 2562 00d0 84ED007A 		vstr.32	s14, [r4]
 154:AmpSim.cpp    **** }
 2563              		.loc 15 154 1 view .LVU671
 2564 00d4 02B0     		add	sp, sp, #8
 2565              		.cfi_def_cfa_offset 16
 2566              		@ sp needed
 2567 00d6 70BD     		pop	{r4, r5, r6, pc}
 2568              	.LVL147:
 2569              	.L76:
 154:AmpSim.cpp    **** }
 2570              		.loc 15 154 1 view .LVU672
 2571              		.align	2
 2572              	.L75:
 2573 00d8 00000000 		.word	.LANCHOR27
 2574 00dc 00000000 		.word	.LANCHOR13
 2575 00e0 00000000 		.word	.LANCHOR7
 2576              		.cfi_endproc
 2577              	.LFE4686:
 2579              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 2580              		.align	1
 2581              		.p2align 2,,3
 2582              		.global	_Z13AudioCallbackPKPKfPPfj
 2583              		.syntax unified
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 78


 2584              		.thumb
 2585              		.thumb_func
 2586              		.fpu fpv5-d16
 2588              	_Z13AudioCallbackPKPKfPPfj:
 2589              	.LVL148:
 2590              	.LFB4685:
  61:AmpSim.cpp    **** {
 2591              		.loc 15 61 1 is_stmt 1 view -0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 16
 2594              		@ frame_needed = 0, uses_anonymous_args = 0
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2595              		.loc 15 62 2 view .LVU674
 2596              	.LBB787:
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2597              		.loc 15 62 23 view .LVU675
 2598              	.LBE787:
  61:AmpSim.cpp    **** {
 2599              		.loc 15 61 1 is_stmt 0 view .LVU676
 2600 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2601              		.cfi_def_cfa_offset 36
 2602              		.cfi_offset 4, -36
 2603              		.cfi_offset 5, -32
 2604              		.cfi_offset 6, -28
 2605              		.cfi_offset 7, -24
 2606              		.cfi_offset 8, -20
 2607              		.cfi_offset 9, -16
 2608              		.cfi_offset 10, -12
 2609              		.cfi_offset 11, -8
 2610              		.cfi_offset 14, -4
 2611 0004 85B0     		sub	sp, sp, #20
 2612              		.cfi_def_cfa_offset 56
 2613              	.LBB856:
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2614              		.loc 15 62 23 view .LVU677
 2615 0006 0192     		str	r2, [sp, #4]
 2616 0008 002A     		cmp	r2, #0
 2617 000a 00F0F681 		beq	.L77
 2618 000e 8046     		mov	r8, r0
 2619 0010 8946     		mov	r9, r1
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2620              		.loc 15 62 14 view .LVU678
 2621 0012 0025     		movs	r5, #0
 2622 0014 DFF880B3 		ldr	fp, .L113+32
 2623 0018 DFF8BCA3 		ldr	r10, .L113+96
 2624 001c DA4C     		ldr	r4, .L113+16
 2625 001e DB4F     		ldr	r7, .L113+20
 2626 0020 2BE0     		b	.L78
 2627              	.LVL149:
 2628              	.L111:
 2629              	.LBB788:
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2630              		.loc 15 112 4 is_stmt 1 view .LVU679
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2631              		.loc 15 112 4 is_stmt 0 view .LVU680
 2632              	.LBE788:
 2633              	.LBE856:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 79


  31:../../DaisySP//Source/Filters/svf.h ****     /** Initializes the filter
  32:../../DaisySP//Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  33:../../DaisySP//Source/Filters/svf.h ****     */
  34:../../DaisySP//Source/Filters/svf.h ****     void Init(float sample_rate);
  35:../../DaisySP//Source/Filters/svf.h **** 
  36:../../DaisySP//Source/Filters/svf.h **** 
  37:../../DaisySP//Source/Filters/svf.h ****     /** 
  38:../../DaisySP//Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  39:../../DaisySP//Source/Filters/svf.h ****     */
  40:../../DaisySP//Source/Filters/svf.h ****     void Process(float in);
  41:../../DaisySP//Source/Filters/svf.h **** 
  42:../../DaisySP//Source/Filters/svf.h **** 
  43:../../DaisySP//Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  44:../../DaisySP//Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  45:../../DaisySP//Source/Filters/svf.h ****     */
  46:../../DaisySP//Source/Filters/svf.h ****     void SetFreq(float f);
  47:../../DaisySP//Source/Filters/svf.h **** 
  48:../../DaisySP//Source/Filters/svf.h ****     /** sets the resonance of the filter.
  49:../../DaisySP//Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  50:../../DaisySP//Source/Filters/svf.h ****     */
  51:../../DaisySP//Source/Filters/svf.h ****     void SetRes(float r);
  52:../../DaisySP//Source/Filters/svf.h **** 
  53:../../DaisySP//Source/Filters/svf.h ****     /** sets the drive of the filter 
  54:../../DaisySP//Source/Filters/svf.h ****         affects the response of the resonance of the filter
  55:../../DaisySP//Source/Filters/svf.h ****     */
  56:../../DaisySP//Source/Filters/svf.h ****     void SetDrive(float d);
  57:../../DaisySP//Source/Filters/svf.h ****     /** lowpass output
  58:../../DaisySP//Source/Filters/svf.h ****         \return low pass output of the filter
  59:../../DaisySP//Source/Filters/svf.h ****     */
  60:../../DaisySP//Source/Filters/svf.h ****     inline float Low() { return out_low_; }
  61:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
  62:../../DaisySP//Source/Filters/svf.h ****         \return high pass output of the filter
  63:../../DaisySP//Source/Filters/svf.h ****     */
  64:../../DaisySP//Source/Filters/svf.h ****     inline float High() { return out_high_; }
  65:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
  66:../../DaisySP//Source/Filters/svf.h ****         \return band pass output of the filter
  67:../../DaisySP//Source/Filters/svf.h ****     */
  68:../../DaisySP//Source/Filters/svf.h ****     inline float Band() { return out_band_; }
 2634              		.loc 11 68 27 is_stmt 1 view .LVU681
 2635              	.LBB857:
 2636              	.LBB849:
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2637              		.loc 15 114 11 is_stmt 0 view .LVU682
 2638 0022 DB4B     		ldr	r3, .L113+24
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2639              		.loc 15 112 37 view .LVU683
 2640 0024 9DED035A 		vldr.32	s10, [sp, #12]
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2641              		.loc 15 114 11 view .LVU684
 2642 0028 D3ED007A 		vldr.32	s15, [r3]
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2643              		.loc 15 112 37 view .LVU685
 2644 002c B7EEC55A 		vcvt.f64.f32	d5, s10
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2645              		.loc 15 114 11 view .LVU686
 2646 0030 27EE277A 		vmul.f32	s14, s14, s15
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 80


 2647              		.loc 15 114 25 view .LVU687
 2648 0034 9FEDD04B 		vldr.64	d4, .L113
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2649              		.loc 15 114 11 view .LVU688
 2650 0038 B7EEC77A 		vcvt.f64.f32	d7, s14
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2651              		.loc 15 112 35 view .LVU689
 2652 003c 35EE066B 		vadd.f64	d6, d5, d6
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2653              		.loc 15 114 25 view .LVU690
 2654 0040 27EE047B 		vmul.f64	d7, d7, d4
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2655              		.loc 15 112 35 view .LVU691
 2656 0044 B7EEC66B 		vcvt.f32.f64	s12, d6
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2657              		.loc 15 114 25 view .LVU692
 2658 0048 B7EEC77B 		vcvt.f32.f64	s14, d7
 112:AmpSim.cpp    **** 			f2 = AmpBandPass.Band() * -0.8 + f2;
 2659              		.loc 15 112 35 view .LVU693
 2660 004c 8DED036A 		vstr.32	s12, [sp, #12]
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2661              		.loc 15 114 3 is_stmt 1 view .LVU694
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 2662              		.loc 15 114 25 is_stmt 0 view .LVU695
 2663 0050 8DED027A 		vstr.32	s14, [sp, #8]
 115:AmpSim.cpp    **** 		if (!state_stereo_button) 
 2664              		.loc 15 115 3 is_stmt 1 view .LVU696
 2665              	.L90:
 129:AmpSim.cpp    **** 		process_fx(f1, f2);
 2666              		.loc 15 129 3 discriminator 2 view .LVU697
 129:AmpSim.cpp    **** 		process_fx(f1, f2);
 2667              		.loc 15 129 13 is_stmt 0 discriminator 2 view .LVU698
 2668 0054 03A9     		add	r1, sp, #12
 2669 0056 02A8     		add	r0, sp, #8
 2670 0058 FFF7FEFF 		bl	_Z10process_fxRfS_
 2671              	.LVL150:
 132:AmpSim.cpp    **** 		out[0][i] = f1;
 2672              		.loc 15 132 3 is_stmt 1 discriminator 2 view .LVU699
 132:AmpSim.cpp    **** 		out[0][i] = f1;
 2673              		.loc 15 132 13 is_stmt 0 discriminator 2 view .LVU700
 2674 005c D9F80030 		ldr	r3, [r9]
 2675 0060 029A     		ldr	r2, [sp, #8]	@ float
 2676              	.LBE849:
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2677              		.loc 15 62 2 discriminator 2 view .LVU701
 2678 0062 0135     		adds	r5, r5, #1
 2679              	.LVL151:
 2680              	.LBB850:
 132:AmpSim.cpp    **** 		out[0][i] = f1;
 2681              		.loc 15 132 13 discriminator 2 view .LVU702
 2682 0064 3344     		add	r3, r3, r6
 2683 0066 1A60     		str	r2, [r3]	@ float
 133:AmpSim.cpp    **** 		out[1][i] = f2;
 2684              		.loc 15 133 3 is_stmt 1 discriminator 2 view .LVU703
 133:AmpSim.cpp    **** 		out[1][i] = f2;
 2685              		.loc 15 133 13 is_stmt 0 discriminator 2 view .LVU704
 2686 0068 D9F80430 		ldr	r3, [r9, #4]
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 81


 2687 006c 039A     		ldr	r2, [sp, #12]	@ float
 2688 006e 3344     		add	r3, r3, r6
 2689 0070 1A60     		str	r2, [r3]	@ float
 2690              	.LBE850:
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2691              		.loc 15 62 2 is_stmt 1 discriminator 2 view .LVU705
 2692              	.LVL152:
  62:AmpSim.cpp    **** 	for (size_t i = 0; i < size; i++)
 2693              		.loc 15 62 23 discriminator 2 view .LVU706
 2694 0072 019B     		ldr	r3, [sp, #4]
 2695 0074 AB42     		cmp	r3, r5
 2696 0076 00F0C081 		beq	.L77
 2697              	.LVL153:
 2698              	.L78:
 2699              	.LBB851:
  64:AmpSim.cpp    **** 		float f1, f2;
 2700              		.loc 15 64 3 view .LVU707
  65:AmpSim.cpp    **** 		MidBandPass.SetFreq(knob_mid_freq);
 2701              		.loc 15 65 3 view .LVU708
  65:AmpSim.cpp    **** 		MidBandPass.SetFreq(knob_mid_freq);
 2702              		.loc 15 65 22 is_stmt 0 view .LVU709
 2703 007a C64B     		ldr	r3, .L113+28
 2704 007c AE00     		lsls	r6, r5, #2
 2705 007e C648     		ldr	r0, .L113+32
 2706 0080 B3F90030 		ldrsh	r3, [r3]
 2707 0084 00EE103A 		vmov	s0, r3	@ int
 2708 0088 B8EEC00A 		vcvt.f32.s32	s0, s0
 2709 008c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2710              	.LVL154:
  66:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 2711              		.loc 15 66 3 is_stmt 1 view .LVU710
 2712              	.LBB789:
 2713              	.LBI789:
 2714              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 82


  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
 2715              		.loc 17 75 3 view .LVU711
 2716              	.LBB790:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 2717              		.loc 17 76 5 view .LVU712
 2718              		.loc 17 76 31 is_stmt 0 view .LVU713
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 83


 2719 0090 DAED007A 		vldr.32	s15, [r10]
 2720              	.LBE790:
 2721              	.LBE789:
  66:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 2722              		.loc 15 66 21 view .LVU714
 2723 0094 B6EE000A 		vmov.f32	s0, #5.0e-1
 2724 0098 BF48     		ldr	r0, .L113+32
 2725              	.LBB792:
 2726              	.LBB791:
 2727              		.loc 17 76 31 view .LVU715
 2728 009a F0EEE77A 		vabs.f32	s15, s15
 2729              	.LBE791:
 2730              	.LBE792:
  66:AmpSim.cpp    **** 		MidBandPass.SetRes(abs(knob_mid_gain) * 0.5);
 2731              		.loc 15 66 21 view .LVU716
 2732 009e 27EE800A 		vmul.f32	s0, s15, s0
 2733 00a2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2734              	.LVL155:
  67:AmpSim.cpp    **** 		MidBandPass.Process(in[0][i]);
 2735              		.loc 15 67 3 is_stmt 1 view .LVU717
  67:AmpSim.cpp    **** 		MidBandPass.Process(in[0][i]);
 2736              		.loc 15 67 22 is_stmt 0 view .LVU718
 2737 00a6 D8F80030 		ldr	r3, [r8]
 2738 00aa BB48     		ldr	r0, .L113+32
 2739 00ac 03EB8503 		add	r3, r3, r5, lsl #2
 2740 00b0 93ED000A 		vldr.32	s0, [r3]
 2741 00b4 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 2742              	.LVL156:
  68:AmpSim.cpp    **** 		if (state_stereo_button) 
 2743              		.loc 15 68 3 is_stmt 1 view .LVU719
 2744 00b8 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2745 00ba 002B     		cmp	r3, #0
 2746 00bc 40F01C81 		bne	.L109
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2747              		.loc 15 71 3 view .LVU720
 2748              	.LVL157:
 2749              	.LBB793:
 2750              	.LBI793:
 2751              		.loc 11 68 18 view .LVU721
 2752              	.LBB794:
 2753              		.loc 11 68 27 view .LVU722
 2754              		.loc 11 68 27 is_stmt 0 view .LVU723
 2755              	.LBE794:
 2756              	.LBE793:
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2757              		.loc 15 71 58 view .LVU724
 2758 00c0 D8F80030 		ldr	r3, [r8]
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2759              		.loc 15 71 49 view .LVU725
 2760 00c4 B0EE005B 		vmov.f64	d5, #2.0e+0
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2761              		.loc 15 71 27 view .LVU726
 2762 00c8 DBED0E7A 		vldr.32	s15, [fp, #56]
 2763 00cc 9AED006A 		vldr.32	s12, [r10]
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2764              		.loc 15 71 58 view .LVU727
 2765 00d0 3344     		add	r3, r3, r6
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 84


  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2766              		.loc 15 71 27 view .LVU728
 2767 00d2 26EE276A 		vmul.f32	s12, s12, s15
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2768              		.loc 15 71 58 view .LVU729
 2769 00d6 93ED007A 		vldr.32	s14, [r3]
 2770 00da B7EEC77A 		vcvt.f64.f32	d7, s14
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2771              		.loc 15 71 27 view .LVU730
 2772 00de B7EEC66A 		vcvt.f64.f32	d6, s12
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 2773              		.loc 15 71 49 view .LVU731
 2774 00e2 A6EE057B 		vfma.f64	d7, d6, d5
 2775 00e6 B7EEC77B 		vcvt.f32.f64	s14, d7
 2776 00ea 8DED027A 		vstr.32	s14, [sp, #8]
  72:AmpSim.cpp    **** 		if (state_stereo_button) 
 2777              		.loc 15 72 3 is_stmt 1 view .LVU732
 2778              	.L80:
  75:AmpSim.cpp    **** 		Drive.SetDrive(knob_gain);
 2779              		.loc 15 75 3 view .LVU733
  75:AmpSim.cpp    **** 		Drive.SetDrive(knob_gain);
 2780              		.loc 15 75 17 is_stmt 0 view .LVU734
 2781 00ee AB4B     		ldr	r3, .L113+36
 2782 00f0 AB48     		ldr	r0, .L113+40
 2783 00f2 93ED000A 		vldr.32	s0, [r3]
 2784 00f6 FFF7FEFF 		bl	_ZN7daisysp9Overdrive8SetDriveEf
 2785              	.LVL158:
  76:AmpSim.cpp    **** 		f1 = Drive.Process(f1);
 2786              		.loc 15 76 3 is_stmt 1 view .LVU735
  76:AmpSim.cpp    **** 		f1 = Drive.Process(f1);
 2787              		.loc 15 76 21 is_stmt 0 view .LVU736
 2788 00fa 9DED020A 		vldr.32	s0, [sp, #8]
 2789 00fe A848     		ldr	r0, .L113+40
 2790 0100 FFF7FEFF 		bl	_ZN7daisysp9Overdrive7ProcessEf
 2791              	.LVL159:
  77:AmpSim.cpp    **** 		if (state_stereo_button) 
 2792              		.loc 15 77 3 view .LVU737
 2793 0104 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76:AmpSim.cpp    **** 		f1 = Drive.Process(f1);
 2794              		.loc 15 76 6 view .LVU738
 2795 0106 8DED020A 		vstr.32	s0, [sp, #8]
  77:AmpSim.cpp    **** 		if (state_stereo_button) 
 2796              		.loc 15 77 3 is_stmt 1 view .LVU739
 2797 010a 002B     		cmp	r3, #0
 2798 010c 40F02581 		bne	.L110
 2799              	.L81:
  81:AmpSim.cpp    **** 		TrebleBandPass.SetRes(0.2);
 2800              		.loc 15 81 3 view .LVU740
  81:AmpSim.cpp    **** 		TrebleBandPass.SetRes(0.2);
 2801              		.loc 15 81 24 is_stmt 0 view .LVU741
 2802 0110 9FEDA40A 		vldr.32	s0, .L113+44
 2803 0114 A448     		ldr	r0, .L113+48
 2804 0116 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2805              	.LVL160:
  82:AmpSim.cpp    **** 		TrebleBandPass.SetFreq(3500);
 2806              		.loc 15 82 3 is_stmt 1 view .LVU742
  82:AmpSim.cpp    **** 		TrebleBandPass.SetFreq(3500);
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 85


 2807              		.loc 15 82 25 is_stmt 0 view .LVU743
 2808 011a 9FEDA40A 		vldr.32	s0, .L113+52
 2809 011e A248     		ldr	r0, .L113+48
 2810 0120 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2811              	.LVL161:
  83:AmpSim.cpp    **** 		TrebleBandPass.Process(f1);
 2812              		.loc 15 83 3 is_stmt 1 view .LVU744
  83:AmpSim.cpp    **** 		TrebleBandPass.Process(f1);
 2813              		.loc 15 83 25 is_stmt 0 view .LVU745
 2814 0124 9DED020A 		vldr.32	s0, [sp, #8]
 2815 0128 9F48     		ldr	r0, .L113+48
 2816 012a FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 2817              	.LVL162:
  84:AmpSim.cpp    **** 		TrebleBandPass.Process(f2);
 2818              		.loc 15 84 3 is_stmt 1 view .LVU746
  84:AmpSim.cpp    **** 		TrebleBandPass.Process(f2);
 2819              		.loc 15 84 25 is_stmt 0 view .LVU747
 2820 012e 9DED030A 		vldr.32	s0, [sp, #12]
 2821 0132 9D48     		ldr	r0, .L113+48
 2822 0134 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 2823              	.LVL163:
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2824              		.loc 15 85 3 is_stmt 1 view .LVU748
 2825              	.LBB796:
 2826              	.LBI796:
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 2827              		.loc 11 64 18 view .LVU749
 2828              	.LBB797:
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 2829              		.loc 11 64 27 view .LVU750
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 2830              		.loc 11 64 27 is_stmt 0 view .LVU751
 2831              	.LBE797:
 2832              	.LBE796:
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2833              		.loc 15 85 31 view .LVU752
 2834 0138 9D4B     		ldr	r3, .L113+56
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2835              		.loc 15 85 54 view .LVU753
 2836 013a 9DED026A 		vldr.32	s12, [sp, #8]
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2837              		.loc 15 85 31 view .LVU754
 2838 013e 93ED007A 		vldr.32	s14, [r3]
 2839 0142 994B     		ldr	r3, .L113+48
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2840              		.loc 15 85 54 view .LVU755
 2841 0144 B7EEC66A 		vcvt.f64.f32	d6, s12
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2842              		.loc 15 85 31 view .LVU756
 2843 0148 D3ED0D7A 		vldr.32	s15, [r3, #52]
  86:AmpSim.cpp    **** 		if (state_stereo_button) 
 2844              		.loc 15 86 3 view .LVU757
 2845 014c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2846              		.loc 15 85 31 view .LVU758
 2847 014e 27EE277A 		vmul.f32	s14, s14, s15
 2848 0152 B7EEC77A 		vcvt.f64.f32	d7, s14
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 86


  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2849              		.loc 15 85 45 view .LVU759
 2850 0156 37EE077B 		vadd.f64	d7, d7, d7
  85:AmpSim.cpp    **** 		f1 = (TrebleBandPass.High() * knob_treble * 2.0) + f1;
 2851              		.loc 15 85 52 view .LVU760
 2852 015a 36EE076B 		vadd.f64	d6, d6, d7
 2853 015e B7EEC66B 		vcvt.f32.f64	s12, d6
 2854 0162 8DED026A 		vstr.32	s12, [sp, #8]
  86:AmpSim.cpp    **** 		if (state_stereo_button) 
 2855              		.loc 15 86 3 is_stmt 1 view .LVU761
 2856 0166 4BB1     		cbz	r3, .L82
  87:AmpSim.cpp    **** 			f2 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
 2857              		.loc 15 87 4 view .LVU762
 2858              	.LVL164:
  87:AmpSim.cpp    **** 			f2 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
 2859              		.loc 15 87 4 is_stmt 0 view .LVU763
 2860              	.LBE851:
 2861              	.LBE857:
  64:../../DaisySP//Source/Filters/svf.h ****     /** bandpass output
 2862              		.loc 11 64 27 is_stmt 1 view .LVU764
 2863              	.LBB858:
 2864              	.LBB852:
  87:AmpSim.cpp    **** 			f2 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
 2865              		.loc 15 87 55 is_stmt 0 view .LVU765
 2866 0168 9DED036A 		vldr.32	s12, [sp, #12]
 2867 016c B7EEC66A 		vcvt.f64.f32	d6, s12
  87:AmpSim.cpp    **** 			f2 = (TrebleBandPass.High() * knob_treble * 2.0) + f2;
 2868              		.loc 15 87 53 view .LVU766
 2869 0170 36EE077B 		vadd.f64	d7, d6, d7
 2870 0174 B7EEC77B 		vcvt.f32.f64	s14, d7
 2871 0178 8DED037A 		vstr.32	s14, [sp, #12]
 2872              	.L82:
  91:AmpSim.cpp    **** 		BassLowPass.SetRes(0.2);
 2873              		.loc 15 91 3 is_stmt 1 view .LVU767
  91:AmpSim.cpp    **** 		BassLowPass.SetRes(0.2);
 2874              		.loc 15 91 21 is_stmt 0 view .LVU768
 2875 017c 9FED890A 		vldr.32	s0, .L113+44
 2876 0180 8C48     		ldr	r0, .L113+60
 2877 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 2878              	.LVL165:
  92:AmpSim.cpp    **** 		BassLowPass.SetFreq(300); //(bassValue + 0.5) * 10000);
 2879              		.loc 15 92 3 is_stmt 1 view .LVU769
  92:AmpSim.cpp    **** 		BassLowPass.SetFreq(300); //(bassValue + 0.5) * 10000);
 2880              		.loc 15 92 22 is_stmt 0 view .LVU770
 2881 0186 9FED8C0A 		vldr.32	s0, .L113+64
 2882 018a 8A48     		ldr	r0, .L113+60
 2883 018c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2884              	.LVL166:
  93:AmpSim.cpp    **** 		BassLowPass.Process(f1);
 2885              		.loc 15 93 3 is_stmt 1 view .LVU771
  93:AmpSim.cpp    **** 		BassLowPass.Process(f1);
 2886              		.loc 15 93 22 is_stmt 0 view .LVU772
 2887 0190 9DED020A 		vldr.32	s0, [sp, #8]
 2888 0194 8748     		ldr	r0, .L113+60
 2889 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 2890              	.LVL167:
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 87


 2891              		.loc 15 94 3 is_stmt 1 view .LVU773
 2892              	.LBB798:
 2893              	.LBI798:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 2894              		.loc 11 60 18 view .LVU774
 2895              	.LBB799:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 2896              		.loc 11 60 26 view .LVU775
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 2897              		.loc 11 60 26 is_stmt 0 view .LVU776
 2898              	.LBE799:
 2899              	.LBE798:
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2900              		.loc 15 94 26 view .LVU777
 2901 019a 884B     		ldr	r3, .L113+68
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2902              		.loc 15 94 46 view .LVU778
 2903 019c 9DED027A 		vldr.32	s14, [sp, #8]
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2904              		.loc 15 94 26 view .LVU779
 2905 01a0 93ED006A 		vldr.32	s12, [r3]
 2906 01a4 834B     		ldr	r3, .L113+60
 2907 01a6 D3ED0C7A 		vldr.32	s15, [r3, #48]
  95:AmpSim.cpp    **** 		if (state_stereo_button) 
 2908              		.loc 15 95 3 view .LVU780
 2909 01aa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2910              		.loc 15 94 26 view .LVU781
 2911 01ac 26EE276A 		vmul.f32	s12, s12, s15
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2912              		.loc 15 94 46 view .LVU782
 2913 01b0 B7EEC77A 		vcvt.f64.f32	d7, s14
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2914              		.loc 15 94 26 view .LVU783
 2915 01b4 B7EEC66A 		vcvt.f64.f32	d6, s12
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2916              		.loc 15 94 38 view .LVU784
 2917 01b8 36EE066B 		vadd.f64	d6, d6, d6
  94:AmpSim.cpp    **** 		f1 = BassLowPass.Low() * knob_bass * 2.0 + f1;
 2918              		.loc 15 94 44 view .LVU785
 2919 01bc 37EE067B 		vadd.f64	d7, d7, d6
 2920 01c0 B7EEC77B 		vcvt.f32.f64	s14, d7
  95:AmpSim.cpp    **** 		if (state_stereo_button) 
 2921              		.loc 15 95 3 is_stmt 1 view .LVU786
 2922 01c4 002B     		cmp	r3, #0
 2923 01c6 79D0     		beq	.L83
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2924              		.loc 15 96 4 view .LVU787
 2925              	.LVL168:
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2926              		.loc 15 96 4 is_stmt 0 view .LVU788
 2927              	.LBE852:
 2928              	.LBE858:
  60:../../DaisySP//Source/Filters/svf.h ****     /** highpass output
 2929              		.loc 11 60 26 is_stmt 1 view .LVU789
 2930              	.LBB859:
 2931              	.LBB853:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 88


 2932              	.LBB800:
 2933              	.LBB801:
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 2934              		.loc 13 61 13 is_stmt 0 view .LVU790
 2935 01c8 DFED7D4A 		vldr.32	s9, .L113+72
 2936              	.LBE801:
 2937              	.LBE800:
 2938              	.LBB808:
 2939              	.LBB809:
  63:../../DaisySP//Source/Filters/onepole.h ****     }
  64:../../DaisySP//Source/Filters/onepole.h **** 
  65:../../DaisySP//Source/Filters/onepole.h ****     /** Set the filter mode
  66:../../DaisySP//Source/Filters/onepole.h ****     *   \param mode Filter mode. Can be lowpass or highpass
  67:../../DaisySP//Source/Filters/onepole.h ****     */
  68:../../DaisySP//Source/Filters/onepole.h ****     inline void SetFilterMode(FilterMode mode) { mode_ = mode; }
  69:../../DaisySP//Source/Filters/onepole.h **** 
  70:../../DaisySP//Source/Filters/onepole.h ****     /** Process audio through the filter
  71:../../DaisySP//Source/Filters/onepole.h ****     *   \param in The next sample to be processed
  72:../../DaisySP//Source/Filters/onepole.h ****     */
  73:../../DaisySP//Source/Filters/onepole.h ****     inline float Process(float in)
  74:../../DaisySP//Source/Filters/onepole.h ****     {
  75:../../DaisySP//Source/Filters/onepole.h ****         float lp;
  76:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 2940              		.loc 13 76 27 view .LVU791
 2941 01cc D7ED027A 		vldr.32	s15, [r7, #8]
 2942              	.LBE809:
 2943              	.LBE808:
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2944              		.loc 15 96 47 view .LVU792
 2945 01d0 9DED035A 		vldr.32	s10, [sp, #12]
 2946              	.LBB818:
 2947              	.LBB810:
 2948              		.loc 13 76 27 view .LVU793
 2949 01d4 E7EE247A 		vfma.f32	s15, s14, s9
 2950              	.LBE810:
 2951              	.LBE818:
 2952              	.LBB819:
 2953              	.LBB802:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 2954              		.loc 13 62 13 view .LVU794
 2955 01d8 9FED7A4A 		vldr.32	s8, .L113+76
 2956              	.LBE802:
 2957              	.LBE819:
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2958              		.loc 15 96 47 view .LVU795
 2959 01dc B7EEC55A 		vcvt.f64.f32	d5, s10
 2960              	.LBB820:
 2961              	.LBB811:
  77:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
  78:../../DaisySP//Source/Filters/onepole.h **** 
  79:../../DaisySP//Source/Filters/onepole.h ****         switch(mode_)
 2962              		.loc 13 79 16 view .LVU796
 2963 01e0 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2964              	.LBE811:
 2965              	.LBE820:
 2966              	.LBB821:
 2967              	.LBB803:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 89


  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 2968              		.loc 13 61 13 view .LVU797
 2969 01e2 C7ED004A 		vstr.32	s9, [r7]
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 2970              		.loc 13 62 13 view .LVU798
 2971 01e6 87ED014A 		vstr.32	s8, [r7, #4]
 2972              	.LBE803:
 2973              	.LBE821:
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2974              		.loc 15 96 45 view .LVU799
 2975 01ea 35EE066B 		vadd.f64	d6, d5, d6
 2976              	.LBB822:
 2977              	.LBB812:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 2978              		.loc 13 76 16 view .LVU800
 2979 01ee 67EE847A 		vmul.f32	s15, s15, s8
 2980              	.LBE812:
 2981              	.LBE822:
  96:AmpSim.cpp    **** 			f2 = BassLowPass.Low() * knob_bass * 2.0 + f2;
 2982              		.loc 15 96 45 view .LVU801
 2983 01f2 B7EEC66B 		vcvt.f32.f64	s12, d6
 100:AmpSim.cpp    **** 		AmpLowPass.SetFrequency(4100); //(bassValue + 0.5) * 10000);
 2984              		.loc 15 100 3 is_stmt 1 view .LVU802
 2985              	.LVL169:
 2986              	.LBB823:
 2987              	.LBI800:
  56:../../DaisySP//Source/Filters/onepole.h ****     {
 2988              		.loc 13 56 17 view .LVU803
 2989              	.LBB804:
  59:../../DaisySP//Source/Filters/onepole.h **** 
 2990              		.loc 13 59 9 view .LVU804
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 2991              		.loc 13 61 9 view .LVU805
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 2992              		.loc 13 62 9 view .LVU806
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 2993              		.loc 13 62 9 is_stmt 0 view .LVU807
 2994              	.LBE804:
 2995              	.LBE823:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 2996              		.loc 15 101 3 is_stmt 1 view .LVU808
 2997              	.LBB824:
 2998              	.LBI808:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 2999              		.loc 13 73 18 view .LVU809
 3000              	.LBB813:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 3001              		.loc 13 75 9 view .LVU810
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3002              		.loc 13 76 9 view .LVU811
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3003              		.loc 13 77 9 view .LVU812
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3004              		.loc 13 77 27 is_stmt 0 view .LVU813
 3005 01f6 37EE677A 		vsub.f32	s14, s14, s15
 3006              	.LVL170:
  77:../../DaisySP//Source/Filters/onepole.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 90


 3007              		.loc 13 77 33 view .LVU814
 3008 01fa F0EE676A 		vmov.f32	s13, s15
 3009 01fe E7EE246A 		vfma.f32	s13, s14, s9
 3010              		.loc 13 79 9 is_stmt 1 view .LVU815
 3011 0202 002B     		cmp	r3, #0
 3012 0204 00F0FC80 		beq	.L84
 3013 0208 012B     		cmp	r3, #1
 3014 020a 00F0E780 		beq	.L85
  80:../../DaisySP//Source/Filters/onepole.h ****         {
  81:../../DaisySP//Source/Filters/onepole.h ****             case FILTER_MODE_LOW_PASS: return lp;
  82:../../DaisySP//Source/Filters/onepole.h ****             case FILTER_MODE_HIGH_PASS: return in - lp;
  83:../../DaisySP//Source/Filters/onepole.h ****         }
  84:../../DaisySP//Source/Filters/onepole.h **** 
  85:../../DaisySP//Source/Filters/onepole.h ****         return 0.0f;
 3015              		.loc 13 85 9 view .LVU816
 3016              	.LVL171:
 3017              		.loc 13 85 9 is_stmt 0 view .LVU817
 3018              	.LBE813:
 3019              	.LBE824:
 3020              	.LBB825:
 3021              	.LBB826:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3022              		.loc 13 76 27 view .LVU818
 3023 020e E6EE246A 		vfma.f32	s13, s12, s9
 3024              	.LBE826:
 3025              	.LBE825:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3026              		.loc 15 101 6 view .LVU819
 3027 0212 9FED6D7A 		vldr.32	s14, .L113+80
 3028              	.LBB833:
 3029              	.LBB827:
 3030              		.loc 13 85 16 view .LVU820
 3031 0216 F0EE477A 		vmov.f32	s15, s14
 3032              	.LBE827:
 3033              	.LBE833:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3034              		.loc 15 101 6 view .LVU821
 3035 021a 8DED027A 		vstr.32	s14, [sp, #8]
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 3036              		.loc 15 102 3 is_stmt 1 view .LVU822
 103:AmpSim.cpp    **** 			f2 = AmpLowPass.Process(f2);
 3037              		.loc 15 103 4 view .LVU823
 3038              	.LVL172:
 3039              	.LBB834:
 3040              	.LBI825:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 3041              		.loc 13 73 18 view .LVU824
 3042              	.LBB828:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 3043              		.loc 13 75 9 view .LVU825
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3044              		.loc 13 76 9 view .LVU826
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3045              		.loc 13 77 9 view .LVU827
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3046              		.loc 13 77 27 is_stmt 0 view .LVU828
 3047 021e A6EEC46A 		vfms.f32	s12, s13, s8
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 91


  77:../../DaisySP//Source/Filters/onepole.h **** 
 3048              		.loc 13 77 21 view .LVU829
 3049 0222 26EE246A 		vmul.f32	s12, s12, s9
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3050              		.loc 13 77 33 view .LVU830
 3051 0226 A6EE846A 		vfma.f32	s12, s13, s8
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3052              		.loc 13 77 16 view .LVU831
 3053 022a 87ED026A 		vstr.32	s12, [r7, #8]
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3054              		.loc 13 79 9 is_stmt 1 view .LVU832
 3055              	.LVL173:
 3056              	.L94:
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3057              		.loc 13 79 9 is_stmt 0 view .LVU833
 3058              	.LBE828:
 3059              	.LBE834:
 103:AmpSim.cpp    **** 			f2 = AmpLowPass.Process(f2);
 3060              		.loc 15 103 7 view .LVU834
 3061 022e CDED037A 		vstr.32	s15, [sp, #12]
 3062              	.L87:
 106:AmpSim.cpp    **** 		AmpBandPass.SetRes(0.05);
 3063              		.loc 15 106 3 is_stmt 1 view .LVU835
 106:AmpSim.cpp    **** 		AmpBandPass.SetRes(0.05);
 3064              		.loc 15 106 21 is_stmt 0 view .LVU836
 3065 0232 9FED660A 		vldr.32	s0, .L113+84
 3066 0236 6648     		ldr	r0, .L113+88
 3067 0238 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3068              	.LVL174:
 107:AmpSim.cpp    **** 		AmpBandPass.SetDrive(0.2);
 3069              		.loc 15 107 3 is_stmt 1 view .LVU837
 107:AmpSim.cpp    **** 		AmpBandPass.SetDrive(0.2);
 3070              		.loc 15 107 23 is_stmt 0 view .LVU838
 3071 023c 9FED590A 		vldr.32	s0, .L113+44
 3072 0240 6348     		ldr	r0, .L113+88
 3073 0242 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 3074              	.LVL175:
 108:AmpSim.cpp    **** 		AmpBandPass.SetFreq(680);
 3075              		.loc 15 108 3 is_stmt 1 view .LVU839
 108:AmpSim.cpp    **** 		AmpBandPass.SetFreq(680);
 3076              		.loc 15 108 22 is_stmt 0 view .LVU840
 3077 0246 9FED630A 		vldr.32	s0, .L113+92
 3078 024a 6148     		ldr	r0, .L113+88
 3079 024c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3080              	.LVL176:
 109:AmpSim.cpp    **** 		AmpBandPass.Process(f1);
 3081              		.loc 15 109 3 is_stmt 1 view .LVU841
 109:AmpSim.cpp    **** 		AmpBandPass.Process(f1);
 3082              		.loc 15 109 22 is_stmt 0 view .LVU842
 3083 0250 9DED020A 		vldr.32	s0, [sp, #8]
 3084 0254 5E48     		ldr	r0, .L113+88
 3085 0256 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 3086              	.LVL177:
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3087              		.loc 15 110 3 is_stmt 1 view .LVU843
 3088              	.LBB835:
 3089              	.LBI835:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 92


 3090              		.loc 11 68 18 view .LVU844
 3091              	.LBB836:
 3092              		.loc 11 68 27 view .LVU845
 3093              		.loc 11 68 27 is_stmt 0 view .LVU846
 3094              	.LBE836:
 3095              	.LBE835:
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3096              		.loc 15 110 24 view .LVU847
 3097 025a 5D4B     		ldr	r3, .L113+88
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3098              		.loc 15 110 36 view .LVU848
 3099 025c 9DED027A 		vldr.32	s14, [sp, #8]
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3100              		.loc 15 110 24 view .LVU849
 3101 0260 93ED0E6A 		vldr.32	s12, [r3, #56]
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3102              		.loc 15 110 36 view .LVU850
 3103 0264 B7EEC77A 		vcvt.f64.f32	d7, s14
 111:AmpSim.cpp    **** 		if (state_stereo_button) 
 3104              		.loc 15 111 3 view .LVU851
 3105 0268 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3106              		.loc 15 110 24 view .LVU852
 3107 026a B7EEC66A 		vcvt.f64.f32	d6, s12
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3108              		.loc 15 110 27 view .LVU853
 3109 026e 9FED445B 		vldr.64	d5, .L113+8
 3110 0272 26EE056B 		vmul.f64	d6, d6, d5
 110:AmpSim.cpp    **** 		f1 = AmpBandPass.Band() * -0.8 + f1;
 3111              		.loc 15 110 34 view .LVU854
 3112 0276 37EE067B 		vadd.f64	d7, d7, d6
 3113 027a B7EEC77B 		vcvt.f32.f64	s14, d7
 111:AmpSim.cpp    **** 		if (state_stereo_button) 
 3114              		.loc 15 111 3 is_stmt 1 view .LVU855
 3115 027e 002B     		cmp	r3, #0
 3116 0280 7FF4CFAE 		bne	.L111
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3117              		.loc 15 114 3 view .LVU856
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3118              		.loc 15 114 11 is_stmt 0 view .LVU857
 3119 0284 424B     		ldr	r3, .L113+24
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3120              		.loc 15 116 12 view .LVU858
 3121 0286 DDED037A 		vldr.32	s15, [sp, #12]
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3122              		.loc 15 114 11 view .LVU859
 3123 028a 93ED006A 		vldr.32	s12, [r3]
 3124 028e 27EE067A 		vmul.f32	s14, s14, s12
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3125              		.loc 15 116 12 view .LVU860
 3126 0292 26EE276A 		vmul.f32	s12, s12, s15
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3127              		.loc 15 114 25 view .LVU861
 3128 0296 9FED385B 		vldr.64	d5, .L113
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3129              		.loc 15 114 11 view .LVU862
 3130 029a B7EEC77A 		vcvt.f64.f32	d7, s14
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 93


 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3131              		.loc 15 116 12 view .LVU863
 3132 029e B7EEC66A 		vcvt.f64.f32	d6, s12
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3133              		.loc 15 114 25 view .LVU864
 3134 02a2 27EE057B 		vmul.f64	d7, d7, d5
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3135              		.loc 15 116 26 view .LVU865
 3136 02a6 26EE056B 		vmul.f64	d6, d6, d5
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3137              		.loc 15 114 25 view .LVU866
 3138 02aa B7EEC77B 		vcvt.f32.f64	s14, d7
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3139              		.loc 15 116 26 view .LVU867
 3140 02ae B7EEC66B 		vcvt.f32.f64	s12, d6
 114:AmpSim.cpp    **** 		f1 = f1 * knob_volume * 1.2;
 3141              		.loc 15 114 25 view .LVU868
 3142 02b2 8DED027A 		vstr.32	s14, [sp, #8]
 115:AmpSim.cpp    **** 		if (!state_stereo_button) 
 3143              		.loc 15 115 3 is_stmt 1 view .LVU869
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3144              		.loc 15 116 4 view .LVU870
 116:AmpSim.cpp    **** 			f2 = f2 * knob_volume * 1.2;
 3145              		.loc 15 116 26 is_stmt 0 view .LVU871
 3146 02b6 8DED036A 		vstr.32	s12, [sp, #12]
 3147 02ba CBE6     		b	.L90
 3148              	.L83:
 100:AmpSim.cpp    **** 		AmpLowPass.SetFrequency(4100); //(bassValue + 0.5) * 10000);
 3149              		.loc 15 100 3 is_stmt 1 view .LVU872
 3150              	.LVL178:
 3151              	.LBB837:
  56:../../DaisySP//Source/Filters/onepole.h ****     {
 3152              		.loc 13 56 17 view .LVU873
 3153              	.LBB805:
  59:../../DaisySP//Source/Filters/onepole.h **** 
 3154              		.loc 13 59 9 view .LVU874
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 3155              		.loc 13 61 9 view .LVU875
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 3156              		.loc 13 61 13 is_stmt 0 view .LVU876
 3157 02bc DFED406A 		vldr.32	s13, .L113+72
 3158              	.LBE805:
 3159              	.LBE837:
 3160              	.LBB838:
 3161              	.LBB814:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3162              		.loc 13 76 27 view .LVU877
 3163 02c0 D7ED027A 		vldr.32	s15, [r7, #8]
 3164              	.LBE814:
 3165              	.LBE838:
 3166              	.LBB839:
 3167              	.LBB806:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 3168              		.loc 13 62 13 view .LVU878
 3169 02c4 9FED3F6A 		vldr.32	s12, .L113+76
 3170              	.LBE806:
 3171              	.LBE839:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 94


 3172              	.LBB840:
 3173              	.LBB815:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3174              		.loc 13 76 27 view .LVU879
 3175 02c8 E7EE267A 		vfma.f32	s15, s14, s13
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3176              		.loc 13 79 16 view .LVU880
 3177 02cc 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3178              	.LBE815:
 3179              	.LBE840:
 3180              	.LBB841:
 3181              	.LBB807:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 3182              		.loc 13 62 13 view .LVU881
 3183 02ce 87ED016A 		vstr.32	s12, [r7, #4]
  61:../../DaisySP//Source/Filters/onepole.h ****         gi_ = 1.f / (1.f + g_);
 3184              		.loc 13 61 13 view .LVU882
 3185 02d2 C7ED006A 		vstr.32	s13, [r7]
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 3186              		.loc 13 62 9 is_stmt 1 view .LVU883
 3187              	.LVL179:
  62:../../DaisySP//Source/Filters/onepole.h ****     }
 3188              		.loc 13 62 9 is_stmt 0 view .LVU884
 3189              	.LBE807:
 3190              	.LBE841:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3191              		.loc 15 101 3 is_stmt 1 view .LVU885
 3192              	.LBB842:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 3193              		.loc 13 73 18 view .LVU886
 3194              	.LBB816:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 3195              		.loc 13 75 9 view .LVU887
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3196              		.loc 13 76 9 view .LVU888
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3197              		.loc 13 76 16 is_stmt 0 view .LVU889
 3198 02d6 67EE867A 		vmul.f32	s15, s15, s12
 3199              	.LVL180:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3200              		.loc 13 77 9 is_stmt 1 view .LVU890
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3201              		.loc 13 77 27 is_stmt 0 view .LVU891
 3202 02da 37EE677A 		vsub.f32	s14, s14, s15
 3203              	.LVL181:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3204              		.loc 13 77 33 view .LVU892
 3205 02de B0EE676A 		vmov.f32	s12, s15
 3206 02e2 A7EE266A 		vfma.f32	s12, s14, s13
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3207              		.loc 13 77 16 view .LVU893
 3208 02e6 87ED026A 		vstr.32	s12, [r7, #8]
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3209              		.loc 13 79 9 is_stmt 1 view .LVU894
 3210 02ea 002B     		cmp	r3, #0
 3211 02ec 3ED0     		beq	.L91
 3212 02ee 012B     		cmp	r3, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 95


 3213 02f0 39D1     		bne	.L112
 3214              	.LVL182:
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3215              		.loc 13 79 9 is_stmt 0 view .LVU895
 3216              	.LBE816:
 3217              	.LBE842:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3218              		.loc 15 101 6 view .LVU896
 3219 02f2 8DED027A 		vstr.32	s14, [sp, #8]
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 3220              		.loc 15 102 3 is_stmt 1 view .LVU897
 3221 02f6 9CE7     		b	.L87
 3222              	.L109:
  69:AmpSim.cpp    **** 			MidBandPass.Process(in[1][i]);
 3223              		.loc 15 69 4 view .LVU898
  69:AmpSim.cpp    **** 			MidBandPass.Process(in[1][i]);
 3224              		.loc 15 69 23 is_stmt 0 view .LVU899
 3225 02f8 D8F80430 		ldr	r3, [r8, #4]
 3226 02fc 2648     		ldr	r0, .L113+32
 3227 02fe 3344     		add	r3, r3, r6
 3228 0300 93ED000A 		vldr.32	s0, [r3]
 3229 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 3230              	.LVL183:
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3231              		.loc 15 71 27 view .LVU900
 3232 0308 DBED0E7A 		vldr.32	s15, [fp, #56]
 3233 030c 9AED007A 		vldr.32	s14, [r10]
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3234              		.loc 15 71 58 view .LVU901
 3235 0310 D8F80030 		ldr	r3, [r8]
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3236              		.loc 15 71 27 view .LVU902
 3237 0314 27EE277A 		vmul.f32	s14, s14, s15
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3238              		.loc 15 71 58 view .LVU903
 3239 0318 3344     		add	r3, r3, r6
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3240              		.loc 15 71 27 view .LVU904
 3241 031a B7EEC77A 		vcvt.f64.f32	d7, s14
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3242              		.loc 15 71 58 view .LVU905
 3243 031e 93ED006A 		vldr.32	s12, [r3]
  72:AmpSim.cpp    **** 		if (state_stereo_button) 
 3244              		.loc 15 72 3 view .LVU906
 3245 0322 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3246              		.loc 15 71 3 is_stmt 1 view .LVU907
 3247              	.LVL184:
 3248              	.LBB843:
 3249              		.loc 11 68 18 view .LVU908
 3250              	.LBB795:
 3251              		.loc 11 68 27 view .LVU909
 3252              		.loc 11 68 27 is_stmt 0 view .LVU910
 3253              	.LBE795:
 3254              	.LBE843:
  72:AmpSim.cpp    **** 		if (state_stereo_button) 
 3255              		.loc 15 72 3 is_stmt 1 view .LVU911
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 96


  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3256              		.loc 15 71 58 is_stmt 0 view .LVU912
 3257 0324 B7EEC66A 		vcvt.f64.f32	d6, s12
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3258              		.loc 15 71 43 view .LVU913
 3259 0328 37EE077B 		vadd.f64	d7, d7, d7
  71:AmpSim.cpp    **** 		f1 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[0][i]; //add bandpass to dry signal in +/- to 
 3260              		.loc 15 71 49 view .LVU914
 3261 032c 36EE076B 		vadd.f64	d6, d6, d7
 3262 0330 B7EEC66B 		vcvt.f32.f64	s12, d6
 3263 0334 8DED026A 		vstr.32	s12, [sp, #8]
  72:AmpSim.cpp    **** 		if (state_stereo_button) 
 3264              		.loc 15 72 3 view .LVU915
 3265 0338 002B     		cmp	r3, #0
 3266 033a 3FF4D8AE 		beq	.L80
  73:AmpSim.cpp    **** 			f2 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[1][i]; //add bandpass to dry signal in +/- to
 3267              		.loc 15 73 4 is_stmt 1 view .LVU916
 3268              	.LVL185:
  73:AmpSim.cpp    **** 			f2 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[1][i]; //add bandpass to dry signal in +/- to
 3269              		.loc 15 73 4 is_stmt 0 view .LVU917
 3270              	.LBE853:
 3271              	.LBE859:
 3272              		.loc 11 68 27 is_stmt 1 view .LVU918
 3273              	.LBB860:
 3274              	.LBB854:
  73:AmpSim.cpp    **** 			f2 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[1][i]; //add bandpass to dry signal in +/- to
 3275              		.loc 15 73 59 is_stmt 0 view .LVU919
 3276 033e D8F80430 		ldr	r3, [r8, #4]
 3277 0342 3344     		add	r3, r3, r6
 3278 0344 93ED006A 		vldr.32	s12, [r3]
 3279 0348 B7EEC66A 		vcvt.f64.f32	d6, s12
  73:AmpSim.cpp    **** 			f2 = MidBandPass.Band() * knob_mid_gain * 2.0 + in[1][i]; //add bandpass to dry signal in +/- to
 3280              		.loc 15 73 50 view .LVU920
 3281 034c 36EE077B 		vadd.f64	d7, d6, d7
 3282 0350 B7EEC77B 		vcvt.f32.f64	s14, d7
 3283 0354 8DED037A 		vstr.32	s14, [sp, #12]
 3284 0358 C9E6     		b	.L80
 3285              	.L110:
  78:AmpSim.cpp    **** 			f1 = Drive.Process(f1);
 3286              		.loc 15 78 4 is_stmt 1 view .LVU921
  78:AmpSim.cpp    **** 			f1 = Drive.Process(f1);
 3287              		.loc 15 78 22 is_stmt 0 view .LVU922
 3288 035a 1148     		ldr	r0, .L113+40
 3289 035c FFF7FEFF 		bl	_ZN7daisysp9Overdrive7ProcessEf
 3290              	.LVL186:
  78:AmpSim.cpp    **** 			f1 = Drive.Process(f1);
 3291              		.loc 15 78 7 view .LVU923
 3292 0360 8DED020A 		vstr.32	s0, [sp, #8]
 3293 0364 D4E6     		b	.L81
 3294              	.LVL187:
 3295              	.L112:
 3296              	.LBB844:
 3297              	.LBB817:
 3298              		.loc 13 85 9 is_stmt 1 view .LVU924
 3299              		.loc 13 85 9 is_stmt 0 view .LVU925
 3300              	.LBE817:
 3301              	.LBE844:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 97


 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3302              		.loc 15 101 6 view .LVU926
 3303 0366 0023     		movs	r3, #0
 3304 0368 0293     		str	r3, [sp, #8]	@ float
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 3305              		.loc 15 102 3 is_stmt 1 view .LVU927
 3306 036a 62E7     		b	.L87
 3307              	.LVL188:
 3308              	.L91:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3309              		.loc 15 101 6 is_stmt 0 view .LVU928
 3310 036c CDED027A 		vstr.32	s15, [sp, #8]
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 3311              		.loc 15 102 3 is_stmt 1 view .LVU929
 3312 0370 5FE7     		b	.L87
 3313              	.L114:
 3314 0372 00BFAFF3 		.align	3
 3314      0080
 3315              	.L113:
 3316 0378 33333333 		.word	858993459
 3317 037c 3333F33F 		.word	1072902963
 3318 0380 9A999999 		.word	-1717986918
 3319 0384 9999E9BF 		.word	-1075209831
 3320 0388 00000000 		.word	.LANCHOR13
 3321 038c 00000000 		.word	.LANCHOR35
 3322 0390 00000000 		.word	.LANCHOR21
 3323 0394 00000000 		.word	.LANCHOR23
 3324 0398 00000000 		.word	.LANCHOR39
 3325 039c 00000000 		.word	.LANCHOR20
 3326 03a0 00000000 		.word	.LANCHOR40
 3327 03a4 CDCC4C3E 		.word	1045220557
 3328 03a8 00000000 		.word	.LANCHOR37
 3329 03ac 00C05A45 		.word	1163575296
 3330 03b0 00000000 		.word	.LANCHOR22
 3331 03b4 00000000 		.word	.LANCHOR38
 3332 03b8 00009643 		.word	1133903872
 3333 03bc 00000000 		.word	.LANCHOR25
 3334 03c0 5F33D442 		.word	1121203039
 3335 03c4 61FA183C 		.word	1008269921
 3336 03c8 00000000 		.word	0
 3337 03cc CDCC4C3D 		.word	1028443341
 3338 03d0 00000000 		.word	.LANCHOR36
 3339 03d4 00002A44 		.word	1143603200
 3340 03d8 00000000 		.word	.LANCHOR24
 3341              	.LVL189:
 3342              	.L85:
 3343              	.LBB845:
 3344              	.LBB829:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3345              		.loc 13 76 27 is_stmt 0 view .LVU930
 3346 03dc E6EE246A 		vfma.f32	s13, s12, s9
 3347              	.LBE829:
 3348              	.LBE845:
 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3349              		.loc 15 101 6 view .LVU931
 3350 03e0 8DED027A 		vstr.32	s14, [sp, #8]
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 98


 3351              		.loc 15 102 3 is_stmt 1 view .LVU932
 103:AmpSim.cpp    **** 			f2 = AmpLowPass.Process(f2);
 3352              		.loc 15 103 4 view .LVU933
 3353              	.LVL190:
 3354              	.LBB846:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 3355              		.loc 13 73 18 view .LVU934
 3356              	.LBB830:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 3357              		.loc 13 75 9 view .LVU935
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3358              		.loc 13 76 9 view .LVU936
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3359              		.loc 13 77 9 view .LVU937
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3360              		.loc 13 77 27 is_stmt 0 view .LVU938
 3361 03e4 F0EE467A 		vmov.f32	s15, s12
 3362 03e8 E6EEC47A 		vfms.f32	s15, s13, s8
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3363              		.loc 13 77 21 view .LVU939
 3364 03ec 27EEA46A 		vmul.f32	s12, s15, s9
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3365              		.loc 13 77 33 view .LVU940
 3366 03f0 A6EE846A 		vfma.f32	s12, s13, s8
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3367              		.loc 13 77 16 view .LVU941
 3368 03f4 87ED026A 		vstr.32	s12, [r7, #8]
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3369              		.loc 13 79 9 is_stmt 1 view .LVU942
 3370 03f8 19E7     		b	.L94
 3371              	.LVL191:
 3372              	.L77:
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3373              		.loc 13 79 9 is_stmt 0 view .LVU943
 3374              	.LBE830:
 3375              	.LBE846:
 3376              	.LBE854:
 3377              	.LBE860:
 135:AmpSim.cpp    **** }
 3378              		.loc 15 135 1 view .LVU944
 3379 03fa 05B0     		add	sp, sp, #20
 3380              		.cfi_remember_state
 3381              		.cfi_def_cfa_offset 36
 3382              		@ sp needed
 3383 03fc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3384              	.LVL192:
 3385              	.L84:
 3386              		.cfi_restore_state
 3387              	.LBB861:
 3388              	.LBB855:
 3389              	.LBB847:
 3390              	.LBB831:
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3391              		.loc 13 76 27 view .LVU945
 3392 0400 E6EE246A 		vfma.f32	s13, s12, s9
 3393              	.LBE831:
 3394              	.LBE847:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 99


 101:AmpSim.cpp    **** 		f1 = AmpLowPass.Process(f1);
 3395              		.loc 15 101 6 view .LVU946
 3396 0404 CDED027A 		vstr.32	s15, [sp, #8]
 102:AmpSim.cpp    **** 		if (state_stereo_button) 
 3397              		.loc 15 102 3 is_stmt 1 view .LVU947
 103:AmpSim.cpp    **** 			f2 = AmpLowPass.Process(f2);
 3398              		.loc 15 103 4 view .LVU948
 3399              	.LVL193:
 3400              	.LBB848:
  73:../../DaisySP//Source/Filters/onepole.h ****     {
 3401              		.loc 13 73 18 view .LVU949
 3402              	.LBB832:
  75:../../DaisySP//Source/Filters/onepole.h ****         lp     = (g_ * in + state_) * gi_;
 3403              		.loc 13 75 9 view .LVU950
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3404              		.loc 13 76 9 view .LVU951
  76:../../DaisySP//Source/Filters/onepole.h ****         state_ = g_ * (in - lp) + lp;
 3405              		.loc 13 76 16 is_stmt 0 view .LVU952
 3406 0408 66EE847A 		vmul.f32	s15, s13, s8
 3407              	.LVL194:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3408              		.loc 13 77 9 is_stmt 1 view .LVU953
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3409              		.loc 13 77 27 is_stmt 0 view .LVU954
 3410 040c 36EE676A 		vsub.f32	s12, s12, s15
 3411              	.LVL195:
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3412              		.loc 13 77 33 view .LVU955
 3413 0410 B0EE677A 		vmov.f32	s14, s15
 3414 0414 A6EE247A 		vfma.f32	s14, s12, s9
  77:../../DaisySP//Source/Filters/onepole.h **** 
 3415              		.loc 13 77 16 view .LVU956
 3416 0418 87ED027A 		vstr.32	s14, [r7, #8]
  79:../../DaisySP//Source/Filters/onepole.h ****         {
 3417              		.loc 13 79 9 is_stmt 1 view .LVU957
 3418 041c 07E7     		b	.L94
 3419              	.LBE832:
 3420              	.LBE848:
 3421              	.LBE855:
 3422              	.LBE861:
 3423              		.cfi_endproc
 3424              	.LFE4685:
 3426 041e 00BF     		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 3427              		.align	1
 3428              		.p2align 2,,3
 3429              		.syntax unified
 3430              		.thumb
 3431              		.thumb_func
 3432              		.fpu fpv5-d16
 3434              	_GLOBAL__sub_I_hw:
 3435              	.LFB5266:
 3436              		.loc 15 341 1 view -0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 0
 3439              		@ frame_needed = 0, uses_anonymous_args = 0
 3440              	.LBB1008:
 3441              	.LBI1008:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 100


 3442              		.loc 15 341 1 view .LVU959
 3443              	.LVL196:
 3444              	.LBB1009:
 3445              	.LBB1010:
 3446              	.LBI1010:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 3447              		.loc 4 64 9 view .LVU960
 3448              	.LBB1011:
 3449              	.LBB1012:
 3450              	.LBI1012:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 3451              		.loc 9 96 5 view .LVU961
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 3452              		.loc 9 96 5 is_stmt 0 view .LVU962
 3453              	.LBE1012:
 3454              	.LBB1013:
 3455              	.LBI1013:
 3456              		.file 18 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 101


  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 102


  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 103


 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 3457              		.loc 18 166 5 is_stmt 1 view .LVU963
 3458              		.loc 18 166 5 is_stmt 0 view .LVU964
 3459              	.LBE1013:
 3460              	.LBB1016:
 3461              	.LBI1016:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 3462              		.loc 8 95 5 is_stmt 1 view .LVU965
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 3463              		.loc 8 95 5 is_stmt 0 view .LVU966
 3464              	.LBE1016:
 3465              	.LBB1019:
 3466              	.LBI1019:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 3467              		.loc 7 109 5 is_stmt 1 view .LVU967
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 3468              		.loc 7 109 5 is_stmt 0 view .LVU968
 3469              	.LBE1019:
 3470              	.LBB1020:
 3471              	.LBI1020:
  40:../../libDaisy//src/hid/usb.h **** 
 3472              		.loc 6 40 5 is_stmt 1 view .LVU969
  40:../../libDaisy//src/hid/usb.h **** 
 3473              		.loc 6 40 5 is_stmt 0 view .LVU970
 3474              	.LBE1020:
 3475              	.LBB1021:
 3476              	.LBI1021:
  28:../../libDaisy//src/dev/codec_pcm3060.h ****     ~Pcm3060() {}
 3477              		.loc 5 28 5 is_stmt 1 view .LVU971
 3478              	.LBB1022:
 3479              	.LBB1023:
 3480              	.LBI1023:
 3481              		.file 19 "../../libDaisy//src/per/i2c.h"
   1:../../libDaisy//src/per/i2c.h **** #pragma once
   2:../../libDaisy//src/per/i2c.h **** #include "daisy_core.h"
   3:../../libDaisy//src/per/i2c.h **** 
   4:../../libDaisy//src/per/i2c.h **** namespace daisy
   5:../../libDaisy//src/per/i2c.h **** {
   6:../../libDaisy//src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libDaisy//src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libDaisy//src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libDaisy//src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libDaisy//src/per/i2c.h ****  *  
  11:../../libDaisy//src/per/i2c.h ****  *      // setup the configuration
  12:../../libDaisy//src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 104


  13:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libDaisy//src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libDaisy//src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libDaisy//src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libDaisy//src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libDaisy//src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libDaisy//src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libDaisy//src/per/i2c.h ****  */
  24:../../libDaisy//src/per/i2c.h **** class I2CHandle
  25:../../libDaisy//src/per/i2c.h **** {
  26:../../libDaisy//src/per/i2c.h ****   public:
  27:../../libDaisy//src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libDaisy//src/per/i2c.h ****     struct Config
  29:../../libDaisy//src/per/i2c.h ****     {
  30:../../libDaisy//src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libDaisy//src/per/i2c.h ****         enum class Mode
  32:../../libDaisy//src/per/i2c.h ****         {
  33:../../libDaisy//src/per/i2c.h ****             I2C_MASTER,
  34:../../libDaisy//src/per/i2c.h ****             I2C_SLAVE,
  35:../../libDaisy//src/per/i2c.h ****         };
  36:../../libDaisy//src/per/i2c.h **** 
  37:../../libDaisy//src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libDaisy//src/per/i2c.h ****         enum class Peripheral
  39:../../libDaisy//src/per/i2c.h ****         {
  40:../../libDaisy//src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libDaisy//src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libDaisy//src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libDaisy//src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libDaisy//src/per/i2c.h ****         };
  45:../../libDaisy//src/per/i2c.h **** 
  46:../../libDaisy//src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libDaisy//src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libDaisy//src/per/i2c.h ****          */
  49:../../libDaisy//src/per/i2c.h ****         enum class Speed
  50:../../libDaisy//src/per/i2c.h ****         {
  51:../../libDaisy//src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libDaisy//src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libDaisy//src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libDaisy//src/per/i2c.h ****         };
  55:../../libDaisy//src/per/i2c.h **** 
  56:../../libDaisy//src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libDaisy//src/per/i2c.h ****         struct
  58:../../libDaisy//src/per/i2c.h ****         {
  59:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libDaisy//src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libDaisy//src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libDaisy//src/per/i2c.h **** 
  63:../../libDaisy//src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libDaisy//src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libDaisy//src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libDaisy//src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libDaisy//src/per/i2c.h ****     };
  68:../../libDaisy//src/per/i2c.h **** 
  69:../../libDaisy//src/per/i2c.h ****     /** Return values for I2C functions. */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 105


  70:../../libDaisy//src/per/i2c.h ****     enum class Result
  71:../../libDaisy//src/per/i2c.h ****     {
  72:../../libDaisy//src/per/i2c.h ****         OK, /**< & */
  73:../../libDaisy//src/per/i2c.h ****         ERR /**< & */
  74:../../libDaisy//src/per/i2c.h ****     };
  75:../../libDaisy//src/per/i2c.h **** 
  76:../../libDaisy//src/per/i2c.h ****     enum class Direction
  77:../../libDaisy//src/per/i2c.h ****     {
  78:../../libDaisy//src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libDaisy//src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libDaisy//src/per/i2c.h ****     };
  81:../../libDaisy//src/per/i2c.h **** 
  82:../../libDaisy//src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 3482              		.loc 19 82 5 view .LVU972
 3483              		.loc 19 82 5 is_stmt 0 view .LVU973
 3484              	.LBE1023:
 3485              	.LBE1022:
 3486              	.LBE1021:
 3487              	.LBB1028:
 3488              	.LBI1028:
 3489              		.file 20 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 106


  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 3490              		.loc 20 84 5 is_stmt 1 view .LVU974
 3491              		.loc 20 84 5 is_stmt 0 view .LVU975
 3492              	.LBE1028:
 3493              	.LBE1011:
 3494              	.LBE1010:
 3495              	.LBE1009:
 3496              	.LBE1008:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 3497              		.loc 4 64 24 is_stmt 1 view .LVU976
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 107


 3498              	.LBB1217:
 3499              	.LBB1214:
 3500              	.LBB1070:
 3501              	.LBB1065:
 3502              	.LBB1031:
 3503              	.LBI1031:
  18:../../libDaisy//src/hid/gatein.h **** 
 3504              		.loc 2 18 5 view .LVU977
 3505              	.LBB1032:
 3506              	.LBB1033:
 3507              	.LBI1033:
 3508              		.file 21 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 108


  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 3509              		.loc 21 74 5 view .LVU978
 3510              	.LBB1034:
 3511              	.LBB1035:
 3512              	.LBI1035:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3513              		.loc 21 68 9 view .LVU979
 3514              	.LBB1036:
 3515              	.LBB1037:
 3516              	.LBB1038:
 3517              	.LBI1038:
 3518              		.file 22 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 109


  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 110


  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 111


 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 112


 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 113


 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 3519              		.loc 22 272 15 view .LVU980
 3520              		.loc 22 272 15 is_stmt 0 view .LVU981
 3521              	.LBE1038:
 3522              	.LBE1037:
 3523              	.LBE1036:
 3524              	.LBE1035:
 3525              	.LBE1034:
 3526              	.LBE1033:
 3527              	.LBE1032:
 3528              	.LBE1031:
 3529              	.LBB1045:
 3530              	.LBI1045:
  18:../../libDaisy//src/hid/gatein.h **** 
 3531              		.loc 2 18 5 is_stmt 1 view .LVU982
 3532              	.LBB1046:
 3533              	.LBB1047:
 3534              	.LBI1047:
 3535              		.loc 21 74 5 view .LVU983
 3536              	.LBB1048:
 3537              	.LBB1049:
 3538              	.LBI1049:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3539              		.loc 21 68 9 view .LVU984
 3540              	.LBB1050:
 3541              	.LBB1051:
 3542              	.LBB1052:
 3543              	.LBI1052:
 3544              		.loc 22 272 15 view .LVU985
 3545              		.loc 22 272 15 is_stmt 0 view .LVU986
 3546              	.LBE1052:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 114


 3547              	.LBE1051:
 3548              	.LBE1050:
 3549              	.LBE1049:
 3550              	.LBE1048:
 3551              	.LBE1047:
 3552              	.LBE1046:
 3553              	.LBE1045:
 3554              	.LBE1065:
 3555              	.LBE1070:
 3556              	.LBE1214:
 3557              	.LBE1217:
 3558              		.loc 15 341 1 view .LVU987
 3559 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3560              		.cfi_def_cfa_offset 24
 3561              		.cfi_offset 4, -24
 3562              		.cfi_offset 5, -20
 3563              		.cfi_offset 6, -16
 3564              		.cfi_offset 7, -12
 3565              		.cfi_offset 8, -8
 3566              		.cfi_offset 14, -4
 3567              	.LBB1218:
 3568              	.LBB1215:
 3569              	.LBB1071:
 3570              	.LBB1066:
 3571              	.LBB1059:
 3572              	.LBB1014:
 3573              	.LBB1015:
 3574              		.loc 18 166 34 view .LVU988
 3575 0004 4848     		ldr	r0, .L117
 3576 0006 0024     		movs	r4, #0
 3577              	.LBE1015:
 3578              	.LBE1014:
 3579              	.LBE1059:
 3580              	.LBE1066:
 3581              	.LBE1071:
  22:AmpSim.cpp    **** DaisyPatchSM hw;
 3582              		.loc 15 22 14 view .LVU989
 3583 0008 484D     		ldr	r5, .L117+4
 3584              	.LBB1072:
 3585              	.LBB1067:
  64:../../libDaisy//src/daisy_patch_sm.h ****         ~DaisyPatchSM() {}
 3586              		.loc 4 64 24 view .LVU990
 3587 000a 4FF60B76 		movw	r6, #65291
 3588              	.LBE1067:
 3589              	.LBE1072:
  26:AmpSim.cpp    **** static Svf BassLowPass;
 3590              		.loc 15 26 12 view .LVU991
 3591 000e 484F     		ldr	r7, .L117+8
  22:AmpSim.cpp    **** DaisyPatchSM hw;
 3592              		.loc 15 22 14 view .LVU992
 3593 0010 2A46     		mov	r2, r5
 3594 0012 4849     		ldr	r1, .L117+12
 3595              	.LBB1073:
 3596              	.LBB1068:
 3597              	.LBB1060:
 3598              	.LBB1027:
 3599              	.LBB1026:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 115


 3600              	.LBB1024:
 3601              	.LBB1025:
 3602              		.loc 19 82 33 view .LVU993
 3603 0014 0462     		str	r4, [r0, #32]
 3604              	.LBE1025:
 3605              	.LBE1024:
 3606              	.LBE1026:
 3607              	.LBE1027:
 3608              	.LBE1060:
 3609              	.LBB1061:
 3610              	.LBB1029:
 3611              	.LBB1030:
 3612              		.loc 20 84 33 view .LVU994
 3613 0016 8462     		str	r4, [r0, #40]
 3614              	.LBE1030:
 3615              	.LBE1029:
 3616              	.LBE1061:
 3617              	.LBE1068:
 3618              	.LBE1073:
  33:AmpSim.cpp    **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dlyl;
 3619              		.loc 15 33 50 view .LVU995
 3620 0018 DFF88C81 		ldr	r8, .L117+128
 3621              	.LBB1074:
 3622              	.LBB1069:
 3623              	.LBB1062:
 3624              	.LBB1017:
 3625              	.LBB1018:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 3626              		.loc 8 95 35 view .LVU996
 3627 001c C0E90344 		strd	r4, r4, [r0, #12]
 3628              	.LBE1018:
 3629              	.LBE1017:
 3630              	.LBE1062:
 3631              	.LBB1063:
 3632              	.LBB1044:
 3633              	.LBB1043:
 3634              	.LBB1042:
 3635              	.LBB1041:
 3636              	.LBB1040:
 3637              	.LBB1039:
  69:../../libDaisy//src/per/gpio.h ****         {
 3638              		.loc 21 69 73 view .LVU997
 3639 0020 C0E96C64 		strd	r6, r4, [r0, #432]
 3640 0024 C0E96E44 		strd	r4, r4, [r0, #440]
 3641              	.LBE1039:
 3642              	.LBE1040:
 3643              	.LBE1041:
 3644              	.LBE1042:
 3645              	.LBE1043:
 3646              	.LBE1044:
 3647              	.LBE1063:
 3648              	.LBB1064:
 3649              	.LBB1058:
 3650              	.LBB1057:
 3651              	.LBB1056:
 3652              	.LBB1055:
 3653              	.LBB1054:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 116


 3654              	.LBB1053:
 3655 0028 C0E97264 		strd	r6, r4, [r0, #456]
 3656 002c C0E97444 		strd	r4, r4, [r0, #464]
 3657              	.LVL197:
  69:../../libDaisy//src/per/gpio.h ****         {
 3658              		.loc 21 69 73 view .LVU998
 3659              	.LBE1053:
 3660              	.LBE1054:
 3661              	.LBE1055:
 3662              	.LBE1056:
 3663              	.LBE1057:
 3664              	.LBE1058:
 3665              	.LBE1064:
 3666              	.LBE1069:
 3667              	.LBE1074:
  22:AmpSim.cpp    **** DaisyPatchSM hw;
 3668              		.loc 15 22 14 view .LVU999
 3669 0030 FFF7FEFF 		bl	__aeabi_atexit
 3670              	.LVL198:
 3671              	.LBB1075:
 3672              	.LBI1075:
  29:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 3673              		.loc 13 29 5 is_stmt 1 view .LVU1000
  29:../../DaisySP//Source/Filters/onepole.h ****     ~OnePole() {}
 3674              		.loc 13 29 5 is_stmt 0 view .LVU1001
 3675              	.LBE1075:
  25:AmpSim.cpp    **** static OnePole AmpLowPass;
 3676              		.loc 15 25 16 view .LVU1002
 3677 0034 2A46     		mov	r2, r5
 3678 0036 4049     		ldr	r1, .L117+16
 3679 0038 4048     		ldr	r0, .L117+20
 3680 003a FFF7FEFF 		bl	__aeabi_atexit
 3681              	.LVL199:
 3682              	.LBB1076:
 3683              	.LBI1076:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3684              		.loc 11 29 5 is_stmt 1 view .LVU1003
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3685              		.loc 11 29 5 is_stmt 0 view .LVU1004
 3686              	.LBE1076:
  26:AmpSim.cpp    **** static Svf BassLowPass;
 3687              		.loc 15 26 12 view .LVU1005
 3688 003e 2A46     		mov	r2, r5
 3689 0040 3946     		mov	r1, r7
 3690 0042 3F48     		ldr	r0, .L117+24
 3691 0044 FFF7FEFF 		bl	__aeabi_atexit
 3692              	.LVL200:
 3693              	.LBB1077:
 3694              	.LBI1077:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3695              		.loc 11 29 5 is_stmt 1 view .LVU1006
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3696              		.loc 11 29 5 is_stmt 0 view .LVU1007
 3697              	.LBE1077:
  27:AmpSim.cpp    **** static Svf    AmpBandPass;
 3698              		.loc 15 27 15 view .LVU1008
 3699 0048 2A46     		mov	r2, r5
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 117


 3700 004a 3946     		mov	r1, r7
 3701 004c 3D48     		ldr	r0, .L117+28
 3702 004e FFF7FEFF 		bl	__aeabi_atexit
 3703              	.LVL201:
 3704              	.LBB1078:
 3705              	.LBI1078:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3706              		.loc 11 29 5 is_stmt 1 view .LVU1009
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3707              		.loc 11 29 5 is_stmt 0 view .LVU1010
 3708              	.LBE1078:
  28:AmpSim.cpp    **** static Svf    TrebleBandPass;
 3709              		.loc 15 28 15 view .LVU1011
 3710 0052 2A46     		mov	r2, r5
 3711 0054 3946     		mov	r1, r7
 3712 0056 3C48     		ldr	r0, .L117+32
 3713 0058 FFF7FEFF 		bl	__aeabi_atexit
 3714              	.LVL202:
 3715              	.LBB1079:
 3716              	.LBI1079:
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3717              		.loc 11 29 5 is_stmt 1 view .LVU1012
  29:../../DaisySP//Source/Filters/svf.h ****     ~Svf() {}
 3718              		.loc 11 29 5 is_stmt 0 view .LVU1013
 3719              	.LBE1079:
  29:AmpSim.cpp    **** static Svf    MidBandPass;
 3720              		.loc 15 29 15 view .LVU1014
 3721 005c 2A46     		mov	r2, r5
 3722 005e 3946     		mov	r1, r7
 3723 0060 3A48     		ldr	r0, .L117+36
 3724 0062 FFF7FEFF 		bl	__aeabi_atexit
 3725              	.LVL203:
 3726              	.LBB1080:
 3727              	.LBI1080:
  31:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 3728              		.loc 12 31 5 is_stmt 1 view .LVU1015
  31:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 3729              		.loc 12 31 5 is_stmt 0 view .LVU1016
 3730              	.LBE1080:
  30:AmpSim.cpp    **** static Overdrive Drive;
 3731              		.loc 15 30 18 view .LVU1017
 3732 0066 2A46     		mov	r2, r5
 3733 0068 3949     		ldr	r1, .L117+40
 3734 006a 3A48     		ldr	r0, .L117+44
 3735 006c FFF7FEFF 		bl	__aeabi_atexit
 3736              	.LVL204:
 3737              	.LBB1081:
 3738              	.LBI1081:
  31:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3739              		.loc 14 31 5 is_stmt 1 view .LVU1018
  31:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3740              		.loc 14 31 5 is_stmt 0 view .LVU1019
 3741              	.LBE1081:
  39:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 3742              		.loc 15 39 8 view .LVU1020
 3743 0070 394F     		ldr	r7, .L117+48
  33:AmpSim.cpp    **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dlyl;
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 118


 3744              		.loc 15 33 50 view .LVU1021
 3745 0072 2A46     		mov	r2, r5
 3746 0074 4146     		mov	r1, r8
 3747 0076 3948     		ldr	r0, .L117+52
 3748 0078 FFF7FEFF 		bl	__aeabi_atexit
 3749              	.LVL205:
 3750              	.LBB1082:
 3751              	.LBI1082:
  31:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3752              		.loc 14 31 5 is_stmt 1 view .LVU1022
  31:../../DaisySP//Source/Utility/delayline.h ****     ~DelayLine() {}
 3753              		.loc 14 31 5 is_stmt 0 view .LVU1023
 3754              	.LBE1082:
  34:AmpSim.cpp    **** static DelayLine<float, MAX_DELAY> DSY_SDRAM_BSS dlyr;
 3755              		.loc 15 34 50 view .LVU1024
 3756 007c 2A46     		mov	r2, r5
 3757 007e 4146     		mov	r1, r8
 3758 0080 3748     		ldr	r0, .L117+56
 3759 0082 FFF7FEFF 		bl	__aeabi_atexit
 3760              	.LVL206:
 3761              	.LBB1083:
 3762              	.LBI1083:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3763              		.loc 1 41 5 is_stmt 1 view .LVU1025
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3764              		.loc 1 41 5 is_stmt 0 view .LVU1026
 3765              	.LBE1083:
  39:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 3766              		.loc 15 39 8 view .LVU1027
 3767 0086 2A46     		mov	r2, r5
 3768 0088 3946     		mov	r1, r7
 3769 008a 3648     		ldr	r0, .L117+60
 3770 008c FFF7FEFF 		bl	__aeabi_atexit
 3771              	.LVL207:
 3772              	.LBB1084:
 3773              	.LBI1084:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3774              		.loc 1 41 5 is_stmt 1 view .LVU1028
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3775              		.loc 1 41 5 is_stmt 0 view .LVU1029
 3776              	.LBE1084:
  39:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 3777              		.loc 15 39 21 view .LVU1030
 3778 0090 2A46     		mov	r2, r5
 3779 0092 3946     		mov	r1, r7
 3780 0094 3448     		ldr	r0, .L117+64
 3781 0096 FFF7FEFF 		bl	__aeabi_atexit
 3782              	.LVL208:
 3783              	.LBB1085:
 3784              	.LBI1085:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3785              		.loc 1 41 5 is_stmt 1 view .LVU1031
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 3786              		.loc 1 41 5 is_stmt 0 view .LVU1032
 3787              	.LBE1085:
  39:AmpSim.cpp    **** Switch button_link, button_blend, button_fx; // button_stereo, button_cv;
 3788              		.loc 15 39 35 view .LVU1033
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 119


 3789 009a 2A46     		mov	r2, r5
 3790 009c 3946     		mov	r1, r7
 3791 009e 3348     		ldr	r0, .L117+68
 3792 00a0 FFF7FEFF 		bl	__aeabi_atexit
 3793              	.LVL209:
 3794              	.LBB1086:
 3795              	.LBI1086:
 3796              		.loc 21 74 5 is_stmt 1 view .LVU1034
 3797              	.LBB1087:
 3798              	.LBB1088:
 3799              	.LBI1088:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3800              		.loc 21 68 9 view .LVU1035
 3801              	.LBB1089:
 3802              	.LBB1090:
 3803              	.LBB1091:
 3804              	.LBI1091:
 3805              		.loc 22 272 15 view .LVU1036
 3806              		.loc 22 272 15 is_stmt 0 view .LVU1037
 3807              	.LBE1091:
 3808              	.LBE1090:
 3809              	.LBE1089:
 3810              	.LBE1088:
 3811              	.LBE1087:
 3812              	.LBE1086:
 3813              	.LBB1097:
 3814              	.LBB1098:
 3815              		.loc 21 74 12 view .LVU1038
 3816 00a4 324B     		ldr	r3, .L117+72
 3817              	.LBE1098:
 3818              	.LBE1097:
 3819              	.LBB1108:
 3820              	.LBB1095:
 3821 00a6 334A     		ldr	r2, .L117+76
 3822              	.LBE1095:
 3823              	.LBE1108:
  43:AmpSim.cpp    **** Led led_time_pwm;
 3824              		.loc 15 43 5 view .LVU1039
 3825 00a8 3349     		ldr	r1, .L117+80
 3826 00aa 3448     		ldr	r0, .L117+84
 3827              	.LBB1109:
 3828              	.LBB1106:
 3829              	.LBB1099:
 3830              	.LBB1100:
 3831              	.LBB1101:
  69:../../libDaisy//src/per/gpio.h ****         {
 3832              		.loc 21 69 73 view .LVU1040
 3833 00ac C3E90064 		strd	r6, r4, [r3]
 3834 00b0 C3E90244 		strd	r4, r4, [r3, #8]
 3835              	.LBE1101:
 3836              	.LBE1100:
 3837              	.LBE1099:
 3838              	.LBE1106:
 3839              	.LBE1109:
 3840              	.LBB1110:
 3841              	.LBB1111:
 3842              		.loc 21 74 12 view .LVU1041
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 120


 3843 00b4 324B     		ldr	r3, .L117+88
 3844              	.LBE1111:
 3845              	.LBE1110:
 3846              	.LBB1121:
 3847              	.LBB1096:
 3848              	.LBB1094:
 3849              	.LBB1093:
 3850              	.LBB1092:
  69:../../libDaisy//src/per/gpio.h ****         {
 3851              		.loc 21 69 73 view .LVU1042
 3852 00b6 C2E90064 		strd	r6, r4, [r2]
 3853 00ba C2E90244 		strd	r4, r4, [r2, #8]
 3854              	.LVL210:
  69:../../libDaisy//src/per/gpio.h ****         {
 3855              		.loc 21 69 73 view .LVU1043
 3856              	.LBE1092:
 3857              	.LBE1093:
 3858              	.LBE1094:
 3859              	.LBE1096:
 3860              	.LBE1121:
 3861              	.LBB1122:
 3862              	.LBI1097:
 3863              		.loc 21 74 5 is_stmt 1 view .LVU1044
 3864              	.LBB1107:
 3865              	.LBB1105:
 3866              	.LBI1099:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3867              		.loc 21 68 9 view .LVU1045
 3868              	.LBB1104:
 3869              	.LBB1103:
 3870              	.LBB1102:
 3871              	.LBI1102:
 3872              		.loc 22 272 15 view .LVU1046
 3873              		.loc 22 272 15 is_stmt 0 view .LVU1047
 3874              	.LBE1102:
 3875              	.LBE1103:
 3876              	.LBE1104:
 3877              	.LBE1105:
 3878              	.LBE1107:
 3879              	.LBE1122:
 3880              	.LBB1123:
 3881              	.LBI1123:
 3882              		.loc 21 74 5 is_stmt 1 view .LVU1048
 3883              	.LBB1124:
 3884              	.LBB1125:
 3885              	.LBI1125:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3886              		.loc 21 68 9 view .LVU1049
 3887              	.LBB1126:
 3888              	.LBB1127:
 3889              	.LBB1128:
 3890              	.LBI1128:
 3891              		.loc 22 272 15 view .LVU1050
 3892              		.loc 22 272 15 is_stmt 0 view .LVU1051
 3893              	.LBE1128:
 3894              	.LBE1127:
 3895              	.LBE1126:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 121


 3896              	.LBE1125:
 3897              	.LBE1124:
 3898              	.LBE1123:
 3899              	.LBB1134:
 3900              	.LBB1119:
 3901              	.LBB1112:
 3902              	.LBB1113:
 3903              	.LBB1114:
  69:../../libDaisy//src/per/gpio.h ****         {
 3904              		.loc 21 69 73 view .LVU1052
 3905 00be C3E90064 		strd	r6, r4, [r3]
 3906 00c2 C3E90244 		strd	r4, r4, [r3, #8]
 3907              	.LBE1114:
 3908              	.LBE1113:
 3909              	.LBE1112:
 3910              	.LBE1119:
 3911              	.LBE1134:
 3912              	.LBB1135:
 3913              	.LBB1132:
 3914              		.loc 21 74 12 view .LVU1053
 3915 00c6 2F4A     		ldr	r2, .L117+92
 3916              	.LBE1132:
 3917              	.LBE1135:
 3918              	.LBB1136:
 3919              	.LBB1137:
 3920 00c8 2F4B     		ldr	r3, .L117+96
 3921              	.LBE1137:
 3922              	.LBE1136:
 3923              	.LBB1147:
 3924              	.LBB1133:
 3925              	.LBB1131:
 3926              	.LBB1130:
 3927              	.LBB1129:
  69:../../libDaisy//src/per/gpio.h ****         {
 3928              		.loc 21 69 73 view .LVU1054
 3929 00ca C2E90064 		strd	r6, r4, [r2]
 3930 00ce C2E90244 		strd	r4, r4, [r2, #8]
 3931              	.LVL211:
  69:../../libDaisy//src/per/gpio.h ****         {
 3932              		.loc 21 69 73 view .LVU1055
 3933              	.LBE1129:
 3934              	.LBE1130:
 3935              	.LBE1131:
 3936              	.LBE1133:
 3937              	.LBE1147:
 3938              	.LBB1148:
 3939              	.LBI1110:
 3940              		.loc 21 74 5 is_stmt 1 view .LVU1056
 3941              	.LBB1120:
 3942              	.LBB1118:
 3943              	.LBI1112:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3944              		.loc 21 68 9 view .LVU1057
 3945              	.LBB1117:
 3946              	.LBB1116:
 3947              	.LBB1115:
 3948              	.LBI1115:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 122


 3949              		.loc 22 272 15 view .LVU1058
 3950              		.loc 22 272 15 is_stmt 0 view .LVU1059
 3951              	.LBE1115:
 3952              	.LBE1116:
 3953              	.LBE1117:
 3954              	.LBE1118:
 3955              	.LBE1120:
 3956              	.LBE1148:
 3957              	.LBB1149:
 3958              	.LBI1149:
 3959              		.loc 21 74 5 is_stmt 1 view .LVU1060
 3960              	.LBB1150:
 3961              	.LBB1151:
 3962              	.LBI1151:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 3963              		.loc 21 68 9 view .LVU1061
 3964              	.LBB1152:
 3965              	.LBB1153:
 3966              	.LBB1154:
 3967              	.LBI1154:
 3968              		.loc 22 272 15 view .LVU1062
 3969              		.loc 22 272 15 is_stmt 0 view .LVU1063
 3970              	.LBE1154:
 3971              	.LBE1153:
 3972              	.LBE1152:
 3973              	.LBE1151:
 3974              	.LBE1150:
 3975              	.LBE1149:
 3976              	.LBB1164:
 3977              	.LBB1145:
 3978              	.LBB1138:
 3979              	.LBB1139:
 3980              	.LBB1140:
  69:../../libDaisy//src/per/gpio.h ****         {
 3981              		.loc 21 69 73 view .LVU1064
 3982 00d2 C3E90064 		strd	r6, r4, [r3]
 3983 00d6 C3E90244 		strd	r4, r4, [r3, #8]
 3984              	.LBE1140:
 3985              	.LBE1139:
 3986              	.LBE1138:
 3987              	.LBE1145:
 3988              	.LBE1164:
 3989              	.LBB1165:
 3990              	.LBB1161:
 3991              		.loc 21 74 12 view .LVU1065
 3992 00da 2C4A     		ldr	r2, .L117+100
 3993              	.LBE1161:
 3994              	.LBE1165:
 3995              	.LBB1166:
 3996              	.LBB1167:
 3997 00dc 2C4B     		ldr	r3, .L117+104
 3998              	.LBE1167:
 3999              	.LBE1166:
 4000              	.LBB1177:
 4001              	.LBB1162:
 4002              	.LBB1159:
 4003              	.LBB1157:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 123


 4004              	.LBB1155:
  69:../../libDaisy//src/per/gpio.h ****         {
 4005              		.loc 21 69 73 view .LVU1066
 4006 00de C2E90064 		strd	r6, r4, [r2]
 4007              	.LBE1155:
 4008              	.LBE1157:
 4009              	.LBE1159:
 4010              	.LBE1162:
 4011              	.LBE1177:
 4012              	.LBB1178:
 4013              	.LBB1175:
 4014              	.LBB1168:
 4015              	.LBB1169:
 4016              	.LBB1170:
 4017 00e2 C3E90064 		strd	r6, r4, [r3]
 4018 00e6 C3E90244 		strd	r4, r4, [r3, #8]
 4019              	.LBE1170:
 4020              	.LBE1169:
 4021              	.LBE1168:
 4022              	.LBE1175:
 4023              	.LBE1178:
 4024              	.LBB1179:
 4025              	.LBB1163:
 4026              	.LBB1160:
 4027              	.LBB1158:
 4028              	.LBB1156:
 4029 00ea C2E90244 		strd	r4, r4, [r2, #8]
 4030              	.LVL212:
  69:../../libDaisy//src/per/gpio.h ****         {
 4031              		.loc 21 69 73 view .LVU1067
 4032              	.LBE1156:
 4033              	.LBE1158:
 4034              	.LBE1160:
 4035              	.LBE1163:
 4036              	.LBE1179:
 4037              	.LBB1180:
 4038              	.LBI1136:
 4039              		.loc 21 74 5 is_stmt 1 view .LVU1068
 4040              	.LBB1146:
 4041              	.LBB1144:
 4042              	.LBI1138:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 4043              		.loc 21 68 9 view .LVU1069
 4044              	.LBB1143:
 4045              	.LBB1142:
 4046              	.LBB1141:
 4047              	.LBI1141:
 4048              		.loc 22 272 15 view .LVU1070
 4049              		.loc 22 272 15 is_stmt 0 view .LVU1071
 4050              	.LBE1141:
 4051              	.LBE1142:
 4052              	.LBE1143:
 4053              	.LBE1144:
 4054              	.LBE1146:
 4055              	.LBE1180:
 4056              	.LBB1181:
 4057              	.LBI1166:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 124


 4058              		.loc 21 74 5 is_stmt 1 view .LVU1072
 4059              	.LBB1176:
 4060              	.LBB1174:
 4061              	.LBI1168:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 4062              		.loc 21 68 9 view .LVU1073
 4063              	.LBB1173:
 4064              	.LBB1172:
 4065              	.LBB1171:
 4066              	.LBI1171:
 4067              		.loc 22 272 15 view .LVU1074
 4068              		.loc 22 272 15 is_stmt 0 view .LVU1075
 4069              	.LBE1171:
 4070              	.LBE1172:
 4071              	.LBE1173:
 4072              	.LBE1174:
 4073              	.LBE1176:
 4074              	.LBE1181:
 4075              	.LBB1182:
 4076              	.LBI1182:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 4077              		.loc 3 24 5 is_stmt 1 view .LVU1076
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 4078              		.loc 3 24 5 is_stmt 0 view .LVU1077
 4079              	.LBE1182:
  43:AmpSim.cpp    **** Led led_time_pwm;
 4080              		.loc 15 43 5 view .LVU1078
 4081 00ee 2A46     		mov	r2, r5
 4082 00f0 FFF7FEFF 		bl	__aeabi_atexit
 4083              	.LVL213:
 4084              	.LBB1183:
 4085              	.LBI1183:
  18:../../libDaisy//src/hid/gatein.h **** 
 4086              		.loc 2 18 5 is_stmt 1 view .LVU1079
 4087              	.LBB1184:
 4088              	.LBB1185:
 4089              	.LBI1185:
 4090              		.loc 21 74 5 view .LVU1080
 4091              	.LBB1186:
 4092              	.LBB1187:
 4093              	.LBI1187:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 4094              		.loc 21 68 9 view .LVU1081
 4095              	.LBB1188:
 4096              	.LBB1189:
 4097              	.LBB1190:
 4098              	.LBI1190:
 4099              		.loc 22 272 15 view .LVU1082
 4100              		.loc 22 272 15 is_stmt 0 view .LVU1083
 4101              	.LBE1190:
 4102              	.LBE1189:
 4103              	.LBE1188:
 4104              	.LBE1187:
 4105              	.LBE1186:
 4106              	.LBE1185:
  18:../../libDaisy//src/hid/gatein.h **** 
 4107              		.loc 2 18 14 view .LVU1084
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 125


 4108 00f4 2748     		ldr	r0, .L117+108
 4109              	.LBE1184:
 4110              	.LBE1183:
  46:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 4111              		.loc 15 46 8 view .LVU1085
 4112 00f6 2A46     		mov	r2, r5
 4113 00f8 2749     		ldr	r1, .L117+112
 4114              	.LBB1197:
 4115              	.LBB1196:
 4116              	.LBB1195:
 4117              	.LBB1194:
 4118              	.LBB1193:
 4119              	.LBB1192:
 4120              	.LBB1191:
  69:../../libDaisy//src/per/gpio.h ****         {
 4121              		.loc 21 69 73 view .LVU1086
 4122 00fa C0E90064 		strd	r6, r4, [r0]
 4123 00fe C0E90244 		strd	r4, r4, [r0, #8]
 4124              	.LVL214:
  69:../../libDaisy//src/per/gpio.h ****         {
 4125              		.loc 21 69 73 view .LVU1087
 4126              	.LBE1191:
 4127              	.LBE1192:
 4128              	.LBE1193:
 4129              	.LBE1194:
 4130              	.LBE1195:
 4131              	.LBE1196:
 4132              	.LBE1197:
  46:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 4133              		.loc 15 46 8 view .LVU1088
 4134 0102 FFF7FEFF 		bl	__aeabi_atexit
 4135              	.LVL215:
 4136              	.LBB1198:
 4137              	.LBI1198:
  18:../../libDaisy//src/hid/gatein.h **** 
 4138              		.loc 2 18 5 is_stmt 1 view .LVU1089
 4139              	.LBB1199:
 4140              	.LBB1200:
 4141              	.LBI1200:
 4142              		.loc 21 74 5 view .LVU1090
 4143              	.LBB1201:
 4144              	.LBB1202:
 4145              	.LBI1202:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 4146              		.loc 21 68 9 view .LVU1091
 4147              	.LBB1203:
 4148              	.LBB1204:
 4149              	.LBB1205:
 4150              	.LBI1205:
 4151              		.loc 22 272 15 view .LVU1092
 4152              		.loc 22 272 15 is_stmt 0 view .LVU1093
 4153              	.LBE1205:
 4154              	.LBE1204:
 4155              	.LBE1203:
 4156              	.LBE1202:
 4157              	.LBE1201:
 4158              	.LBE1200:
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 126


  18:../../libDaisy//src/hid/gatein.h **** 
 4159              		.loc 2 18 14 view .LVU1094
 4160 0106 2548     		ldr	r0, .L117+116
 4161              	.LBE1199:
 4162              	.LBE1198:
  46:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 4163              		.loc 15 46 23 view .LVU1095
 4164 0108 2A46     		mov	r2, r5
 4165 010a 2349     		ldr	r1, .L117+112
 4166              	.LBB1212:
 4167              	.LBB1211:
  18:../../libDaisy//src/hid/gatein.h **** 
 4168              		.loc 2 18 14 view .LVU1096
 4169 010c 0660     		str	r6, [r0]
 4170              	.LBB1210:
 4171              	.LBB1209:
 4172              	.LBB1208:
 4173              	.LBB1207:
 4174              	.LBB1206:
  69:../../libDaisy//src/per/gpio.h ****         {
 4175              		.loc 21 69 73 view .LVU1097
 4176 010e C460     		str	r4, [r0, #12]
 4177              	.LVL216:
  69:../../libDaisy//src/per/gpio.h ****         {
 4178              		.loc 21 69 73 view .LVU1098
 4179 0110 C0E90144 		strd	r4, r4, [r0, #4]
 4180              	.LBE1206:
 4181              	.LBE1207:
 4182              	.LBE1208:
 4183              	.LBE1209:
 4184              	.LBE1210:
 4185              	.LBE1211:
 4186              	.LBE1212:
  46:AmpSim.cpp    **** GateIn button_stereo, button_cv;
 4187              		.loc 15 46 23 view .LVU1099
 4188 0114 FFF7FEFF 		bl	__aeabi_atexit
 4189              	.LVL217:
 4190              	.LBB1213:
 4191              	.LBI1213:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 4192              		.loc 10 23 5 is_stmt 1 view .LVU1100
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 4193              		.loc 10 23 5 is_stmt 0 view .LVU1101
 4194              	.LBE1213:
  48:AmpSim.cpp    **** Oscillator time_osc;
 4195              		.loc 15 48 12 view .LVU1102
 4196 0118 2A46     		mov	r2, r5
 4197 011a 2149     		ldr	r1, .L117+120
 4198 011c 2148     		ldr	r0, .L117+124
 4199              	.LBE1215:
 4200              	.LBE1218:
 4201              		.loc 15 341 1 view .LVU1103
 4202 011e BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 4203              		.cfi_restore 14
 4204              		.cfi_restore 8
 4205              		.cfi_restore 7
 4206              		.cfi_restore 6
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 127


 4207              		.cfi_restore 5
 4208              		.cfi_restore 4
 4209              		.cfi_def_cfa_offset 0
 4210              	.LBB1219:
 4211              	.LBB1216:
  48:AmpSim.cpp    **** Oscillator time_osc;
 4212              		.loc 15 48 12 view .LVU1104
 4213 0122 FFF7FEBF 		b	__aeabi_atexit
 4214              	.LVL218:
 4215              	.L118:
 4216 0126 00BF     		.align	2
 4217              	.L117:
 4218 0128 00000000 		.word	.LANCHOR19
 4219 012c 00000000 		.word	__dso_handle
 4220 0130 00000000 		.word	_ZN7daisysp3SvfD1Ev
 4221 0134 00000000 		.word	_ZN5daisy8patch_sm12DaisyPatchSMD1Ev
 4222 0138 00000000 		.word	_ZN7daisysp7OnePoleD1Ev
 4223 013c 00000000 		.word	.LANCHOR35
 4224 0140 00000000 		.word	.LANCHOR38
 4225 0144 00000000 		.word	.LANCHOR36
 4226 0148 00000000 		.word	.LANCHOR37
 4227 014c 00000000 		.word	.LANCHOR39
 4228 0150 00000000 		.word	_ZN7daisysp9OverdriveD1Ev
 4229 0154 00000000 		.word	.LANCHOR40
 4230 0158 00000000 		.word	_ZN5daisy6SwitchD1Ev
 4231 015c 0C530700 		.word	_ZL4dlyl
 4232 0160 00000000 		.word	_ZL4dlyr
 4233 0164 00000000 		.word	.LANCHOR3
 4234 0168 00000000 		.word	.LANCHOR0
 4235 016c 00000000 		.word	.LANCHOR6
 4236 0170 00000000 		.word	.LANCHOR2
 4237 0174 00000000 		.word	.LANCHOR5
 4238 0178 00000000 		.word	_ZN5daisy3LedD1Ev
 4239 017c 00000000 		.word	.LANCHOR34
 4240 0180 00000000 		.word	.LANCHOR9
 4241 0184 00000000 		.word	.LANCHOR8
 4242 0188 00000000 		.word	.LANCHOR14
 4243 018c 00000000 		.word	.LANCHOR15
 4244 0190 00000000 		.word	.LANCHOR11
 4245 0194 00000000 		.word	.LANCHOR12
 4246 0198 00000000 		.word	_ZN5daisy6GateInD1Ev
 4247 019c 00000000 		.word	.LANCHOR16
 4248 01a0 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 4249 01a4 00000000 		.word	.LANCHOR33
 4250 01a8 00000000 		.word	_ZN7daisysp9DelayLineIfLj120000EED1Ev
 4251              	.LBE1216:
 4252              	.LBE1219:
 4253              		.cfi_endproc
 4254              	.LFE5266:
 4256              		.section	.init_array,"aw",%init_array
 4257              		.align	2
 4258 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 4259              		.global	led_brightness
 4260              		.global	dryWet
 4261              		.global	cutoff
 4262              		.global	delayTarget
 4263              		.global	feedback
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 128


 4264              		.global	currentDelay
 4265              		.global	maxDelay
 4266              		.global	state_cv_button
 4267              		.global	state_stereo_button
 4268              		.global	state_cv
 4269              		.global	state_stereo
 4270              		.global	state_fx
 4271              		.global	state_blend
 4272              		.global	state_link
 4273              		.global	time_osc
 4274              		.global	button_cv
 4275              		.global	button_stereo
 4276              		.global	led_time_pwm
 4277              		.global	led_time
 4278              		.global	led_stereo
 4279              		.global	led_split
 4280              		.global	led_reverb
 4281              		.global	led_delay
 4282              		.global	led_blend
 4283              		.global	led_link
 4284              		.global	button_fx
 4285              		.global	button_blend
 4286              		.global	button_link
 4287              		.global	knob_mid_freq
 4288              		.global	knob_fx_tone
 4289              		.global	knob_fx_time
 4290              		.global	knob_fx_feedback
 4291              		.global	knob_fx_dry_wet
 4292              		.global	knob_color
 4293              		.global	knob_bass
 4294              		.global	knob_mid_gain
 4295              		.global	knob_treble
 4296              		.global	knob_volume
 4297              		.global	knob_gain
 4298              		.global	hw
 4299              		.section	.bss._ZL10AmpLowPass,"aw",%nobits
 4300              		.align	2
 4301              		.set	.LANCHOR35,. + 0
 4304              	_ZL10AmpLowPass:
 4305 0000 00000000 		.space	16
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4306              		.section	.bss._ZL11AmpBandPass,"aw",%nobits
 4307              		.align	2
 4308              		.set	.LANCHOR36,. + 0
 4311              	_ZL11AmpBandPass:
 4312 0000 00000000 		.space	76
 4312      00000000 
 4312      00000000 
 4312      00000000 
 4312      00000000 
 4313              		.section	.bss._ZL11BassLowPass,"aw",%nobits
 4314              		.align	2
 4315              		.set	.LANCHOR38,. + 0
 4318              	_ZL11BassLowPass:
 4319 0000 00000000 		.space	76
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 129


 4319      00000000 
 4319      00000000 
 4319      00000000 
 4319      00000000 
 4320              		.section	.bss._ZL11MidBandPass,"aw",%nobits
 4321              		.align	2
 4322              		.set	.LANCHOR39,. + 0
 4325              	_ZL11MidBandPass:
 4326 0000 00000000 		.space	76
 4326      00000000 
 4326      00000000 
 4326      00000000 
 4326      00000000 
 4327              		.section	.bss._ZL14TrebleBandPass,"aw",%nobits
 4328              		.align	2
 4329              		.set	.LANCHOR37,. + 0
 4332              	_ZL14TrebleBandPass:
 4333 0000 00000000 		.space	76
 4333      00000000 
 4333      00000000 
 4333      00000000 
 4333      00000000 
 4334              		.section	.bss._ZL5Drive,"aw",%nobits
 4335              		.align	2
 4336              		.set	.LANCHOR40,. + 0
 4339              	_ZL5Drive:
 4340 0000 00000000 		.space	12
 4340      00000000 
 4340      00000000 
 4341              		.section	.bss.button_blend,"aw",%nobits
 4342              		.align	2
 4343              		.set	.LANCHOR0,. + 0
 4346              	button_blend:
 4347 0000 00000000 		.space	16
 4347      00000000 
 4347      00000000 
 4347      00000000 
 4348              		.section	.bss.button_cv,"aw",%nobits
 4349              		.align	2
 4350              		.set	.LANCHOR16,. + 0
 4353              	button_cv:
 4354 0000 00000000 		.space	24
 4354      00000000 
 4354      00000000 
 4354      00000000 
 4354      00000000 
 4355              		.section	.bss.button_fx,"aw",%nobits
 4356              		.align	2
 4357              		.set	.LANCHOR6,. + 0
 4360              	button_fx:
 4361 0000 00000000 		.space	16
 4361      00000000 
 4361      00000000 
 4361      00000000 
 4362              		.section	.bss.button_link,"aw",%nobits
 4363              		.align	2
 4364              		.set	.LANCHOR3,. + 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 130


 4367              	button_link:
 4368 0000 00000000 		.space	16
 4368      00000000 
 4368      00000000 
 4368      00000000 
 4369              		.section	.bss.button_stereo,"aw",%nobits
 4370              		.align	2
 4371              		.set	.LANCHOR12,. + 0
 4374              	button_stereo:
 4375 0000 00000000 		.space	24
 4375      00000000 
 4375      00000000 
 4375      00000000 
 4375      00000000 
 4376              		.section	.bss.currentDelay,"aw",%nobits
 4377              		.align	2
 4378              		.set	.LANCHOR31,. + 0
 4381              	currentDelay:
 4382 0000 00000000 		.space	4
 4383              		.section	.bss.cutoff,"aw",%nobits
 4384              		.align	2
 4387              	cutoff:
 4388 0000 00000000 		.space	4
 4389              		.section	.bss.delayTarget,"aw",%nobits
 4390              		.align	2
 4391              		.set	.LANCHOR41,. + 0
 4394              	delayTarget:
 4395 0000 00000000 		.space	4
 4396              		.section	.bss.dryWet,"aw",%nobits
 4397              		.align	2
 4400              	dryWet:
 4401 0000 00000000 		.space	20
 4401      00000000 
 4401      00000000 
 4401      00000000 
 4401      00000000 
 4402              		.section	.bss.feedback,"aw",%nobits
 4403              		.align	2
 4406              	feedback:
 4407 0000 00000000 		.space	4
 4408              		.section	.bss.hw,"aw",%nobits
 4409              		.align	2
 4410              		.set	.LANCHOR19,. + 0
 4413              	hw:
 4414 0000 00000000 		.space	496
 4414      00000000 
 4414      00000000 
 4414      00000000 
 4414      00000000 
 4415              		.section	.bss.knob_bass,"aw",%nobits
 4416              		.align	2
 4417              		.set	.LANCHOR25,. + 0
 4420              	knob_bass:
 4421 0000 00000000 		.space	4
 4422              		.section	.bss.knob_color,"aw",%nobits
 4423              		.align	2
 4424              		.set	.LANCHOR26,. + 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 131


 4427              	knob_color:
 4428 0000 00000000 		.space	4
 4429              		.section	.bss.knob_fx_dry_wet,"aw",%nobits
 4430              		.align	2
 4431              		.set	.LANCHOR27,. + 0
 4434              	knob_fx_dry_wet:
 4435 0000 00000000 		.space	4
 4436              		.section	.bss.knob_fx_feedback,"aw",%nobits
 4437              		.align	2
 4438              		.set	.LANCHOR29,. + 0
 4441              	knob_fx_feedback:
 4442 0000 00000000 		.space	4
 4443              		.section	.bss.knob_fx_time,"aw",%nobits
 4444              		.align	2
 4445              		.set	.LANCHOR28,. + 0
 4448              	knob_fx_time:
 4449 0000 00000000 		.space	4
 4450              		.section	.bss.knob_fx_tone,"aw",%nobits
 4451              		.align	2
 4452              		.set	.LANCHOR30,. + 0
 4455              	knob_fx_tone:
 4456 0000 00000000 		.space	4
 4457              		.section	.bss.knob_gain,"aw",%nobits
 4458              		.align	2
 4459              		.set	.LANCHOR20,. + 0
 4462              	knob_gain:
 4463 0000 00000000 		.space	4
 4464              		.section	.bss.knob_mid_freq,"aw",%nobits
 4465              		.align	1
 4466              		.set	.LANCHOR23,. + 0
 4469              	knob_mid_freq:
 4470 0000 0000     		.space	2
 4471              		.section	.bss.knob_mid_gain,"aw",%nobits
 4472              		.align	2
 4473              		.set	.LANCHOR24,. + 0
 4476              	knob_mid_gain:
 4477 0000 00000000 		.space	4
 4478              		.section	.bss.knob_treble,"aw",%nobits
 4479              		.align	2
 4480              		.set	.LANCHOR22,. + 0
 4483              	knob_treble:
 4484 0000 00000000 		.space	4
 4485              		.section	.bss.knob_volume,"aw",%nobits
 4486              		.align	2
 4487              		.set	.LANCHOR21,. + 0
 4490              	knob_volume:
 4491 0000 00000000 		.space	4
 4492              		.section	.bss.led_blend,"aw",%nobits
 4493              		.align	2
 4494              		.set	.LANCHOR2,. + 0
 4497              	led_blend:
 4498 0000 00000000 		.space	20
 4498      00000000 
 4498      00000000 
 4498      00000000 
 4498      00000000 
 4499              		.section	.bss.led_brightness,"aw",%nobits
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 132


 4500              		.align	2
 4503              	led_brightness:
 4504 0000 00000000 		.space	4
 4505              		.section	.bss.led_delay,"aw",%nobits
 4506              		.align	2
 4507              		.set	.LANCHOR8,. + 0
 4510              	led_delay:
 4511 0000 00000000 		.space	20
 4511      00000000 
 4511      00000000 
 4511      00000000 
 4511      00000000 
 4512              		.section	.bss.led_link,"aw",%nobits
 4513              		.align	2
 4514              		.set	.LANCHOR5,. + 0
 4517              	led_link:
 4518 0000 00000000 		.space	20
 4518      00000000 
 4518      00000000 
 4518      00000000 
 4518      00000000 
 4519              		.section	.bss.led_reverb,"aw",%nobits
 4520              		.align	2
 4521              		.set	.LANCHOR9,. + 0
 4524              	led_reverb:
 4525 0000 00000000 		.space	20
 4525      00000000 
 4525      00000000 
 4525      00000000 
 4525      00000000 
 4526              		.section	.bss.led_split,"aw",%nobits
 4527              		.align	2
 4528              		.set	.LANCHOR15,. + 0
 4531              	led_split:
 4532 0000 00000000 		.space	20
 4532      00000000 
 4532      00000000 
 4532      00000000 
 4532      00000000 
 4533              		.section	.bss.led_stereo,"aw",%nobits
 4534              		.align	2
 4535              		.set	.LANCHOR14,. + 0
 4538              	led_stereo:
 4539 0000 00000000 		.space	20
 4539      00000000 
 4539      00000000 
 4539      00000000 
 4539      00000000 
 4540              		.section	.bss.led_time,"aw",%nobits
 4541              		.align	2
 4542              		.set	.LANCHOR11,. + 0
 4545              	led_time:
 4546 0000 00000000 		.space	20
 4546      00000000 
 4546      00000000 
 4546      00000000 
 4546      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 133


 4547              		.section	.bss.led_time_pwm,"aw",%nobits
 4548              		.align	2
 4549              		.set	.LANCHOR34,. + 0
 4552              	led_time_pwm:
 4553 0000 00000000 		.space	28
 4553      00000000 
 4553      00000000 
 4553      00000000 
 4553      00000000 
 4554              		.section	.bss.maxDelay,"aw",%nobits
 4555              		.align	2
 4556              		.set	.LANCHOR32,. + 0
 4559              	maxDelay:
 4560 0000 00000000 		.space	4
 4561              		.section	.bss.state_blend,"aw",%nobits
 4562              		.set	.LANCHOR1,. + 0
 4565              	state_blend:
 4566 0000 00       		.space	1
 4567              		.section	.bss.state_cv,"aw",%nobits
 4568              		.set	.LANCHOR18,. + 0
 4571              	state_cv:
 4572 0000 00       		.space	1
 4573              		.section	.bss.state_cv_button,"aw",%nobits
 4574              		.set	.LANCHOR17,. + 0
 4577              	state_cv_button:
 4578 0000 00       		.space	1
 4579              		.section	.bss.state_fx,"aw",%nobits
 4580              		.set	.LANCHOR7,. + 0
 4583              	state_fx:
 4584 0000 00       		.space	1
 4585              		.section	.bss.state_link,"aw",%nobits
 4586              		.set	.LANCHOR4,. + 0
 4589              	state_link:
 4590 0000 00       		.space	1
 4591              		.section	.bss.state_stereo,"aw",%nobits
 4592              		.set	.LANCHOR10,. + 0
 4595              	state_stereo:
 4596 0000 00       		.space	1
 4597              		.section	.bss.state_stereo_button,"aw",%nobits
 4598              		.set	.LANCHOR13,. + 0
 4601              	state_stereo_button:
 4602 0000 00       		.space	1
 4603              		.section	.bss.time_osc,"aw",%nobits
 4604              		.align	2
 4605              		.set	.LANCHOR33,. + 0
 4608              	time_osc:
 4609 0000 00000000 		.space	44
 4609      00000000 
 4609      00000000 
 4609      00000000 
 4609      00000000 
 4610              		.section	.sdram_bss,"aw"
 4611              		.align	2
 4614              	_ZL4dlyr:
 4615 0000 00000000 		.space	480012
 4615      00000000 
 4615      00000000 
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 134


 4615      00000000 
 4615      00000000 
 4618              	_ZL4dlyl:
 4619 7530c 00000000 		.space	480012
 4619      00000000 
 4619      00000000 
 4619      00000000 
 4619      00000000 
 4620              		.text
 4621              	.Letext0:
 4622              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 4623              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 4624              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 4625              		.file 26 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 4626              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 4627              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 4628              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 4629              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 4630              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 4631              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 4632              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 4633              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 4634              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 4635              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 4636              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 4637              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 4638              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 4639              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 4640              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 4641              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 4642              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 4643              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 4644              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 4645              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 4646              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 4647              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 4648              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 4649              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 4650              		.file 51 "../../libDaisy//src/per/tim.h"
 4651              		.file 52 "../../libDaisy//src/per/sai.h"
 4652              		.file 53 "../../libDaisy//src/hid/ctrl.h"
 4653              		.file 54 "../../libDaisy//src/util/wav_format.h"
 4654              		.file 55 "../../libDaisy//src/dev/max11300.h"
 4655              		.file 56 "../../libDaisy//src/dev/sdram.h"
 4656              		.file 57 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 4657              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 4658              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 4659              		.file 60 "../../DaisySP//Source/Control/adenv.h"
 4660              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 4661              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 4662              		.file 63 "../../libDaisy//src/dev/sr_595.h"
 4663              		.file 64 "<built-in>"
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 135


DEFINED SYMBOLS
                            *ABS*:00000000 AmpSim.cpp
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:17     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:43     .text._ZN5daisy6GateInD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:51     .text._ZN5daisy6GateInD2Ev:00000000 _ZN5daisy6GateInD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:51     .text._ZN5daisy6GateInD2Ev:00000000 _ZN5daisy6GateInD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:68     .text._ZN5daisy3LedD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:76     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:76     .text._ZN5daisy3LedD2Ev:00000000 _ZN5daisy3LedD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:93     .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:101    .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:101    .text._ZN5daisy8patch_sm12DaisyPatchSMD2Ev:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:158    .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:166    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:166    .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:183    .text._ZN7daisysp3SvfD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:191    .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:191    .text._ZN7daisysp3SvfD2Ev:00000000 _ZN7daisysp3SvfD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:208    .text._ZN7daisysp9OverdriveD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:216    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:216    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:233    .text._ZN7daisysp7OnePoleD2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:241    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:241    .text._ZN7daisysp7OnePoleD2Ev:00000000 _ZN7daisysp7OnePoleD1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:258    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:266    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj120000EED2Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:266    .text._ZN7daisysp9DelayLineIfLj120000EED2Ev:00000000 _ZN7daisysp9DelayLineIfLj120000EED1Ev
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:283    .text._Z11readButtonsv:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:291    .text._Z11readButtonsv:00000000 _Z11readButtonsv
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:766    .text._Z11readButtonsv:00000140 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:789    .text._Z9readKnobsv:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:797    .text._Z9readKnobsv:00000000 _Z9readKnobsv
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1060   .text._Z9readKnobsv:00000138 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1086   .text._Z18setFilterConstantsf:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1094   .text._Z18setFilterConstantsf:00000000 _Z18setFilterConstantsf
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1499   .text._Z18setFilterConstantsf:00000138 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4618   .sdram_bss:0007530c _ZL4dlyl
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4614   .sdram_bss:00000000 _ZL4dlyr
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1525   .text.startup.main:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1533   .text.startup.main:00000000 main
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1906   .text.startup.main:000001d4 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2588   .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1939   .text._Z15GetReverbSampleRfS_:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1947   .text._Z15GetReverbSampleRfS_:00000000 _Z15GetReverbSampleRfS_
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1961   .text._Z14GetDelaySampleRfS_:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:1969   .text._Z14GetDelaySampleRfS_:00000000 _Z14GetDelaySampleRfS_
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2394   .text._Z14GetDelaySampleRfS_:00000138 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2407   .text._Z10process_fxRfS_:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2415   .text._Z10process_fxRfS_:00000000 _Z10process_fxRfS_
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2573   .text._Z10process_fxRfS_:000000d8 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:2580   .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:3316   .text._Z13AudioCallbackPKPKfPPfj:00000378 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:3346   .text._Z13AudioCallbackPKPKfPPfj:000003dc $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:3427   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:3434   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 136


C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4218   .text.startup._GLOBAL__sub_I_hw:00000128 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4257   .init_array:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4503   .bss.led_brightness:00000000 led_brightness
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4400   .bss.dryWet:00000000 dryWet
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4387   .bss.cutoff:00000000 cutoff
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4394   .bss.delayTarget:00000000 delayTarget
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4406   .bss.feedback:00000000 feedback
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4381   .bss.currentDelay:00000000 currentDelay
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4559   .bss.maxDelay:00000000 maxDelay
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4577   .bss.state_cv_button:00000000 state_cv_button
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4601   .bss.state_stereo_button:00000000 state_stereo_button
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4571   .bss.state_cv:00000000 state_cv
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4595   .bss.state_stereo:00000000 state_stereo
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4583   .bss.state_fx:00000000 state_fx
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4565   .bss.state_blend:00000000 state_blend
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4589   .bss.state_link:00000000 state_link
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4608   .bss.time_osc:00000000 time_osc
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4353   .bss.button_cv:00000000 button_cv
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4374   .bss.button_stereo:00000000 button_stereo
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4552   .bss.led_time_pwm:00000000 led_time_pwm
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4545   .bss.led_time:00000000 led_time
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4538   .bss.led_stereo:00000000 led_stereo
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4531   .bss.led_split:00000000 led_split
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4524   .bss.led_reverb:00000000 led_reverb
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4510   .bss.led_delay:00000000 led_delay
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4497   .bss.led_blend:00000000 led_blend
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4517   .bss.led_link:00000000 led_link
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4360   .bss.button_fx:00000000 button_fx
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4346   .bss.button_blend:00000000 button_blend
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4367   .bss.button_link:00000000 button_link
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4469   .bss.knob_mid_freq:00000000 knob_mid_freq
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4455   .bss.knob_fx_tone:00000000 knob_fx_tone
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4448   .bss.knob_fx_time:00000000 knob_fx_time
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4441   .bss.knob_fx_feedback:00000000 knob_fx_feedback
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4434   .bss.knob_fx_dry_wet:00000000 knob_fx_dry_wet
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4427   .bss.knob_color:00000000 knob_color
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4420   .bss.knob_bass:00000000 knob_bass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4476   .bss.knob_mid_gain:00000000 knob_mid_gain
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4483   .bss.knob_treble:00000000 knob_treble
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4490   .bss.knob_volume:00000000 knob_volume
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4462   .bss.knob_gain:00000000 knob_gain
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4413   .bss.hw:00000000 hw
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4300   .bss._ZL10AmpLowPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4304   .bss._ZL10AmpLowPass:00000000 _ZL10AmpLowPass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4307   .bss._ZL11AmpBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4311   .bss._ZL11AmpBandPass:00000000 _ZL11AmpBandPass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4314   .bss._ZL11BassLowPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4318   .bss._ZL11BassLowPass:00000000 _ZL11BassLowPass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4321   .bss._ZL11MidBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4325   .bss._ZL11MidBandPass:00000000 _ZL11MidBandPass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4328   .bss._ZL14TrebleBandPass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4332   .bss._ZL14TrebleBandPass:00000000 _ZL14TrebleBandPass
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4335   .bss._ZL5Drive:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4339   .bss._ZL5Drive:00000000 _ZL5Drive
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4342   .bss.button_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4349   .bss.button_cv:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4356   .bss.button_fx:00000000 $d
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 137


C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4363   .bss.button_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4370   .bss.button_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4377   .bss.currentDelay:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4384   .bss.cutoff:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4390   .bss.delayTarget:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4397   .bss.dryWet:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4403   .bss.feedback:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4409   .bss.hw:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4416   .bss.knob_bass:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4423   .bss.knob_color:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4430   .bss.knob_fx_dry_wet:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4437   .bss.knob_fx_feedback:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4444   .bss.knob_fx_time:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4451   .bss.knob_fx_tone:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4458   .bss.knob_gain:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4465   .bss.knob_mid_freq:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4472   .bss.knob_mid_gain:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4479   .bss.knob_treble:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4486   .bss.knob_volume:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4493   .bss.led_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4500   .bss.led_brightness:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4506   .bss.led_delay:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4513   .bss.led_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4520   .bss.led_reverb:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4527   .bss.led_split:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4534   .bss.led_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4541   .bss.led_time:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4548   .bss.led_time_pwm:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4555   .bss.maxDelay:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4566   .bss.state_blend:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4572   .bss.state_cv:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4578   .bss.state_cv_button:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4584   .bss.state_fx:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4590   .bss.state_link:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4596   .bss.state_stereo:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4602   .bss.state_stereo_button:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4604   .bss.time_osc:00000000 $d
C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s:4611   .sdram_bss:00000000 $d
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy6GateInD5Ev
                           .group:00000000 _ZN5daisy3LedD5Ev
                           .group:00000000 _ZN5daisy8patch_sm12DaisyPatchSMD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev
                           .group:00000000 _ZN7daisysp3SvfD5Ev
                           .group:00000000 _ZN7daisysp9OverdriveD5Ev
                           .group:00000000 _ZN7daisysp7OnePoleD5Ev
                           .group:00000000 _ZN7daisysp9DelayLineIfLj120000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy6Switch8DebounceEv
_ZN5daisy4GPIO4ReadEv
_ZN5daisy4GPIO5WriteEb
_ZN5daisy8patch_sm12DaisyPatchSM21ProcessAnalogControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM22ProcessDigitalControlsEv
_ZN5daisy8patch_sm12DaisyPatchSM11GetAdcValueEi
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
ARM GAS  C:\Users\PC\AppData\Local\Temp\cczWoZRZ.s 			page 138


_ZN5daisy3Led3SetEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp9Overdrive8SetDriveEf
_ZN7daisysp9Overdrive4InitEv
memset
_ZN5daisy8patch_sm12DaisyPatchSM4InitEv
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitENS_3PinEb
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy3Led4InitE12dsy_gpio_pinbf
_ZN5daisy8patch_sm12DaisyPatchSM15AudioSampleRateEv
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy8patch_sm12DaisyPatchSM17SetAudioBlockSizeEj
_ZN5daisy8patch_sm12DaisyPatchSM18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy8patch_sm12DaisyPatchSM10StartAudioEPFvPKPKfPPfjE
_ZN5daisy3Led6UpdateEv
_ZN5daisy8patch_sm12DaisyPatchSM3B10E
_ZN5daisy8patch_sm12DaisyPatchSM2B9E
_ZN5daisy8patch_sm12DaisyPatchSM2A9E
_ZN5daisy8patch_sm12DaisyPatchSM2D3E
_ZN5daisy8patch_sm12DaisyPatchSM2D4E
_ZN5daisy8patch_sm12DaisyPatchSM2D5E
_ZN5daisy8patch_sm12DaisyPatchSM2B5E
_ZN5daisy8patch_sm12DaisyPatchSM2B6E
_ZN7daisysp3Svf7ProcessEf
_ZN7daisysp9Overdrive7ProcessEf
__aeabi_atexit
__dso_handle
